version: 2.0

anchor_test_env: &anchor_test_env
  docker:
    - image: googleapis/artman:0.14.3
  environment:
    RUNNING_IN_ARTMAN_DOCKER: True
  working_directory: /tmp/

jobs:
  build:
    docker:
      # TODO: Find a way to cache the armtan executor docker image.
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
    working_directory: /tmp/workspace/gapic-generator
  install-toolkit:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: /tmp/workspace
    steps:
      - checkout:
          path: gapic-generator
      - run:
          command: ls gapic-generator
      - run:
          name: Checkout googleapis
          command: |
            mkdir -p googleapis
            git clone https://github.com/googleapis/googleapis.git googleapis
      - run:
          name: Build and install local toolkit
          command: |
            export RUNNING_IN_ARTMAN_DOCKER=True
            rm -rf gapic-generator/.git/
            gapic-generator/gradlew -p gapic-generator fatJar createToolPaths install build -x test
      - run:
          name: Make reports dir
          command: mkdir -p reports
      - persist_to_workspace:
          # Save all generated directories in workspace for later CircleCI jobs.
          root: /tmp/workspace
          paths:
            - googleapis
            - gapic-generator
            - reports
  test-java-pubsub:
    <<: *anchor_test_env
    steps:
      - attach_workspace:
          # Use the workspace created in install-toolkit
          at: workspace
      - run:
          name: Generate and run Java unit tests for Pubsub
          command: |
            cd workspace/gapic-generator
            python gapic_smoketest.py --user-config=artman_config.yaml java pubsub
      - store_test_results:
          path: /tmp/workspace/reports
      - store_artifacts:
          path: /tmp/workspace/reports
  test-java-logging:
      <<: *anchor_test_env
      steps:
        - attach_workspace:
            # Use the workspace created in install-toolkit
            at: workspace
        - run:
            name: Generate and run Java unit tests for Logging
            command: |
              cd workspace/gapic-generator
              python gapic_smoketest.py --user-config=artman_config.yaml java logging
        - store_test_results:
            path: /tmp/workspace/reports
        - store_artifacts:
            path: /tmp/workspace/reports
  test-java-speech:
      <<: *anchor_test_env
      steps:
        - attach_workspace:
            # Use the workspace created in install-toolkit
            at: workspace
        - run:
            name: Generate and run Java unit tests for Speech
            command: |
              cd workspace/gapic-generator
              python gapic_smoketest.py --user-config=artman_config.yaml java speech
        - store_test_results:
            path: /tmp/workspace/reports
        - store_artifacts:
            path: /tmp/workspace/reports

workflows:
  version: 2
  run_generated_tests:
    jobs:
      - install-toolkit
      - test-java-pubsub:
          requires:
            - install-toolkit
      - test-java-logging:
          requires:
            - install-toolkit
      - test-java-speech:
          requires:
            - install-toolkit

machine:
  services:
    - docker