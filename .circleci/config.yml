version: 2.0

# Tip: You can run `circleci config validate -c .circleci/config.yml`
# to validate this yaml after making changes to it.
# That requires a circleCI local installation:
# `curl -o /usr/local/bin/circleci \
#      https://circle-downloads.s3.amazonaws.com/releases/build_agent_wrapper/circleci \
#      && chmod +x /usr/local/bin/circleci`

# ======================= ANCHORS =======================

anchor_artman_vars: &anchor_artman_vars
  ARTMAN_REPORTS_DIR: /tmp/workspace/reports/generations

anchor_auth_vars: &anchor_auth_vars
  GCLOUD_PROJECT: gapic-test
  GOOGLE_APPLICATION_CREDENTIALS: /tmp/workspace/gapic-generator/.circleci/gapic-generator-it-test.json

anchor_run_decrypt: &anchor_run_decrypt
  name: Decrypt credentials (if encryption key is given)
  command: |
    if ! [ -z "$SYSTEM_TESTS_ENCRYPTION_KEY" ]
    then
      openssl aes-256-cbc -md sha256 -d \
          -in /tmp/workspace/gapic-generator/.circleci/gapic-generator-it-test.json.enc \
          -out /tmp/workspace/gapic-generator/.circleci/gapic-generator-it-test.json \
          -k "${SYSTEM_TESTS_ENCRYPTION_KEY}"
    fi

# ======================= JOBS =======================

jobs:
  build:
    docker:
      - image: googleapis/git
    steps:
      - checkout
    working_directory: /tmp/workspace/gapic-generator
  install-gapic-generator:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: /tmp/workspace
    environment:
      SHOWCASE_VERSION: 0.12.0
    steps:
      - checkout:
          path: gapic-generator
      - run:
          name: Checkout googleapis
          command: |
            git clone --single-branch https://github.com/googleapis/googleapis.git googleapis
      - run:
          name: Setup showcase protos.
          # Remove the other showcase protos, testing only uses echo.proto
          command: |
            mkdir showcase-protos
            curl -sL https://github.com/googleapis/gapic-showcase/releases/download/v${SHOWCASE_VERSION}/gapic-showcase-${SHOWCASE_VERSION}-protos.tar.gz | tar -C showcase-protos -xz
            curl -sL https://github.com/googleapis/gapic-showcase/releases/download/v${SHOWCASE_VERSION}/showcase_grpc_service_config.json > showcase-protos/google/showcase/v1beta1/showcase_grpc_service_config.json
            TEST_SRC="gapic-generator/src/test/java/com/google/api/codegen/testsrc/showcase"
            cp ${TEST_SRC}/showcase.yaml showcase-protos/google/showcase/
            cp ${TEST_SRC}/showcase_gapic.yaml showcase-protos/google/showcase/v1beta1/
            cp ${TEST_SRC}/artman_showcase.yaml showcase-protos/google/showcase/
            rm showcase-protos/google/showcase/v1beta1/identity.proto
            rm showcase-protos/google/showcase/v1beta1/messaging.proto
            rm showcase-protos/google/showcase/v1beta1/testing.proto

      - run:
          name: Build and install local toolkit
          command: |
            export RUNNING_IN_ARTMAN_DOCKER=True
            rm -rf gapic-generator/.git/
            gapic-generator/gradlew -p gapic-generator fatJar createToolPaths
      - persist_to_workspace:
          # Save the toolkit and googleapis installations in workspace for later CircleCI jobs.
          root: /tmp/workspace
          paths:
            - gapic-generator
            - googleapis
            - showcase-protos
  test-baselines:
    docker:
      - image: circleci/golang:1.11
    steps:
      - checkout
      - run:
          name: Test baselines
          command: |
            ./testutils/check-baselines.sh
  gapic-generator-bazel-test:
    working_directory: /tmp/
    environment:
      TEST_REPORTS_DIR: /tmp/workspace/bazel/reports/gapic-generator
      BAZEL_VERSION: 3.3.0
      PYTHON_VERSION: 3.5.2
    machine: true
    steps:
      - checkout:
          path: gapic-generator
      - attach_workspace:
          at: workspace
      - run:
          name: Set Python version
          command: |
            pyenv global ${PYTHON_VERSION}
      - run:
          name: Install Bazel
          command: |
            wget https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh -O bazel_installer.sh
            chmod +x bazel_installer.sh
            ./bazel_installer.sh --user
      - run:
          name: Make reports directory
          command: |
            mkdir -p ${TEST_REPORTS_DIR}
      - run:
          name: Run unit tests for gapic-generator
          command: |
            cd gapic-generator
            bazel test //...
            find . -type f -regex ".*/bazel-testlogs/.*xml" -exec cp {} ${TEST_REPORTS_DIR} \;
      - store_test_results:
          path: bazel/reports/gapic-generator
      - store_artifacts:
          path: bazel/reports/gapic-generator

# ======================= WORKFLOWS =======================

workflows:
  version: 2
  run_generated_tests:
    jobs:
      - install-gapic-generator
      - test-baselines
      - gapic-generator-bazel-test

machine:
  services:
    - docker
