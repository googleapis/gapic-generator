
var google = require('googleapis');
var GoogleAuth = require('google-auth-library');

var authFactory = new GoogleAuth();
var cloudbilling = google.cloudbilling('v1');

authFactory.getApplicationDefault(function(err, authClient) {
  if (err) {
    console.log('Authentication failed because of ', err);
    return;
  }
  if (authClient.createScopedRequired && authClient.createScopedRequired()) {
    var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
    authClient = authClient.createScoped(scopes);
  }

  var request = {
    // TODO: Change placeholders below to values for parameters to the 'get' method:

    // The resource name of the billing account to retrieve. For example, `billingAccounts/012345-567890-ABCDEF`.
    name: "",
    // Auth client
    auth: authClient
  };

  cloudbilling.billingAccounts.get(request, function(err, result) {
    if (err) {
      console.log(err);
    } else {
      console.log(result);
    }
  });
});
var google = require('googleapis');
var GoogleAuth = require('google-auth-library');

var authFactory = new GoogleAuth();
var cloudbilling = google.cloudbilling('v1');

authFactory.getApplicationDefault(function(err, authClient) {
  if (err) {
    console.log('Authentication failed because of ', err);
    return;
  }
  if (authClient.createScopedRequired && authClient.createScopedRequired()) {
    var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
    authClient = authClient.createScoped(scopes);
  }

  var request = {
    // TODO: Change placeholders below to values for parameters to the 'list' method:

    // Auth client
    auth: authClient
  };


  var recur = function(err, result) {
    if (err) {
      console.log(err);
    } else {
      console.log(result);
      if (result.nextPageToken) {
        request.pageToken = result.nextPageToken;
        cloudbilling.billingAccounts.list(request, recur);
      }
    }
  };

  cloudbilling.billingAccounts.list(request, recur);
});
var google = require('googleapis');
var GoogleAuth = require('google-auth-library');

var authFactory = new GoogleAuth();
var cloudbilling = google.cloudbilling('v1');

authFactory.getApplicationDefault(function(err, authClient) {
  if (err) {
    console.log('Authentication failed because of ', err);
    return;
  }
  if (authClient.createScopedRequired && authClient.createScopedRequired()) {
    var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
    authClient = authClient.createScoped(scopes);
  }

  var request = {
    // TODO: Change placeholders below to values for parameters to the 'list' method:

    // The resource name of the billing account associated with the projects that you want to list. For example, `billingAccounts/012345-567890-ABCDEF`.
    name: "",
    // Auth client
    auth: authClient
  };


  var recur = function(err, result) {
    if (err) {
      console.log(err);
    } else {
      console.log(result);
      if (result.nextPageToken) {
        request.pageToken = result.nextPageToken;
        cloudbilling.billingAccounts.projects.list(request, recur);
      }
    }
  };

  cloudbilling.billingAccounts.projects.list(request, recur);
});
var google = require('googleapis');
var GoogleAuth = require('google-auth-library');

var authFactory = new GoogleAuth();
var cloudbilling = google.cloudbilling('v1');

authFactory.getApplicationDefault(function(err, authClient) {
  if (err) {
    console.log('Authentication failed because of ', err);
    return;
  }
  if (authClient.createScopedRequired && authClient.createScopedRequired()) {
    var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
    authClient = authClient.createScoped(scopes);
  }

  var request = {
    // TODO: Change placeholders below to values for parameters to the 'getBillingInfo' method:

    // The resource name of the project for which billing information is retrieved. For example, `projects/tokyo-rain-123`.
    name: "",
    // Auth client
    auth: authClient
  };

  cloudbilling.projects.getBillingInfo(request, function(err, result) {
    if (err) {
      console.log(err);
    } else {
      console.log(result);
    }
  });
});
var google = require('googleapis');
var GoogleAuth = require('google-auth-library');

var authFactory = new GoogleAuth();
var cloudbilling = google.cloudbilling('v1');

authFactory.getApplicationDefault(function(err, authClient) {
  if (err) {
    console.log('Authentication failed because of ', err);
    return;
  }
  if (authClient.createScopedRequired && authClient.createScopedRequired()) {
    var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
    authClient = authClient.createScoped(scopes);
  }

  var request = {
    // TODO: Change placeholders below to values for parameters to the 'updateBillingInfo' method:

    // The resource name of the project associated with the billing information that you want to update. For example, `projects/tokyo-rain-123`.
    name: "",
    resource: {},
    // Auth client
    auth: authClient
  };

  cloudbilling.projects.updateBillingInfo(request, function(err, result) {
    if (err) {
      console.log(err);
    } else {
      console.log(result);
    }
  });
});
