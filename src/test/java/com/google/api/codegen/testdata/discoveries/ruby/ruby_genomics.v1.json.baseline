
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::BatchCreateAnnotationsRequest.new

response = service.batch_create_annotations(request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::Annotation.new

response = service.create_annotation(request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the annotation to be deleted.
annotation_id = 'my-annotation-id'  # TODO: Update placeholder value.

service.delete_annotation(annotation_id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the annotation to be retrieved.
annotation_id = 'my-annotation-id'  # TODO: Update placeholder value.

response = service.get_annotation(annotation_id)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::SearchAnnotationsRequest.new

annotations = service.fetch_all(items: :annotations) do |token|
  request_body.page_token = token
  service.search_annotations(request_body)
end

annotations.each do |annotation|
  # TODO: Change code below to process each `annotation` resource:
  puts annotation.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the annotation to be updated.
annotation_id = 'my-annotation-id'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::GenomicsV1::Annotation.new

response = service.update_annotation(annotation_id, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::AnnotationSet.new

response = service.create_annotation_set(request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the annotation set to be deleted.
annotation_set_id = 'my-annotation-set-id'  # TODO: Update placeholder value.

service.delete_annotationset(annotation_set_id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the annotation set to be retrieved.
annotation_set_id = 'my-annotation-set-id'  # TODO: Update placeholder value.

response = service.get_annotation_set(annotation_set_id)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::SearchAnnotationSetsRequest.new

annotation_sets = service.fetch_all(items: :annotation_sets) do |token|
  request_body.page_token = token
  service.search_annotationset_annotation_sets(request_body)
end

annotation_sets.each do |annotation_set|
  # TODO: Change code below to process each `annotation_set` resource:
  puts annotation_set.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the annotation set to be updated.
annotation_set_id = 'my-annotation-set-id'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::GenomicsV1::AnnotationSet.new

response = service.update_annotationset(annotation_set_id, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::CallSet.new

response = service.create_call_set(request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the call set to be deleted.
call_set_id = 'my-call-set-id'  # TODO: Update placeholder value.

service.delete_call_set(call_set_id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the call set.
call_set_id = 'my-call-set-id'  # TODO: Update placeholder value.

response = service.get_call_set(call_set_id)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the call set to be updated.
call_set_id = 'my-call-set-id'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::GenomicsV1::CallSet.new

response = service.patch_call_set(call_set_id, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::SearchCallSetsRequest.new

call_sets = service.fetch_all(items: :call_sets) do |token|
  request_body.page_token = token
  service.search_call_sets(request_body)
end

call_sets.each do |call_set|
  # TODO: Change code below to process each `call_set` resource:
  puts call_set.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::Dataset.new

response = service.create_dataset(request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the dataset to be deleted.
dataset_id = 'my-dataset-id'  # TODO: Update placeholder value.

service.delete_dataset(dataset_id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the dataset.
dataset_id = 'my-dataset-id'  # TODO: Update placeholder value.

response = service.get_dataset(dataset_id)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which policy is being specified. Format is `datasets/`.
resource = 'datasets/my-dataset'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::GetIamPolicyRequest.new

response = service.get_dataset_iam_policy(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

datasets = service.fetch_all(items: :datasets) do |token|
  service.list_datasets(page_token: token)
end

datasets.each do |dataset|
  # TODO: Change code below to process each `dataset` resource:
  puts dataset.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the dataset to be updated.
dataset_id = 'my-dataset-id'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::GenomicsV1::Dataset.new

response = service.patch_dataset(dataset_id, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which policy is being specified. Format is `datasets/`.
resource = 'datasets/my-dataset'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::SetIamPolicyRequest.new

response = service.set_dataset_iam_policy(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which policy is being specified. Format is `datasets/`.
resource = 'datasets/my-dataset'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::TestIamPermissionsRequest.new

response = service.test_dataset_iam_permissions(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the dataset to be undeleted.
dataset_id = 'my-dataset-id'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::UndeleteDatasetRequest.new

response = service.undelete_dataset(dataset_id, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the operation resource to be cancelled.
name = 'operations/my-operation'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::CancelOperationRequest.new

service.cancel_operation(name, request_body)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the operation resource.
name = 'operations/my-operation'  # TODO: Update placeholder value.

response = service.get_operation(name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the operation collection.
name = 'my-name'  # TODO: Update placeholder value.

operations = service.fetch_all(items: :operations) do |token|
  service.list_operations(name, page_token: token)
end

operations.each do |operation|
  # TODO: Change code below to process each `operation` resource:
  puts operation.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The ID of the read group set over which coverage is requested.
read_group_set_id = 'my-read-group-set-id'  # TODO: Update placeholder value.

coverage_buckets = service.fetch_all(items: :coverage_buckets) do |token|
  service.list_coverage_buckets(read_group_set_id, page_token: token)
end

coverage_buckets.each do |coverage_bucket|
  # TODO: Change code below to process each `coverage_bucket` resource:
  puts coverage_bucket.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the read group set to be deleted. The caller must have WRITE permissions to the dataset
# associated with this read group set.
read_group_set_id = 'my-read-group-set-id'  # TODO: Update placeholder value.

service.delete_read_group_set(read_group_set_id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The ID of the read group set to export. The caller must have READ access to this read
# group set.
read_group_set_id = 'my-read-group-set-id'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::ExportReadGroupSetRequest.new

response = service.export_read_group_sets(read_group_set_id, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the read group set.
read_group_set_id = 'my-read-group-set-id'  # TODO: Update placeholder value.

response = service.get_read_group_set(read_group_set_id)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::ImportReadGroupSetsRequest.new

response = service.import_read_group_sets(request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the read group set to be updated. The caller must have WRITE permissions to the dataset
# associated with this read group set.
read_group_set_id = 'my-read-group-set-id'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::GenomicsV1::ReadGroupSet.new

response = service.patch_read_group_set(read_group_set_id, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::SearchReadGroupSetsRequest.new

read_group_sets = service.fetch_all(items: :read_group_sets) do |token|
  request_body.page_token = token
  service.search_read_group_sets(request_body)
end

read_group_sets.each do |read_group_set|
  # TODO: Change code below to process each `read_group_set` resource:
  puts read_group_set.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::SearchReadsRequest.new

alignments = service.fetch_all(items: :alignments) do |token|
  request_body.page_token = token
  service.search_reads(request_body)
end

alignments.each do |read|
  # TODO: Change code below to process each `read` resource:
  puts read.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::StreamReadsRequest.new

response = service.stream_reads(request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the reference.
reference_id = 'my-reference-id'  # TODO: Update placeholder value.

sequence = service.fetch_all(items: :sequence) do |token|
  service.list_reference_bases(reference_id, page_token: token)
end

sequence.each do |item|
  # TODO: Change code below to process each `item` resource:
  puts item.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the reference.
reference_id = 'my-reference-id'  # TODO: Update placeholder value.

response = service.get_reference(reference_id)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::SearchReferencesRequest.new

references = service.fetch_all(items: :references) do |token|
  request_body.page_token = token
  service.search_references(request_body)
end

references.each do |reference|
  # TODO: Change code below to process each `reference` resource:
  puts reference.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the reference set.
reference_set_id = 'my-reference-set-id'  # TODO: Update placeholder value.

response = service.get_reference_set(reference_set_id)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::SearchReferenceSetsRequest.new

reference_sets = service.fetch_all(items: :reference_sets) do |token|
  request_body.page_token = token
  service.search_reference_sets(request_body)
end

reference_sets.each do |reference_set|
  # TODO: Change code below to process each `reference_set` resource:
  puts reference_set.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::Variant.new

response = service.create_variant(request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the variant to be deleted.
variant_id = 'my-variant-id'  # TODO: Update placeholder value.

service.delete_variant(variant_id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the variant.
variant_id = 'my-variant-id'  # TODO: Update placeholder value.

response = service.get_variant(variant_id)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::ImportVariantsRequest.new

response = service.import_variants(request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::MergeVariantsRequest.new

service.merge_variants(request_body)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the variant to be updated.
variant_id = 'my-variant-id'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::GenomicsV1::Variant.new

response = service.patch_variant(variant_id, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::SearchVariantsRequest.new

variants = service.fetch_all(items: :variants) do |token|
  request_body.page_token = token
  service.search_variants(request_body)
end

variants.each do |variant|
  # TODO: Change code below to process each `variant` resource:
  puts variant.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::StreamVariantsRequest.new

response = service.stream_variants(request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::VariantSet.new

response = service.create_variantset(request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the variant set to be deleted.
variant_set_id = 'my-variant-set-id'  # TODO: Update placeholder value.

service.delete_variantset(variant_set_id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The ID of the variant set that contains variant data which should be exported. The caller
# must have READ access to this variant set.
variant_set_id = 'my-variant-set-id'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::ExportVariantSetRequest.new

response = service.export_variant_set(variant_set_id, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The ID of the variant set.
variant_set_id = 'my-variant-set-id'  # TODO: Update placeholder value.

response = service.get_variantset(variant_set_id)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the variant to be updated (must already exist).
variant_set_id = 'my-variant-set-id'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::GenomicsV1::VariantSet.new

response = service.patch_variantset(variant_set_id, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Genomics API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/genomics
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/genomics_v1'

service = Google::Apis::GenomicsV1::GenomicsService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::GenomicsV1::SearchVariantSetsRequest.new

variant_sets = service.fetch_all(items: :variant_sets) do |token|
  request_body.page_token = token
  service.search_variant_sets(request_body)
end

variant_sets.each do |variant_set|
  # TODO: Change code below to process each `variant_set` resource:
  puts variant_set.to_json
end
