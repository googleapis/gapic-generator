============== file: lib/google/longrunning.rb ==============
# Copyright 2017, Google Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

require "google/longrunning/operations_client"

# rubocop:disable LineLength

##
# # Ruby Client for Google Long Running Operations API ([Alpha](https://github.com/GoogleCloudPlatform/google-cloud-ruby#versioning))
#
# [Google Long Running Operations API][Product Documentation]:
#
# - [Product Documentation][]
#
# ## Quick Start
# In order to use this library, you first need to go through the following
# steps:
#
# 1. [Select or create a Cloud Platform project.](https://console.cloud.google.com/project)
# 2. [Enable the Google Long Running Operations API.](https://console.cloud.google.com/apis/api/longrunning)
# 3. [Setup Authentication.](https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/google-cloud/master/guides/authentication)
#
# ### Installation
# ```
# $ gem install google
# ```
#
# ### Next Steps
# - Read the [Google Long Running Operations API Product documentation][Product Documentation]
#   to learn more about the product and see How-to Guides.
# - View this [repository's main README](https://github.com/GoogleCloudPlatform/google-cloud-ruby/blob/master/README.md)
#   to see the full list of Cloud APIs that we cover.
#
# [Product Documentation]: https://cloud.google.com/longrunning
#
#
module Google
  module Longrunning
    # rubocop:enable LineLength

    ##
    # Manages long-running operations with an API service.
    #
    # When an API method normally takes long time to complete, it can be designed
    # to return {Google::Longrunning::Operation Operation} to the client, and the client can use this
    # interface to receive the real response asynchronously by polling the
    # operation resource, or pass the operation resource to another API (such as
    # Google Cloud Pub/Sub API) to receive the response.  Any API service that
    # returns long-running operations should implement the +Operations+ interface
    # so developers can have a consistent client experience.
    #
    # @param credentials [Google::Gax::Credentials, String, Hash, GRPC::Core::Channel, GRPC::Core::ChannelCredentials, Proc]
    #   Provides the means for authenticating requests made by the client. This parameter can
    #   be many types.
    #   A `Google::Gax::Credentials` uses a the properties of its represented keyfile for
    #   authenticating requests made by this client.
    #   A `String` will be treated as the path to the keyfile to be used for the construction of
    #   credentials for this client.
    #   A `Hash` will be treated as the contents of a keyfile to be used for the construction of
    #   credentials for this client.
    #   A `GRPC::Core::Channel` will be used to make calls through.
    #   A `GRPC::Core::ChannelCredentials` for the setting up the RPC client. The channel credentials
    #   should already be composed with a `GRPC::Core::CallCredentials` object.
    #   A `Proc` will be used as an updater_proc for the Grpc channel. The proc transforms the
    #   metadata for requests, generally, to give OAuth credentials.
    # @param scopes [Array<String>]
    #   The OAuth scopes for this service. This parameter is ignored if
    #   an updater_proc is supplied.
    # @param client_config [Hash]
    #   A Hash for call options for each method. See
    #   Google::Gax#construct_settings for the structure of
    #   this data. Falls back to the default config if not specified
    #   or the specified config is missing data points.
    # @param timeout [Numeric]
    #   The default timeout, in seconds, for calls made through this client.
    def self.new
        service_path: nil,
        port: nil,
        channel: nil,
        chan_creds: nil,
        updater_proc: nil,
        credentials: nil,
        scopes: nil,
        client_config: nil,
        timeout: nil,
        lib_name: nil,
        lib_version: nil
      kwargs = Hash[
        *method(__method__).parameters
          .select { |_, param| binding.local_variable_get(param) != nil }
          .map { |_, param| [param, binding.local_variable_get(param)] }
          .flatten(1)
        ]
      Google::Longrunning::OperationsClient.new(**kwargs)
    end
  end
end
