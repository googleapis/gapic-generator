
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::AppengineV1beta5::Application.new

response = service.create_app(request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. Name of the application to get. Example: `apps/myapp`.
apps_id = ''  # TODO: Update placeholder value.

response = service.get_app(apps_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. Resource name for the location.
apps_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
locations_id = ''  # TODO: Update placeholder value.

response = service.get_app_location(apps_id, locations_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. The resource that owns the locations collection, if applicable.
apps_id = ''  # TODO: Update placeholder value.

locations = service.fetch_all(items: :locations) do |token|
  service.list_app_locations(apps_id, page_token: token)
end

locations.each do |location|
  # TODO: Change code below to process each `location` resource:
  puts JSON.pretty_generate(location)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. The name of the operation resource.
apps_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
operations_id = ''  # TODO: Update placeholder value.

response = service.get_app_operation(apps_id, operations_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. The name of the operation collection.
apps_id = ''  # TODO: Update placeholder value.

operations = service.fetch_all(items: :operations) do |token|
  service.list_app_operations(apps_id, page_token: token)
end

operations.each do |operation|
  # TODO: Change code below to process each `operation` resource:
  puts JSON.pretty_generate(operation)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. Name of the application to update. Example: `apps/myapp`.
apps_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# fields will be changed:
request_body = Google::Apis::AppengineV1beta5::Application.new

response = service.patch_app(apps_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. Name of the resource requested. Example: `apps/myapp/services/default`.
apps_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
services_id = ''  # TODO: Update placeholder value.

response = service.delete_app_service(apps_id, services_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. Name of the resource requested. Example: `apps/myapp/services/default`.
apps_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
services_id = ''  # TODO: Update placeholder value.

response = service.get_app_service(apps_id, services_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. Name of the resource requested. Example: `apps/myapp`.
apps_id = ''  # TODO: Update placeholder value.

services = service.fetch_all(items: :services) do |token|
  service.list_app_services(apps_id, page_token: token)
end

services.each do |service2|
  # TODO: Change code below to process each `service2` resource:
  puts JSON.pretty_generate(service2)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. Name of the resource to update. Example: `apps/myapp/services/default`.
apps_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
services_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# fields will be changed:
request_body = Google::Apis::AppengineV1beta5::Service.new

response = service.patch_app_service(apps_id, services_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. Name of the resource to update. For example: "apps/myapp/services/default".
apps_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
services_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::AppengineV1beta5::Version.new

response = service.create_app_service_version(apps_id, services_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. Name of the resource requested. Example: `apps/myapp/services/default/versions/v1`.
apps_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
services_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
versions_id = ''  # TODO: Update placeholder value.

response = service.delete_app_service_version(apps_id, services_id, versions_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. Name of the resource requested. Example: `apps/myapp/services/default/versions/v1`.
apps_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
services_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
versions_id = ''  # TODO: Update placeholder value.

response = service.get_app_service_version(apps_id, services_id, versions_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. Name of the resource requested. Example:
# `apps/myapp/services/default/versions/v1/instances/instance-1`.
apps_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
services_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
versions_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
instances_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::AppengineV1beta5::DebugInstanceRequest.new

response = service.debug_instance(apps_id, services_id, versions_id, instances_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. Name of the resource requested. For example:
# "apps/myapp/services/default/versions/v1/instances/instance-1".
apps_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
services_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
versions_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
instances_id = ''  # TODO: Update placeholder value.

response = service.delete_app_service_version_instance(apps_id, services_id, versions_id, instances_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. Name of the resource requested. Example:
# `apps/myapp/services/default/versions/v1/instances/instance-1`.
apps_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
services_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
versions_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
instances_id = ''  # TODO: Update placeholder value.

response = service.get_app_service_version_instance(apps_id, services_id, versions_id, instances_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. Name of the resource requested. Example: `apps/myapp/services/default/versions/v1`.
apps_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
services_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
versions_id = ''  # TODO: Update placeholder value.

instances = service.fetch_all(items: :instances) do |token|
  service.list_app_service_version_instances(apps_id, services_id, versions_id, page_token: token)
end

instances.each do |instance|
  # TODO: Change code below to process each `instance` resource:
  puts JSON.pretty_generate(instance)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. Name of the resource requested. Example: `apps/myapp/services/default`.
apps_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
services_id = ''  # TODO: Update placeholder value.

versions = service.fetch_all(items: :versions) do |token|
  service.list_app_service_versions(apps_id, services_id, page_token: token)
end

versions.each do |version|
  # TODO: Change code below to process each `version` resource:
  puts JSON.pretty_generate(version)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google App Engine Admin API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/appengine
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/appengine_v1beta5'
require 'json'

service = Google::Apis::AppengineV1beta5::AppengineService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Part of `name`. Name of the resource to update. Example: `apps/myapp/services/default/versions/1`.
apps_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
services_id = ''  # TODO: Update placeholder value.

# Part of `name`. See documentation of `appsId`.
versions_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# fields will be changed:
request_body = Google::Apis::AppengineV1beta5::Version.new

response = service.patch_app_service_version(apps_id, services_id, versions_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
