============== file: src/test/java/com/google/gcloud/pubsub/spi/LibraryServiceApiTest.java ==============
/*
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

package com.google.gcloud.pubsub.spi;

import com.google.api.gax.testing.LocalServiceHelper;
import com.google.api.gax.testing.ValueGenerator;
import com.google.protobuf.GeneratedMessage;
import java.io.IOException;
import java.util.List;
import junit.framework.Assert;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

@javax.annotation.Generated("by GAPIC")
public class LibraryServiceApiTest {
  private static LocalServiceHelper serviceHelper;
  private LibraryServiceApi api;
  private ValueGenerator valueGenerator;

  @BeforeClass
  public static void startStaticServer() {
    MockLibraryServiceApi mockService = new MockLibraryServiceApi();
    serviceHelper = new LocalServiceHelper("in-process-1", mockService);
    serviceHelper.start();
  }

  @AfterClass
  public static void stopServer() {
    serviceHelper.stop();
  }

  @Before
  public void setUp() throws IOException {
    serviceHelper.reset();
    LibraryServiceSettings settings = LibraryServiceSettings.defaultBuilder()
        .provideChannelWith(serviceHelper.createChannel(), true)
        .build();
    api = LibraryServiceApi.create(settings);
    valueGenerator = new ValueGenerator();
  }

  @After
  public void tearDown() throws Exception {
    api.close();
  }

}
