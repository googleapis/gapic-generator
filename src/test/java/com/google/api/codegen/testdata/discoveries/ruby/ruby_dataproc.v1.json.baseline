
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Dataproc API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataproc
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataproc_v1'
require 'json'

service = Google::Apis::DataprocV1::DataprocService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `create_cluster` method:

# [Required] The ID of the Google Cloud Platform project that the cluster belongs to.
project_id = '{MY-PROJECT-ID}'

# [Required] The Cloud Dataproc region in which to handle the request.
region = '{MY-REGION}'


request_body = Google::Apis::DataprocV1::Cluster.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.create_cluster(project_id, region, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Dataproc API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataproc
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataproc_v1'
require 'json'

service = Google::Apis::DataprocV1::DataprocService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `delete_cluster` method:

# [Required] The ID of the Google Cloud Platform project that the cluster belongs to.
project_id = '{MY-PROJECT-ID}'

# [Required] The Cloud Dataproc region in which to handle the request.
region = '{MY-REGION}'

# [Required] The cluster name.
cluster_name = '{MY-CLUSTER-NAME}'


# Perform the call
response = service.delete_cluster(project_id, region, cluster_name)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Dataproc API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataproc
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataproc_v1'
require 'json'

service = Google::Apis::DataprocV1::DataprocService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `diagnose_cluster` method:

# [Required] The ID of the Google Cloud Platform project that the cluster belongs to.
project_id = '{MY-PROJECT-ID}'

# [Required] The Cloud Dataproc region in which to handle the request.
region = '{MY-REGION}'

# [Required] The cluster name.
cluster_name = '{MY-CLUSTER-NAME}'


request_body = Google::Apis::DataprocV1::DiagnoseClusterRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.diagnose_cluster(project_id, region, cluster_name, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Dataproc API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataproc
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataproc_v1'
require 'json'

service = Google::Apis::DataprocV1::DataprocService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `get_cluster` method:

# [Required] The ID of the Google Cloud Platform project that the cluster belongs to.
project_id = '{MY-PROJECT-ID}'

# [Required] The Cloud Dataproc region in which to handle the request.
region = '{MY-REGION}'

# [Required] The cluster name.
cluster_name = '{MY-CLUSTER-NAME}'


# Perform the call
response = service.get_cluster(project_id, region, cluster_name)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Dataproc API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataproc
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataproc_v1'
require 'json'

service = Google::Apis::DataprocV1::DataprocService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `list_clusters` method:

# [Required] The ID of the Google Cloud Platform project that the cluster belongs to.
project_id = '{MY-PROJECT-ID}'

# [Required] The Cloud Dataproc region in which to handle the request.
region = '{MY-REGION}'


# Perform the call
clusters = service.fetch_all(items: :clusters) do |token|
  service.list_clusters(project_id, region, page_token: token)
end

clusters.each do |cluster|
  # TODO: Change code below to process each `cluster` resource:
  puts JSON.pretty_generate(cluster)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Dataproc API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataproc
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataproc_v1'
require 'json'

service = Google::Apis::DataprocV1::DataprocService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `patch_cluster` method:

# [Required] The ID of the Google Cloud Platform project the cluster belongs to.
project_id = '{MY-PROJECT-ID}'

# [Required] The Cloud Dataproc region in which to handle the request.
region = '{MY-REGION}'

# [Required] The cluster name.
cluster_name = '{MY-CLUSTER-NAME}'


request_body = Google::Apis::DataprocV1::Cluster.new
# TODO: Assign values to desired members of the `request_body` object to be changed.


# Perform the call
response = service.patch_cluster(project_id, region, cluster_name, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Dataproc API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataproc
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataproc_v1'
require 'json'

service = Google::Apis::DataprocV1::DataprocService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `cancel_job` method:

# [Required] The ID of the Google Cloud Platform project that the job belongs to.
project_id = '{MY-PROJECT-ID}'

# [Required] The Cloud Dataproc region in which to handle the request.
region = '{MY-REGION}'

# [Required] The job ID.
job_id = '{MY-JOB-ID}'


request_body = Google::Apis::DataprocV1::CancelJobRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.cancel_job(project_id, region, job_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Dataproc API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataproc
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataproc_v1'
require 'json'

service = Google::Apis::DataprocV1::DataprocService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `delete_job` method:

# [Required] The ID of the Google Cloud Platform project that the job belongs to.
project_id = '{MY-PROJECT-ID}'

# [Required] The Cloud Dataproc region in which to handle the request.
region = '{MY-REGION}'

# [Required] The job ID.
job_id = '{MY-JOB-ID}'


# Perform the call
service.delete_job(project_id, region, job_id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Dataproc API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataproc
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataproc_v1'
require 'json'

service = Google::Apis::DataprocV1::DataprocService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `get_job` method:

# [Required] The ID of the Google Cloud Platform project that the job belongs to.
project_id = '{MY-PROJECT-ID}'

# [Required] The Cloud Dataproc region in which to handle the request.
region = '{MY-REGION}'

# [Required] The job ID.
job_id = '{MY-JOB-ID}'


# Perform the call
response = service.get_job(project_id, region, job_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Dataproc API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataproc
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataproc_v1'
require 'json'

service = Google::Apis::DataprocV1::DataprocService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `list_jobs` method:

# [Required] The ID of the Google Cloud Platform project that the job belongs to.
project_id = '{MY-PROJECT-ID}'

# [Required] The Cloud Dataproc region in which to handle the request.
region = '{MY-REGION}'


# Perform the call
jobs = service.fetch_all(items: :jobs) do |token|
  service.list_jobs(project_id, region, page_token: token)
end

jobs.each do |job|
  # TODO: Change code below to process each `job` resource:
  puts JSON.pretty_generate(job)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Dataproc API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataproc
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataproc_v1'
require 'json'

service = Google::Apis::DataprocV1::DataprocService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `submit_job` method:

# [Required] The ID of the Google Cloud Platform project that the job belongs to.
project_id = '{MY-PROJECT-ID}'

# [Required] The Cloud Dataproc region in which to handle the request.
region = '{MY-REGION}'


request_body = Google::Apis::DataprocV1::SubmitJobRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.submit_job(project_id, region, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Dataproc API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataproc
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataproc_v1'
require 'json'

service = Google::Apis::DataprocV1::DataprocService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `cancel_operation` method:

# The name of the operation resource to be cancelled.
name = 'projects/{MY-PROJECT}/regions/{MY-REGION}/operations/{MY-OPERATION}'


# Perform the call
service.cancel_operation(name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Dataproc API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataproc
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataproc_v1'
require 'json'

service = Google::Apis::DataprocV1::DataprocService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `delete_operation` method:

# The name of the operation resource to be deleted.
name = 'projects/{MY-PROJECT}/regions/{MY-REGION}/operations/{MY-OPERATION}'


# Perform the call
service.delete_operation(name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Dataproc API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataproc
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataproc_v1'
require 'json'

service = Google::Apis::DataprocV1::DataprocService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `get_operation` method:

# The name of the operation resource.
name = 'projects/{MY-PROJECT}/regions/{MY-REGION}/operations/{MY-OPERATION}'


# Perform the call
response = service.get_operation(name)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Dataproc API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataproc
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataproc_v1'
require 'json'

service = Google::Apis::DataprocV1::DataprocService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `list_operations` method:

# The name of the operation collection.
name = '{MY-NAME}'


# Perform the call
operations = service.fetch_all(items: :operations) do |token|
  service.list_operations(name, page_token: token)
end

operations.each do |operation|
  # TODO: Change code below to process each `operation` resource:
  puts JSON.pretty_generate(operation)
end
