
<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the dataset being deleted
$projectId = '';

// * Dataset ID of dataset being deleted
$datasetId = '';

$response = $service->datasets->delete($projectId, $datasetId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the requested dataset
$projectId = '';

// * Dataset ID of the requested dataset
$datasetId = '';

$response = $service->datasets->get($projectId, $datasetId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the new dataset
$projectId = '';

$postBody = new Google_Service_Bigquery_Dataset($client);

$response = $service->datasets->insert($projectId, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the datasets to be listed
$projectId = '';

$response = $service->datasets->listDatasets($projectId);

foreach ($response['datasets'] as $element) {
  // TODO: Add code here to process the element.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the dataset being updated
$projectId = '';

// * Dataset ID of the dataset being updated
$datasetId = '';

$postBody = new Google_Service_Bigquery_Dataset($client);

$response = $service->datasets->patch($projectId, $datasetId, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the dataset being updated
$projectId = '';

// * Dataset ID of the dataset being updated
$datasetId = '';

$postBody = new Google_Service_Bigquery_Dataset($client);

$response = $service->datasets->update($projectId, $datasetId, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * [Required] Project ID of the job to cancel
$projectId = '';

// * [Required] Job ID of the job to cancel
$jobId = '';

$response = $service->jobs->cancel($projectId, $jobId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * [Required] Project ID of the requested job
$projectId = '';

// * [Required] Job ID of the requested job
$jobId = '';

$response = $service->jobs->get($projectId, $jobId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * [Required] Project ID of the query job
$projectId = '';

// * [Required] Job ID of the query job
$jobId = '';

$response = $service->jobs->getQueryResults($projectId, $jobId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the project that will be billed for the job
$projectId = '';

$postBody = new Google_Service_Bigquery_Job($client);

$response = $service->jobs->insert($projectId, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the jobs to list
$projectId = '';

$response = $service->jobs->listJobs($projectId);

foreach ($response['jobs'] as $element) {
  // TODO: Add code here to process the element.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the project billed for the query
$projectId = '';

$postBody = new Google_Service_Bigquery_QueryRequest($client);

$response = $service->jobs->query($projectId, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);


$response = $service->projects->listProjects();

foreach ($response['projects'] as $element) {
  // TODO: Add code here to process the element.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the destination table.
$projectId = '';

// * Dataset ID of the destination table.
$datasetId = '';

// * Table ID of the destination table.
$tableId = '';

$postBody = new Google_Service_Bigquery_TableDataInsertAllRequest($client);

$response = $service->tabledata->insertAll($projectId, $datasetId, $tableId, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the table to read
$projectId = '';

// * Dataset ID of the table to read
$datasetId = '';

// * Table ID of the table to read
$tableId = '';

$response = $service->tabledata->listTabledata($projectId, $datasetId, $tableId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the table to delete
$projectId = '';

// * Dataset ID of the table to delete
$datasetId = '';

// * Table ID of the table to delete
$tableId = '';

$response = $service->tables->delete($projectId, $datasetId, $tableId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the requested table
$projectId = '';

// * Dataset ID of the requested table
$datasetId = '';

// * Table ID of the requested table
$tableId = '';

$response = $service->tables->get($projectId, $datasetId, $tableId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the new table
$projectId = '';

// * Dataset ID of the new table
$datasetId = '';

$postBody = new Google_Service_Bigquery_Table($client);

$response = $service->tables->insert($projectId, $datasetId, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the tables to list
$projectId = '';

// * Dataset ID of the tables to list
$datasetId = '';

$response = $service->tables->listTables($projectId, $datasetId);

foreach ($response['tables'] as $element) {
  // TODO: Add code here to process the element.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the table to update
$projectId = '';

// * Dataset ID of the table to update
$datasetId = '';

// * Table ID of the table to update
$tableId = '';

$postBody = new Google_Service_Bigquery_Table($client);

$response = $service->tables->patch($projectId, $datasetId, $tableId, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the BigQuery API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/bigquery
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Bigquery service.
$service = new Google_Service_Bigquery($client);

// * Project ID of the table to update
$projectId = '';

// * Dataset ID of the table to update
$datasetId = '';

// * Table ID of the table to update
$tableId = '';

$postBody = new Google_Service_Bigquery_Table($client);

$response = $service->tables->update($projectId, $datasetId, $tableId, $postBody);

