
<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Resource Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/cloudresourcemanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudResourceManager service
$service = new Google_Service_CloudResourceManager($client);

// The id of the Organization resource to fetch.
$organizationId = '';

$response = $service->organizations->getOrganizations($organizationId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Resource Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/cloudresourcemanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudResourceManager service
$service = new Google_Service_CloudResourceManager($client);

// REQUIRED: The resource for which the policy is being requested. `resource` is usually specified as a path, such as `projects/*project*/zones/*zone*/disks/*disk*`. The format for the path specified in this value is resource specific and is specified in the `getIamPolicy` documentation.
$resource = '';

$response = $service->organizations->getIamPolicyOrganizations($resource);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Resource Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/cloudresourcemanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudResourceManager service
$service = new Google_Service_CloudResourceManager($client);

$response = $service->organizations->listOrganizations();

foreach ($response['organizations'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Resource Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/cloudresourcemanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudResourceManager service
$service = new Google_Service_CloudResourceManager($client);

// REQUIRED: The resource for which the policy is being specified. `resource` is usually specified as a path, such as `projects/*project*/zones/*zone*/disks/*disk*`. The format for the path specified in this value is resource specific and is specified in the `setIamPolicy` documentation.
$resource = '';

$response = $service->organizations->setIamPolicyOrganizations($resource);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Resource Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/cloudresourcemanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudResourceManager service
$service = new Google_Service_CloudResourceManager($client);

// REQUIRED: The resource for which the policy detail is being requested. `resource` is usually specified as a path, such as `projects/*project*/zones/*zone*/disks/*disk*`. The format for the path specified in this value is resource specific and is specified in the `testIamPermissions` documentation.
$resource = '';

$response = $service->organizations->testIamPermissionsOrganizations($resource);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Resource Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/cloudresourcemanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudResourceManager service
$service = new Google_Service_CloudResourceManager($client);

// An immutable id for the Organization that is assigned on creation. This should be omitted when creating a new Organization. This field is read-only.
$organizationId = '';

$response = $service->organizations->updateOrganizations($organizationId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Resource Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/cloudresourcemanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudResourceManager service
$service = new Google_Service_CloudResourceManager($client);

$response = $service->projects->createProjects();

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Resource Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/cloudresourcemanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudResourceManager service
$service = new Google_Service_CloudResourceManager($client);

// The Project ID (for example, `foo-bar-123`). Required.
$projectId = '';

$response = $service->projects->deleteProjects($projectId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Resource Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/cloudresourcemanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudResourceManager service
$service = new Google_Service_CloudResourceManager($client);

// The Project ID (for example, `my-project-123`). Required.
$projectId = '';

$response = $service->projects->getProjects($projectId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Resource Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/cloudresourcemanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudResourceManager service
$service = new Google_Service_CloudResourceManager($client);

// REQUIRED: The resource for which the policy is being requested. `resource` is usually specified as a path, such as `projects/*project*/zones/*zone*/disks/*disk*`. The format for the path specified in this value is resource specific and is specified in the `getIamPolicy` documentation.
$resource = '';

$response = $service->projects->getIamPolicyProjects($resource);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Resource Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/cloudresourcemanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudResourceManager service
$service = new Google_Service_CloudResourceManager($client);

$response = $service->projects->listProjects();

foreach ($response['projects'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Resource Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/cloudresourcemanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudResourceManager service
$service = new Google_Service_CloudResourceManager($client);

// REQUIRED: The resource for which the policy is being specified. `resource` is usually specified as a path, such as `projects/*project*/zones/*zone*/disks/*disk*`. The format for the path specified in this value is resource specific and is specified in the `setIamPolicy` documentation.
$resource = '';

$response = $service->projects->setIamPolicyProjects($resource);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Resource Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/cloudresourcemanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudResourceManager service
$service = new Google_Service_CloudResourceManager($client);

// REQUIRED: The resource for which the policy detail is being requested. `resource` is usually specified as a path, such as `projects/*project*/zones/*zone*/disks/*disk*`. The format for the path specified in this value is resource specific and is specified in the `testIamPermissions` documentation.
$resource = '';

$response = $service->projects->testIamPermissionsProjects($resource);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Resource Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/cloudresourcemanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudResourceManager service
$service = new Google_Service_CloudResourceManager($client);

// The project ID (for example, `foo-bar-123`). Required.
$projectId = '';

$response = $service->projects->undeleteProjects($projectId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Resource Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/cloudresourcemanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudResourceManager service
$service = new Google_Service_CloudResourceManager($client);

// The project ID (for example, `my-project-123`). Required.
$projectId = '';

$response = $service->projects->updateProjects($projectId);

