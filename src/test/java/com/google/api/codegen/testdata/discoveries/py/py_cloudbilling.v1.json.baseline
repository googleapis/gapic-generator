
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Cloud Billing API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/cloudbilling
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('cloudbilling', 'v1', credentials=credentials)

# The resource name of the billing account to retrieve. For example,
# `billingAccounts/012345-567890-ABCDEF`.
name = 'billingAccounts/my-billing-account'  # TODO: Update placeholder value.

request = service.billingAccounts().get(name=name)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Cloud Billing API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/cloudbilling
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('cloudbilling', 'v1', credentials=credentials)

request = service.billingAccounts().list()
while request is not None:
    response = request.execute()

    for billing_account in response['billingAccounts']:
        # TODO: Change code below to process each `billing_account` resource:
        pprint(billing_account)

    request = service.billingAccounts().list_next(previous_request=request, previous_response=response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Cloud Billing API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/cloudbilling
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('cloudbilling', 'v1', credentials=credentials)

# The resource name of the billing account associated with the projects that you want to list. For
# example, `billingAccounts/012345-567890-ABCDEF`.
name = 'billingAccounts/my-billing-account'  # TODO: Update placeholder value.

request = service.billingAccounts().projects().list(name=name)
while request is not None:
    response = request.execute()

    for project_billing_info in response['projectBillingInfo']:
        # TODO: Change code below to process each `project_billing_info` resource:
        pprint(project_billing_info)

    request = service.billingAccounts().projects().list_next(previous_request=request, previous_response=response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Cloud Billing API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/cloudbilling
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('cloudbilling', 'v1', credentials=credentials)

# The resource name of the project for which billing information is retrieved. For example,
# `projects/tokyo-rain-123`.
name = 'projects/my-project'  # TODO: Update placeholder value.

request = service.projects().getBillingInfo(name=name)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Cloud Billing API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/cloudbilling
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('cloudbilling', 'v1', credentials=credentials)

# The resource name of the project associated with the billing information that you want to update.
# For example, `projects/tokyo-rain-123`.
name = 'projects/my-project'  # TODO: Update placeholder value.

project_billing_info_body = {
    # TODO: Add desired entries to the request body. All existing entries
    # will be replaced.
}

request = service.projects().updateBillingInfo(name=name, body=project_billing_info_body)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
