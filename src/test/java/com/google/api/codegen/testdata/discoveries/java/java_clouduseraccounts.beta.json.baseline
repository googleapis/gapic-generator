
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.GlobalAccountsOperations.Delete;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    // Name of the Operations resource to delete.
    String operation = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    Delete request = service.globalAccountsOperations().delete(project, operation);
    request.execute();
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.GlobalAccountsOperations.Get;
import com.google.api.services.clouduseraccounts.beta.model.Operation;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    // Name of the Operations resource to return.
    String operation = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    Get request = service.globalAccountsOperations().get(project, operation);
    Operation response = request.execute();
    System.out.println(response);
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.GlobalAccountsOperations.List;
import com.google.api.services.clouduseraccounts.beta.model.Operation;
import com.google.api.services.clouduseraccounts.beta.model.OperationList;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    List request = service.globalAccountsOperations().list(project);
    OperationList response;
    do {
      response = request.execute();
      if (response.getItems() == null) {
        continue;
      }
      for (Operation item : response.getItems()) {
        System.out.println(item);
      }
    } while (response.getNextPageToken() != null);
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.Groups.AddMember;
import com.google.api.services.clouduseraccounts.beta.model.GroupsAddMemberRequest;
import com.google.api.services.clouduseraccounts.beta.model.Operation;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // TODO: Assign desired fields.
    GroupsAddMemberRequest requestBody = new GroupsAddMemberRequest();

    // Name of the group for this request.
    String groupName = ""; // TODO: Update field(s).

    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    AddMember request = service.groups().addMember(groupName, project, requestBody);
    Operation response = request.execute();
    System.out.println(response);
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.Groups.Delete;
import com.google.api.services.clouduseraccounts.beta.model.Operation;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // Name of the Group resource to delete.
    String groupName = ""; // TODO: Update field(s).

    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    Delete request = service.groups().delete(groupName, project);
    Operation response = request.execute();
    System.out.println(response);
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.Groups.Get;
import com.google.api.services.clouduseraccounts.beta.model.Group;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // Name of the Group resource to return.
    String groupName = ""; // TODO: Update field(s).

    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    Get request = service.groups().get(groupName, project);
    Group response = request.execute();
    System.out.println(response);
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.Groups.Insert;
import com.google.api.services.clouduseraccounts.beta.model.Group;
import com.google.api.services.clouduseraccounts.beta.model.Operation;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // TODO: Assign desired fields.
    Group requestBody = new Group();

    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    Insert request = service.groups().insert(project, requestBody);
    Operation response = request.execute();
    System.out.println(response);
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.Groups.List;
import com.google.api.services.clouduseraccounts.beta.model.Group;
import com.google.api.services.clouduseraccounts.beta.model.GroupList;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    List request = service.groups().list(project);
    GroupList response;
    do {
      response = request.execute();
      if (response.getItems() == null) {
        continue;
      }
      for (Group item : response.getItems()) {
        System.out.println(item);
      }
    } while (response.getNextPageToken() != null);
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.Groups.RemoveMember;
import com.google.api.services.clouduseraccounts.beta.model.GroupsRemoveMemberRequest;
import com.google.api.services.clouduseraccounts.beta.model.Operation;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // TODO: Assign desired fields.
    GroupsRemoveMemberRequest requestBody = new GroupsRemoveMemberRequest();

    // Name of the group for this request.
    String groupName = ""; // TODO: Update field(s).

    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    RemoveMember request = service.groups().removeMember(groupName, project, requestBody);
    Operation response = request.execute();
    System.out.println(response);
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.Linux.GetAuthorizedKeysView;
import com.google.api.services.clouduseraccounts.beta.model.LinuxGetAuthorizedKeysViewResponse;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // The fully-qualified URL of the virtual machine requesting the view.
    String instance = ""; // TODO: Update field(s).

    // Name of the zone for this request.
    String zone = ""; // TODO: Update field(s).

    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    // The user account for which you want to get a list of authorized public keys.
    String user = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    GetAuthorizedKeysView request = service.linux().getAuthorizedKeysView(instance, zone, project, user);
    LinuxGetAuthorizedKeysViewResponse response = request.execute();
    System.out.println(response);
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.Linux.GetLinuxAccountViews;
import com.google.api.services.clouduseraccounts.beta.model.LinuxGetLinuxAccountViewsResponse;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // The fully-qualified URL of the virtual machine requesting the views.
    String instance = ""; // TODO: Update field(s).

    // Name of the zone for this request.
    String zone = ""; // TODO: Update field(s).

    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    GetLinuxAccountViews request = service.linux().getLinuxAccountViews(instance, zone, project);
    LinuxGetLinuxAccountViewsResponse response = request.execute();
    System.out.println(response);
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.Users.AddPublicKey;
import com.google.api.services.clouduseraccounts.beta.model.Operation;
import com.google.api.services.clouduseraccounts.beta.model.PublicKey;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // TODO: Assign desired fields.
    PublicKey requestBody = new PublicKey();

    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    // Name of the user for this request.
    String user = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    AddPublicKey request = service.users().addPublicKey(project, user, requestBody);
    Operation response = request.execute();
    System.out.println(response);
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.Users.Delete;
import com.google.api.services.clouduseraccounts.beta.model.Operation;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    // Name of the user resource to delete.
    String user = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    Delete request = service.users().delete(project, user);
    Operation response = request.execute();
    System.out.println(response);
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.Users.Get;
import com.google.api.services.clouduseraccounts.beta.model.User;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    // Name of the user resource to return.
    String user = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    Get request = service.users().get(project, user);
    User response = request.execute();
    System.out.println(response);
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.Users.Insert;
import com.google.api.services.clouduseraccounts.beta.model.Operation;
import com.google.api.services.clouduseraccounts.beta.model.User;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // TODO: Assign desired fields.
    User requestBody = new User();

    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    Insert request = service.users().insert(project, requestBody);
    Operation response = request.execute();
    System.out.println(response);
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.Users.List;
import com.google.api.services.clouduseraccounts.beta.model.User;
import com.google.api.services.clouduseraccounts.beta.model.UserList;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    List request = service.users().list(project);
    UserList response;
    do {
      response = request.execute();
      if (response.getItems() == null) {
        continue;
      }
      for (User item : response.getItems()) {
        System.out.println(item);
      }
    } while (response.getNextPageToken() != null);
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud User Accounts API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouduseraccounts
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/clouduseraccounts/beta/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts;
import com.google.api.services.clouduseraccounts.beta.Clouduseraccounts.Users.RemovePublicKey;
import com.google.api.services.clouduseraccounts.beta.model.Operation;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class ClouduseraccountsExample {
  public void run() throws IOException, GeneralSecurityException {
    // The fingerprint of the public key to delete. Public keys are identified by their fingerprint, which
    // is defined by RFC4716 to be the MD5 digest of the public key.
    String fingerprint = ""; // TODO: Update field(s).

    // Project ID for this request.
    String project = ""; // TODO: Update field(s).

    // Name of the user for this request.
    String user = ""; // TODO: Update field(s).

    Clouduseraccounts service = createService();
    RemovePublicKey request = service.users().removePublicKey(fingerprint, project, user);
    Operation response = request.execute();
    System.out.println(response);
  }

  public Clouduseraccounts createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Clouduseraccounts.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
