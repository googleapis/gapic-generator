
<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Prediction API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/prediction
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Prediction service.
$service = new Google_Service_Prediction($client);
// The project associated with the model.
$project = '';
// The name of a hosted model.
$hostedModelName = '';

$postBody = new Google_Service_Prediction_Input($client);

$response = $service->hostedmodels->predict($project, $hostedModelName, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Prediction API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/prediction
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Prediction service.
$service = new Google_Service_Prediction($client);
// The project associated with the model.
$project = '';
// The unique name for the predictive model.
$id = '';

$response = $service->trainedmodels->analyze($project, $id);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Prediction API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/prediction
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Prediction service.
$service = new Google_Service_Prediction($client);
// The project associated with the model.
$project = '';
// The unique name for the predictive model.
$id = '';

$response = $service->trainedmodels->delete($project, $id);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Prediction API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/prediction
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Prediction service.
$service = new Google_Service_Prediction($client);
// The project associated with the model.
$project = '';
// The unique name for the predictive model.
$id = '';

$response = $service->trainedmodels->get($project, $id);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Prediction API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/prediction
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Prediction service.
$service = new Google_Service_Prediction($client);
// The project associated with the model.
$project = '';

$postBody = new Google_Service_Prediction_Insert($client);

$response = $service->trainedmodels->insert($project, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Prediction API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/prediction
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Prediction service.
$service = new Google_Service_Prediction($client);
// The project associated with the model.
$project = '';

$response = $service->trainedmodels->listTrainedmodels($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the element.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Prediction API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/prediction
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Prediction service.
$service = new Google_Service_Prediction($client);
// The project associated with the model.
$project = '';
// The unique name for the predictive model.
$id = '';

$postBody = new Google_Service_Prediction_Input($client);

$response = $service->trainedmodels->predict($project, $id, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Prediction API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/prediction
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Prediction service.
$service = new Google_Service_Prediction($client);
// The project associated with the model.
$project = '';
// The unique name for the predictive model.
$id = '';

$postBody = new Google_Service_Prediction_Update($client);

$response = $service->trainedmodels->update($project, $id, $postBody);

