
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Cloud Billing API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/cloudbilling
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk and run
//    `gcloud beta auth application-default login`.
//    For more information, see
//    https://developers.google.com/identity/protocols/application-default-credentials
// 3. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Cloudbilling.v1;
using Google.Apis.Services;
using Newtonsoft.Json;
using System;
using System.Threading.Tasks;

using Data = Google.Apis.Cloudbilling.v1.Data;

namespace CloudbillingSample
{
    public class CloudbillingExample
    {
        public static void Main(string[] args)
        {
            CloudbillingService cloudbillingService = new CloudbillingService(new BaseClientService.Initializer
            {
                HttpClientInitializer = GetCredential(),
                ApplicationName = "Google-CloudbillingSample/0.1",
            });

            // The resource name of the billing account to retrieve. For example,
            // `billingAccounts/012345-567890-ABCDEF`.
            string name = "billingAccounts/my-billing-account";  // TODO: Update placeholder value.

            BillingAccountsResource.GetRequest request = cloudbillingService.BillingAccounts.Get(name);

            // To execute asynchronously in an async method, replace `request.Execute()` as shown:
            Data.BillingAccount response = request.Execute();
            // Data.BillingAccount response = await request.ExecuteAsync();

            // TODO: Change code below to process the `response` object:
            Console.WriteLine(JsonConvert.SerializeObject(response));
        }

        public static GoogleCredential GetCredential()
        {
            GoogleCredential credential = Task.Run(() => GoogleCredential.GetApplicationDefaultAsync()).Result;
            if (credential.IsCreateScopedRequired)
            {
                credential = credential.CreateScoped("https://www.googleapis.com/auth/cloud-platform");
            }
           return credential;
        }
    }
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Cloud Billing API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/cloudbilling
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk and run
//    `gcloud beta auth application-default login`.
//    For more information, see
//    https://developers.google.com/identity/protocols/application-default-credentials
// 3. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Cloudbilling.v1;
using Google.Apis.Services;
using Newtonsoft.Json;
using System;
using System.Threading.Tasks;

using Data = Google.Apis.Cloudbilling.v1.Data;

namespace CloudbillingSample
{
    public class CloudbillingExample
    {
        public static void Main(string[] args)
        {
            CloudbillingService cloudbillingService = new CloudbillingService(new BaseClientService.Initializer
            {
                HttpClientInitializer = GetCredential(),
                ApplicationName = "Google-CloudbillingSample/0.1",
            });

            BillingAccountsResource.ListRequest request = cloudbillingService.BillingAccounts.List();

            Data.ListBillingAccountsResponse response;
            do
            {
                // To execute asynchronously in an async method, replace `request.Execute()` as shown:
                response = request.Execute();
                // response = await request.ExecuteAsync();

                if (response.BillingAccounts == null)
                {
                    continue;
                }
                foreach (Data.BillingAccount billingAccount in response.BillingAccounts)
                {
                    // TODO: Change code below to process each `billingAccount` resource:
                    Console.WriteLine(JsonConvert.SerializeObject(billingAccount));
                }
                request.PageToken = response.NextPageToken;
            } while (response.NextPageToken != null);
        }

        public static GoogleCredential GetCredential()
        {
            GoogleCredential credential = Task.Run(() => GoogleCredential.GetApplicationDefaultAsync()).Result;
            if (credential.IsCreateScopedRequired)
            {
                credential = credential.CreateScoped("https://www.googleapis.com/auth/cloud-platform");
            }
           return credential;
        }
    }
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Cloud Billing API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/cloudbilling
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk and run
//    `gcloud beta auth application-default login`.
//    For more information, see
//    https://developers.google.com/identity/protocols/application-default-credentials
// 3. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Cloudbilling.v1;
using Google.Apis.Services;
using Newtonsoft.Json;
using System;
using System.Threading.Tasks;

using Data = Google.Apis.Cloudbilling.v1.Data;

namespace CloudbillingSample
{
    public class CloudbillingExample
    {
        public static void Main(string[] args)
        {
            CloudbillingService cloudbillingService = new CloudbillingService(new BaseClientService.Initializer
            {
                HttpClientInitializer = GetCredential(),
                ApplicationName = "Google-CloudbillingSample/0.1",
            });

            // The resource name of the billing account associated with the projects that
            // you want to list. For example, `billingAccounts/012345-567890-ABCDEF`.
            string name = "billingAccounts/my-billing-account";  // TODO: Update placeholder value.

            BillingAccountsResource.ProjectsResource.ListRequest request = cloudbillingService.BillingAccounts.Projects.List(name);

            Data.ListProjectBillingInfoResponse response;
            do
            {
                // To execute asynchronously in an async method, replace `request.Execute()` as shown:
                response = request.Execute();
                // response = await request.ExecuteAsync();

                if (response.ProjectBillingInfo == null)
                {
                    continue;
                }
                foreach (Data.ProjectBillingInfo projectBillingInfo in response.ProjectBillingInfo)
                {
                    // TODO: Change code below to process each `projectBillingInfo` resource:
                    Console.WriteLine(JsonConvert.SerializeObject(projectBillingInfo));
                }
                request.PageToken = response.NextPageToken;
            } while (response.NextPageToken != null);
        }

        public static GoogleCredential GetCredential()
        {
            GoogleCredential credential = Task.Run(() => GoogleCredential.GetApplicationDefaultAsync()).Result;
            if (credential.IsCreateScopedRequired)
            {
                credential = credential.CreateScoped("https://www.googleapis.com/auth/cloud-platform");
            }
           return credential;
        }
    }
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Cloud Billing API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/cloudbilling
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk and run
//    `gcloud beta auth application-default login`.
//    For more information, see
//    https://developers.google.com/identity/protocols/application-default-credentials
// 3. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Cloudbilling.v1;
using Google.Apis.Services;
using Newtonsoft.Json;
using System;
using System.Threading.Tasks;

using Data = Google.Apis.Cloudbilling.v1.Data;

namespace CloudbillingSample
{
    public class CloudbillingExample
    {
        public static void Main(string[] args)
        {
            CloudbillingService cloudbillingService = new CloudbillingService(new BaseClientService.Initializer
            {
                HttpClientInitializer = GetCredential(),
                ApplicationName = "Google-CloudbillingSample/0.1",
            });

            // The resource name of the project for which billing information is
            // retrieved. For example, `projects/tokyo-rain-123`.
            string name = "projects/my-project";  // TODO: Update placeholder value.

            ProjectsResource.GetBillingInfoRequest request = cloudbillingService.Projects.GetBillingInfo(name);

            // To execute asynchronously in an async method, replace `request.Execute()` as shown:
            Data.ProjectBillingInfo response = request.Execute();
            // Data.ProjectBillingInfo response = await request.ExecuteAsync();

            // TODO: Change code below to process the `response` object:
            Console.WriteLine(JsonConvert.SerializeObject(response));
        }

        public static GoogleCredential GetCredential()
        {
            GoogleCredential credential = Task.Run(() => GoogleCredential.GetApplicationDefaultAsync()).Result;
            if (credential.IsCreateScopedRequired)
            {
                credential = credential.CreateScoped("https://www.googleapis.com/auth/cloud-platform");
            }
           return credential;
        }
    }
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Cloud Billing API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/cloudbilling
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk and run
//    `gcloud beta auth application-default login`.
//    For more information, see
//    https://developers.google.com/identity/protocols/application-default-credentials
// 3. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Cloudbilling.v1;
using Google.Apis.Services;
using Newtonsoft.Json;
using System;
using System.Threading.Tasks;

using Data = Google.Apis.Cloudbilling.v1.Data;

namespace CloudbillingSample
{
    public class CloudbillingExample
    {
        public static void Main(string[] args)
        {
            CloudbillingService cloudbillingService = new CloudbillingService(new BaseClientService.Initializer
            {
                HttpClientInitializer = GetCredential(),
                ApplicationName = "Google-CloudbillingSample/0.1",
            });

            // The resource name of the project associated with the billing information
            // that you want to update. For example, `projects/tokyo-rain-123`.
            string name = "projects/my-project";  // TODO: Update placeholder value.

            // TODO: Assign values to desired properties of `requestBody`. All existing
            // properties will be replaced:
            Data.ProjectBillingInfo requestBody = new Data.ProjectBillingInfo();

            ProjectsResource.UpdateBillingInfoRequest request = cloudbillingService.Projects.UpdateBillingInfo(requestBody, name);

            // To execute asynchronously in an async method, replace `request.Execute()` as shown:
            Data.ProjectBillingInfo response = request.Execute();
            // Data.ProjectBillingInfo response = await request.ExecuteAsync();

            // TODO: Change code below to process the `response` object:
            Console.WriteLine(JsonConvert.SerializeObject(response));
        }

        public static GoogleCredential GetCredential()
        {
            GoogleCredential credential = Task.Run(() => GoogleCredential.GetApplicationDefaultAsync()).Result;
            if (credential.IsCreateScopedRequired)
            {
                credential = credential.CreateScoped("https://www.googleapis.com/auth/cloud-platform");
            }
           return credential;
        }
    }
}
