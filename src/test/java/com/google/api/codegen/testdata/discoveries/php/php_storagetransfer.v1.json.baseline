
<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Storage Transfer API and check quota for your project at
 *    https://console.developers.google.com/apis/api/storagetransfer_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


function StoragetransferExample
{
  // Create a new client
  $client = new Google_Client();
  $client->setApplicationName('Client Sample Application');
  $client->useApplicationDefaultCredentials();
  $client->addScope('https://www.googleapis.com/auth/cloud-platform');

  // Create a new Storagetransfer service
  $service = new Google_Service_Storagetransfer($client);

  $response = $service->v1->getGoogleServiceAccountV1();
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Storage Transfer API and check quota for your project at
 *    https://console.developers.google.com/apis/api/storagetransfer_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


function StoragetransferExample
{
  // Create a new client
  $client = new Google_Client();
  $client->setApplicationName('Client Sample Application');
  $client->useApplicationDefaultCredentials();
  $client->addScope('https://www.googleapis.com/auth/cloud-platform');

  // Create a new Storagetransfer service
  $service = new Google_Service_Storagetransfer($client);

  // The ID of the Google Developers Console project that the Google service account is associated with. Required.
  $projectId = '';

  $response = $service->googleServiceAccounts->getGoogleServiceAccounts($projectId);
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Storage Transfer API and check quota for your project at
 *    https://console.developers.google.com/apis/api/storagetransfer_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


function StoragetransferExample
{
  // Create a new client
  $client = new Google_Client();
  $client->setApplicationName('Client Sample Application');
  $client->useApplicationDefaultCredentials();
  $client->addScope('https://www.googleapis.com/auth/cloud-platform');

  // Create a new Storagetransfer service
  $service = new Google_Service_Storagetransfer($client);

  $response = $service->transferJobs->createTransferJobs();
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Storage Transfer API and check quota for your project at
 *    https://console.developers.google.com/apis/api/storagetransfer_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


function StoragetransferExample
{
  // Create a new client
  $client = new Google_Client();
  $client->setApplicationName('Client Sample Application');
  $client->useApplicationDefaultCredentials();
  $client->addScope('https://www.googleapis.com/auth/cloud-platform');

  // Create a new Storagetransfer service
  $service = new Google_Service_Storagetransfer($client);

  // The job to get. Required.
  $jobName = '';

  $response = $service->transferJobs->getTransferJobs($jobName);
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Storage Transfer API and check quota for your project at
 *    https://console.developers.google.com/apis/api/storagetransfer_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


function StoragetransferExample
{
  // Create a new client
  $client = new Google_Client();
  $client->setApplicationName('Client Sample Application');
  $client->useApplicationDefaultCredentials();
  $client->addScope('https://www.googleapis.com/auth/cloud-platform');

  // Create a new Storagetransfer service
  $service = new Google_Service_Storagetransfer($client);

  $response = $service->transferJobs->listTransferJobs();

  foreach ($response['transferJobs'] as $transferJobs) {
    // TODO: Add code here to process transferJobs.
  }
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Storage Transfer API and check quota for your project at
 *    https://console.developers.google.com/apis/api/storagetransfer_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


function StoragetransferExample
{
  // Create a new client
  $client = new Google_Client();
  $client->setApplicationName('Client Sample Application');
  $client->useApplicationDefaultCredentials();
  $client->addScope('https://www.googleapis.com/auth/cloud-platform');

  // Create a new Storagetransfer service
  $service = new Google_Service_Storagetransfer($client);

  // The name of job to update. Required.
  $jobName = '';

  $response = $service->transferJobs->patchTransferJobs($jobName);
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Storage Transfer API and check quota for your project at
 *    https://console.developers.google.com/apis/api/storagetransfer_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


function StoragetransferExample
{
  // Create a new client
  $client = new Google_Client();
  $client->setApplicationName('Client Sample Application');
  $client->useApplicationDefaultCredentials();
  $client->addScope('https://www.googleapis.com/auth/cloud-platform');

  // Create a new Storagetransfer service
  $service = new Google_Service_Storagetransfer($client);

  // The name of the operation resource to be cancelled.
  $name = '';

  $response = $service->transferOperations->cancelTransferOperations($name);
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Storage Transfer API and check quota for your project at
 *    https://console.developers.google.com/apis/api/storagetransfer_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


function StoragetransferExample
{
  // Create a new client
  $client = new Google_Client();
  $client->setApplicationName('Client Sample Application');
  $client->useApplicationDefaultCredentials();
  $client->addScope('https://www.googleapis.com/auth/cloud-platform');

  // Create a new Storagetransfer service
  $service = new Google_Service_Storagetransfer($client);

  // The name of the operation resource to be deleted.
  $name = '';

  $response = $service->transferOperations->deleteTransferOperations($name);
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Storage Transfer API and check quota for your project at
 *    https://console.developers.google.com/apis/api/storagetransfer_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


function StoragetransferExample
{
  // Create a new client
  $client = new Google_Client();
  $client->setApplicationName('Client Sample Application');
  $client->useApplicationDefaultCredentials();
  $client->addScope('https://www.googleapis.com/auth/cloud-platform');

  // Create a new Storagetransfer service
  $service = new Google_Service_Storagetransfer($client);

  // The name of the operation resource.
  $name = '';

  $response = $service->transferOperations->getTransferOperations($name);
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Storage Transfer API and check quota for your project at
 *    https://console.developers.google.com/apis/api/storagetransfer_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


function StoragetransferExample
{
  // Create a new client
  $client = new Google_Client();
  $client->setApplicationName('Client Sample Application');
  $client->useApplicationDefaultCredentials();
  $client->addScope('https://www.googleapis.com/auth/cloud-platform');

  // Create a new Storagetransfer service
  $service = new Google_Service_Storagetransfer($client);

  // The value `transferOperations`.
  $name = '';

  $response = $service->transferOperations->listTransferOperations($name);

  foreach ($response['operations'] as $operations) {
    // TODO: Add code here to process operations.
  }
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Storage Transfer API and check quota for your project at
 *    https://console.developers.google.com/apis/api/storagetransfer_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


function StoragetransferExample
{
  // Create a new client
  $client = new Google_Client();
  $client->setApplicationName('Client Sample Application');
  $client->useApplicationDefaultCredentials();
  $client->addScope('https://www.googleapis.com/auth/cloud-platform');

  // Create a new Storagetransfer service
  $service = new Google_Service_Storagetransfer($client);

  // The name of the transfer operation. Required.
  $name = '';

  $response = $service->transferOperations->pauseTransferOperations($name);
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Storage Transfer API and check quota for your project at
 *    https://console.developers.google.com/apis/api/storagetransfer_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


function StoragetransferExample
{
  // Create a new client
  $client = new Google_Client();
  $client->setApplicationName('Client Sample Application');
  $client->useApplicationDefaultCredentials();
  $client->addScope('https://www.googleapis.com/auth/cloud-platform');

  // Create a new Storagetransfer service
  $service = new Google_Service_Storagetransfer($client);

  // The name of the transfer operation. Required.
  $name = '';

  $response = $service->transferOperations->resumeTransferOperations($name);
}

