============== file: src/main/java/com/google/gcloud/example/stub/GrpcNoTemplatesApiServiceStub.java ==============
/*
 * Copyright 2017, Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.google.gcloud.example.stub;

import com.google.api.core.BetaApi;
import com.google.api.gax.core.BackgroundResource;
import com.google.api.gax.core.BackgroundResourceAggregation;
import com.google.api.gax.grpc.GrpcCallableFactory;
import com.google.api.gax.rpc.ClientContext;
import com.google.api.gax.rpc.UnaryCallable;
import com.google.example.noPathTemplates.v1.IncrementRequest;
import com.google.gcloud.example.NoTemplatesApiServiceSettings;
import com.google.protobuf.Empty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import javax.annotation.Generated;

// AUTO-GENERATED DOCUMENTATION AND CLASS
/**
 * gRPC stub implementation for Google Fake API.
 *
 * <p>This class is for advanced usage and reflects the underlying API directly.
 */
@Generated("by GAPIC v0.0.5")
@BetaApi
public class GrpcNoTemplatesApiServiceStub extends NoTemplatesApiServiceStub {
  private static final UnaryCallable<IncrementRequest, Empty> directIncrementCallable =
      GrpcCallableFactory.createDirectCallable(
          io.grpc.MethodDescriptor.create(
              io.grpc.MethodDescriptor.MethodType.UNARY,
              "google.cloud.example.v1.NoTemplatesAPIService/Increment",
              io.grpc.protobuf.ProtoUtils.marshaller(IncrementRequest.getDefaultInstance()),
              io.grpc.protobuf.ProtoUtils.marshaller(Empty.getDefaultInstance())));

  private final BackgroundResource backgroundResources;

  private final UnaryCallable<IncrementRequest, Empty> incrementCallable;

  public static final GrpcNoTemplatesApiServiceStub create(NoTemplatesApiServiceSettings settings) throws IOException {
    return new GrpcNoTemplatesApiServiceStub(settings, ClientContext.create(settings));
  }

  public static final GrpcNoTemplatesApiServiceStub create(ClientContext clientContext) throws IOException {
    return new GrpcNoTemplatesApiServiceStub(NoTemplatesApiServiceSettings.defaultBuilder().build(), clientContext);
  }

  /**
   * Constructs an instance of GrpcNoTemplatesApiServiceStub, using the given settings.
   * This is protected so that it is easy to make a subclass, but otherwise, the static
   * factory methods should be preferred.
   */
  protected GrpcNoTemplatesApiServiceStub(NoTemplatesApiServiceSettings settings, ClientContext clientContext) throws IOException {

    this.incrementCallable = GrpcCallableFactory.create(directIncrementCallable,settings.incrementSettings(), clientContext);

    backgroundResources = new BackgroundResourceAggregation(clientContext.getBackgroundResources());
  }


  public UnaryCallable<IncrementRequest, Empty> incrementCallable() {
    return incrementCallable;
  }

  @Override
  public final void close() throws Exception {
    shutdown();
  }

  @Override
  public void shutdown() {
    backgroundResources.shutdown();
  }

  @Override
  public boolean isShutdown() {
    return backgroundResources.isShutdown();
  }

  @Override
  public boolean isTerminated() {
    return backgroundResources.isTerminated();
  }

  @Override
  public void shutdownNow() {
    backgroundResources.shutdownNow();
  }

  @Override
  public boolean awaitTermination(long duration, TimeUnit unit) throws InterruptedException {
    return backgroundResources.awaitTermination(duration, unit);
  }

}
