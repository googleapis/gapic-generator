
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Cloud Datastore API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/datastore
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/datastore_v1beta2'

service = Google::Apis::DatastoreV1beta2::DatastoreService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'allocate_dataset_ids' method:

# * Identifies the dataset.
dataset_id = ''

allocate_ids_request_object = Google::Apis::DatastoreV1beta2::AllocateIdsRequest.new


# Perform the call
response = service.allocate_dataset_ids(dataset_id, allocate_ids_request_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Cloud Datastore API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/datastore
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/datastore_v1beta2'

service = Google::Apis::DatastoreV1beta2::DatastoreService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'begin_dataset_transaction' method:

# * Identifies the dataset.
dataset_id = ''

begin_transaction_request_object = Google::Apis::DatastoreV1beta2::BeginTransactionRequest.new


# Perform the call
response = service.begin_dataset_transaction(dataset_id, begin_transaction_request_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Cloud Datastore API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/datastore
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/datastore_v1beta2'

service = Google::Apis::DatastoreV1beta2::DatastoreService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'commit_dataset' method:

# * Identifies the dataset.
dataset_id = ''

commit_request_object = Google::Apis::DatastoreV1beta2::CommitRequest.new


# Perform the call
response = service.commit_dataset(dataset_id, commit_request_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Cloud Datastore API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/datastore
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/datastore_v1beta2'

service = Google::Apis::DatastoreV1beta2::DatastoreService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'lookup_dataset' method:

# * Identifies the dataset.
dataset_id = ''

lookup_request_object = Google::Apis::DatastoreV1beta2::LookupRequest.new


# Perform the call
response = service.lookup_dataset(dataset_id, lookup_request_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Cloud Datastore API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/datastore
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/datastore_v1beta2'

service = Google::Apis::DatastoreV1beta2::DatastoreService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'rollback_dataset' method:

# * Identifies the dataset.
dataset_id = ''

rollback_request_object = Google::Apis::DatastoreV1beta2::RollbackRequest.new


# Perform the call
response = service.rollback_dataset(dataset_id, rollback_request_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Cloud Datastore API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/datastore
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/datastore_v1beta2'

service = Google::Apis::DatastoreV1beta2::DatastoreService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'run_dataset_query' method:

# * Identifies the dataset.
dataset_id = ''

run_query_request_object = Google::Apis::DatastoreV1beta2::RunQueryRequest.new


# Perform the call
response = service.run_dataset_query(dataset_id, run_query_request_object)
