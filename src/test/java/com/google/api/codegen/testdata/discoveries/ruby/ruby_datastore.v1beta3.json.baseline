
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Datastore API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/datastore
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/datastore_v1beta3'
require 'json'

service = Google::Apis::DatastoreV1beta3::DatastoreService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `allocate_project_ids` method:

# The ID of the project against which to make the request.
project_id = '{MY-PROJECT-ID}'


request_body = Google::Apis::DatastoreV1beta3::AllocateIdsRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.allocate_project_ids(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Datastore API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/datastore
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/datastore_v1beta3'
require 'json'

service = Google::Apis::DatastoreV1beta3::DatastoreService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `begin_project_transaction` method:

# The ID of the project against which to make the request.
project_id = '{MY-PROJECT-ID}'


request_body = Google::Apis::DatastoreV1beta3::BeginTransactionRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.begin_project_transaction(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Datastore API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/datastore
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/datastore_v1beta3'
require 'json'

service = Google::Apis::DatastoreV1beta3::DatastoreService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `commit_project` method:

# The ID of the project against which to make the request.
project_id = '{MY-PROJECT-ID}'


request_body = Google::Apis::DatastoreV1beta3::CommitRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.commit_project(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Datastore API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/datastore
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/datastore_v1beta3'
require 'json'

service = Google::Apis::DatastoreV1beta3::DatastoreService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `lookup_project` method:

# The ID of the project against which to make the request.
project_id = '{MY-PROJECT-ID}'


request_body = Google::Apis::DatastoreV1beta3::LookupRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.lookup_project(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Datastore API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/datastore
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/datastore_v1beta3'
require 'json'

service = Google::Apis::DatastoreV1beta3::DatastoreService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `rollback_project` method:

# The ID of the project against which to make the request.
project_id = '{MY-PROJECT-ID}'


request_body = Google::Apis::DatastoreV1beta3::RollbackRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.rollback_project(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Datastore API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/datastore
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/datastore_v1beta3'
require 'json'

service = Google::Apis::DatastoreV1beta3::DatastoreService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `run_project_query` method:

# The ID of the project against which to make the request.
project_id = '{MY-PROJECT-ID}'


request_body = Google::Apis::DatastoreV1beta3::RunQueryRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.run_project_query(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
