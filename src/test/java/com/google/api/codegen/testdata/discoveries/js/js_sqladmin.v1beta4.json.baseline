
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.

    // The ID of the Backup Run to delete. To find a Backup Run ID, use the list method.
    id: '0',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.backupRuns.delete(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.

    // The ID of this Backup Run.
    id: '0',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.backupRuns.get(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var backupRunBody = {
    // TODO: Add desired properties to the request body.
  };

  var request = gapi.client.sqladmin.backupRuns.insert(params, backupRunBody);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  executeRequest(params);
}

function executeRequest(params) {
  var request = gapi.client.sqladmin.backupRuns.list(params);
  request.then(function(response) {
    var itemsPage = response.result.items;
    for (var i = 0; i < itemsPage.length; i++) {
      // TODO: Change code below to process each resource in `itemsPage`:
      console.log(JSON.stringify(itemsPage[i], null, 2));
    }

    if (response.result.nextPageToken) {
      params.pageToken = response.result.nextPageToken;
      executeRequest(params);
    }
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Database instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.

    // Name of the database to be deleted in the instance.
    database: '',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.databases.delete(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Database instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.

    // Name of the database in the instance.
    database: '',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.databases.get(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Database instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var databaseBody = {
    // TODO: Add desired properties to the request body.
  };

  var request = gapi.client.sqladmin.databases.insert(params, databaseBody);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project for which to list Cloud SQL instances.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.databases.list(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Database instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.

    // Name of the database to be updated in the instance.
    database: '',  // TODO: Update placeholder value.
  };

  var databaseBody = {
    // TODO: Add desired properties to the request body. Only these properties
    // will be changed.
  };

  var request = gapi.client.sqladmin.databases.patch(params, databaseBody);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Database instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.

    // Name of the database to be updated in the instance.
    database: '',  // TODO: Update placeholder value.
  };

  var databaseBody = {
    // TODO: Add desired properties to the request body. All existing properties
    // will be replaced.
  };

  var request = gapi.client.sqladmin.databases.update(params, databaseBody);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var request = gapi.client.sqladmin.flags.list();
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the source as well as the clone Cloud SQL instance.
    project: '',  // TODO: Update placeholder value.

    // The ID of the Cloud SQL instance to be cloned (source). This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var instancesCloneRequestBody = {
    // TODO: Add desired properties to the request body.
  };

  var request = gapi.client.sqladmin.instances.clone(params, instancesCloneRequestBody);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance to be deleted.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.instances.delete(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance to be exported.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var instancesExportRequestBody = {
    // TODO: Add desired properties to the request body.
  };

  var request = gapi.client.sqladmin.instances.export(params, instancesExportRequestBody);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // ID of the project that contains the read replica.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var instancesFailoverRequestBody = {
    // TODO: Add desired properties to the request body.
  };

  var request = gapi.client.sqladmin.instances.failover(params, instancesFailoverRequestBody);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Database instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.instances.get(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var instancesImportRequestBody = {
    // TODO: Add desired properties to the request body.
  };

  var request = gapi.client.sqladmin.instances.import(params, instancesImportRequestBody);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project to which the newly created Cloud SQL instances should belong.
    project: '',  // TODO: Update placeholder value.
  };

  var databaseInstanceBody = {
    // TODO: Add desired properties to the request body.
  };

  var request = gapi.client.sqladmin.instances.insert(params, databaseInstanceBody);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project for which to list Cloud SQL instances.
    project: '',  // TODO: Update placeholder value.
  };

  executeRequest(params);
}

function executeRequest(params) {
  var request = gapi.client.sqladmin.instances.list(params);
  request.then(function(response) {
    var itemsPage = response.result.items;
    for (var i = 0; i < itemsPage.length; i++) {
      // TODO: Change code below to process each resource in `itemsPage`:
      console.log(JSON.stringify(itemsPage[i], null, 2));
    }

    if (response.result.nextPageToken) {
      params.pageToken = response.result.nextPageToken;
      executeRequest(params);
    }
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var databaseInstanceBody = {
    // TODO: Add desired properties to the request body. Only these properties
    // will be changed.
  };

  var request = gapi.client.sqladmin.instances.patch(params, databaseInstanceBody);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // ID of the project that contains the read replica.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL read replica instance name.
    instance: '',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.instances.promoteReplica(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.instances.resetSslConfig(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance to be restarted.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.instances.restart(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var instancesRestoreBackupRequestBody = {
    // TODO: Add desired properties to the request body.
  };

  var request = gapi.client.sqladmin.instances.restoreBackup(params, instancesRestoreBackupRequestBody);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // ID of the project that contains the read replica.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL read replica instance name.
    instance: '',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.instances.startReplica(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // ID of the project that contains the read replica.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL read replica instance name.
    instance: '',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.instances.stopReplica(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var databaseInstanceBody = {
    // TODO: Add desired properties to the request body. All existing properties
    // will be replaced.
  };

  var request = gapi.client.sqladmin.instances.update(params, databaseInstanceBody);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Instance operation ID.
    operation: '',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.operations.get(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  executeRequest(params);
}

function executeRequest(params) {
  var request = gapi.client.sqladmin.operations.list(params);
  request.then(function(response) {
    var itemsPage = response.result.items;
    for (var i = 0; i < itemsPage.length; i++) {
      // TODO: Change code below to process each resource in `itemsPage`:
      console.log(JSON.stringify(itemsPage[i], null, 2));
    }

    if (response.result.nextPageToken) {
      params.pageToken = response.result.nextPageToken;
      executeRequest(params);
    }
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the Cloud SQL project.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var sslCertsCreateEphemeralRequestBody = {
    // TODO: Add desired properties to the request body.
  };

  var request = gapi.client.sqladmin.sslCerts.createEphemeral(params, sslCertsCreateEphemeralRequestBody);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance to be deleted.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.

    // Sha1 FingerPrint.
    sha1Fingerprint: '',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.sslCerts.delete(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.

    // Sha1 FingerPrint.
    sha1Fingerprint: '',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.sslCerts.get(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project to which the newly created Cloud SQL instances should belong.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var sslCertsInsertRequestBody = {
    // TODO: Add desired properties to the request body.
  };

  var request = gapi.client.sqladmin.sslCerts.insert(params, sslCertsInsertRequestBody);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project for which to list Cloud SQL instances.
    project: '',  // TODO: Update placeholder value.

    // Cloud SQL instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.sslCerts.list(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project for which to list tiers.
    project: '',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.tiers.list(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Database instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.

    // Host of the user in the instance.
    host: '',  // TODO: Update placeholder value.

    // Name of the user in the instance.
    name: '',  // TODO: Update placeholder value.
  };

  var request = gapi.client.sqladmin.users.delete(params);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Database instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  var userBody = {
    // TODO: Add desired properties to the request body.
  };

  var request = gapi.client.sqladmin.users.insert(params, userBody);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Database instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.
  };

  executeRequest(params);
}

function executeRequest(params) {
  var request = gapi.client.sqladmin.users.list(params);
  request.then(function(response) {
    var itemsPage = response.result.items;
    for (var i = 0; i < itemsPage.length; i++) {
      // TODO: Change code below to process each resource in `itemsPage`:
      console.log(JSON.stringify(itemsPage[i], null, 2));
    }

    if (response.result.nextPageToken) {
      params.pageToken = response.result.nextPageToken;
      executeRequest(params);
    }
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
<!--
BEFORE RUNNING:
---------------
1. If not already done, enable the Cloud SQL Administration API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/sqladmin
2. Get access keys for your application. See
   https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
-->
<script src="https://apis.google.com/js/api.js"></script>
<script>
function makeApiCall() {
  var params = {
    // Project ID of the project that contains the instance.
    project: '',  // TODO: Update placeholder value.

    // Database instance ID. This does not include the project ID.
    instance: '',  // TODO: Update placeholder value.

    // Host of the user in the instance.
    host: '',  // TODO: Update placeholder value.

    // Name of the user in the instance.
    name: '',  // TODO: Update placeholder value.
  };

  var userBody = {
    // TODO: Add desired properties to the request body. All existing properties
    // will be replaced.
  };

  var request = gapi.client.sqladmin.users.update(params, userBody);
  request.then(function(response) {
    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response.result, null, 2));
  }, function(reason) {
    console.log('error: ' + reason.result.error.message);
  });
}

function start() {
  gapi.client.init({
    'clientId': '',  // TODO: Update placeholder with desired client ID.
    'scope': 'https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/sqlservice.admin',
    'discoveryDocs': ['https://content.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'],
  }).then(function() {
    gapi.auth2.getAuthInstance().signIn();
    gapi.auth2.getAuthInstance().isSignedIn.listen(function(isSignedIn) {
      if (isSignedIn) {
        makeApiCall();
      }
    });
  });
}
gapi.load('client', start);
</script>
