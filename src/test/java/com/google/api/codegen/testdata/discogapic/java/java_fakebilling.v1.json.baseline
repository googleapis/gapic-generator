============== file: src/main/java/com/google/cloud/fakebilling/v1/AttachedDisk.java ==============
/*
 *
 */
package com.google.cloud.fakebilling.v1;

import com.google.api.core.BetaApi;
import com.google.fakebilling.v1.AttachedDisk;
import com.google.fakebilling.v1.AttachedDiskInitializeParams;
import com.google.fakebilling.v1.CustomerEncryptionKey;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class AttachedDisk implements Serializable {
  private final Boolean autoDelete;
  private final Boolean boot;
  private final String deviceName;
  private final CustomerEncryptionKey diskEncryptionKey;
  private final Integer index;
  private final AttachedDiskInitializeParams initializeParams;
  private final String interface2;
  private final String kind;
  private final List<String> licenses;
  private final String mode;
  private final String source;
  private final String type;

  private AttachedDisk(

    Boolean autoDelete,
    Boolean boot,
    String deviceName,
    CustomerEncryptionKey diskEncryptionKey,
    Integer index,
    AttachedDiskInitializeParams initializeParams,
    String interface2,
    String kind,
    List<String> licenses,
    String mode,
    String source,
    String type
    ) {
    this.autoDelete = autoDelete;
    this.boot = boot;
    this.deviceName = deviceName;
    this.diskEncryptionKey = diskEncryptionKey;
    this.index = index;
    this.initializeParams = initializeParams;
    this.interface2 = interface2;
    this.kind = kind;
    this.licenses = licenses;
    this.mode = mode;
    this.source = source;
    this.type = type;
  }

  public Boolean getAutoDelete() {
    return autoDelete;
  }

  public Boolean getBoot() {
    return boot;
  }

  public String getDeviceName() {
    return deviceName;
  }

  public CustomerEncryptionKey getDiskEncryptionKey() {
    return diskEncryptionKey;
  }

  public Integer getIndex() {
    return index;
  }

  public AttachedDiskInitializeParams getInitializeParams() {
    return initializeParams;
  }

  public String getInterface2() {
    return interface2;
  }

  public String getKind() {
    return kind;
  }

  public List<String> getLicenses() {
    return licenses;
  }

  public String getMode() {
    return mode;
  }

  public String getSource() {
    return source;
  }

  public String getType() {
    return type;
  }













  public static Builder newBuilder() {
    return new AttachedDisk.Builder();
  }

  public static class Builder {
    private Boolean autoDelete;
    private Boolean boot;
    private String deviceName;
    private CustomerEncryptionKey diskEncryptionKey;
    private Integer index;
    private AttachedDiskInitializeParams initializeParams;
    private String interface2;
    private String kind;
    private List<String> licenses;
    private String mode;
    private String source;
    private String type;

    Builder() {}

    Builder(AttachedDisk source) {
      this.autoDelete = source.autoDelete;
      this.boot = source.boot;
      this.deviceName = source.deviceName;
      this.diskEncryptionKey = source.diskEncryptionKey;
      this.index = source.index;
      this.initializeParams = source.initializeParams;
      this.interface2 = source.interface2;
      this.kind = source.kind;
      this.licenses = source.licenses;
      this.mode = source.mode;
      this.source = source.source;
      this.type = source.type;
    }

    public Boolean getAutoDelete() {
      return autoDelete;
    }

    public Builder setAutoDelete(Boolean autoDelete) {
      this.autoDelete = autoDelete;
      return this;
    }

    public Boolean getBoot() {
      return boot;
    }

    public Builder setBoot(Boolean boot) {
      this.boot = boot;
      return this;
    }

    public String getDeviceName() {
      return deviceName;
    }

    public Builder setDeviceName(String deviceName) {
      this.deviceName = deviceName;
      return this;
    }

    public CustomerEncryptionKey getDiskEncryptionKey() {
      return diskEncryptionKey;
    }

    public Builder setDiskEncryptionKey(CustomerEncryptionKey diskEncryptionKey) {
      this.diskEncryptionKey = diskEncryptionKey;
      return this;
    }

    public Integer getIndex() {
      return index;
    }

    public Builder setIndex(Integer index) {
      this.index = index;
      return this;
    }

    public AttachedDiskInitializeParams getInitializeParams() {
      return initializeParams;
    }

    public Builder setInitializeParams(AttachedDiskInitializeParams initializeParams) {
      this.initializeParams = initializeParams;
      return this;
    }

    public String getInterface2() {
      return interface2;
    }

    public Builder setInterface2(String interface2) {
      this.interface2 = interface2;
      return this;
    }

    public String getKind() {
      return kind;
    }

    public Builder setKind(String kind) {
      this.kind = kind;
      return this;
    }

    public List<String> getLicenses() {
      return licenses;
    }

    public Builder setLicenses(List<String> licenses) {
      this.licenses = licenses;
      return this;
    }

    public String getMode() {
      return mode;
    }

    public Builder setMode(String mode) {
      this.mode = mode;
      return this;
    }

    public String getSource() {
      return source;
    }

    public Builder setSource(String source) {
      this.source = source;
      return this;
    }

    public String getType() {
      return type;
    }

    public Builder setType(String type) {
      this.type = type;
      return this;
    }


    public AttachedDisk build() {
      return new AttachedDisk(

        autoDelete,
        boot,
        deviceName,
        diskEncryptionKey,
        index,
        initializeParams,
        interface2,
        kind,
        licenses,
        mode,
        source,
        type
      );
    }
  }

  @Override
  public String toString() {
    return "AttachedDisk{"

    + "autoDelete=" + autoDelete + ", "
    + "boot=" + boot + ", "
    + "deviceName=" + deviceName + ", "
    + "diskEncryptionKey=" + diskEncryptionKey + ", "
    + "index=" + index + ", "
    + "initializeParams=" + initializeParams + ", "
    + "interface2=" + interface2 + ", "
    + "kind=" + kind + ", "
    + "licenses=" + licenses + ", "
    + "mode=" + mode + ", "
    + "source=" + source + ", "
    + "type=" + type
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof AttachedDisk) {
      AttachedDisk that = (AttachedDisk) o;
      return

      this.autoDelete.equals(that.getAutoDelete())&&
      this.boot.equals(that.getBoot())&&
      this.deviceName.equals(that.getDeviceName())&&
      this.diskEncryptionKey.equals(that.getDiskEncryptionKey())&&
      this.index.equals(that.getIndex())&&
      this.initializeParams.equals(that.getInitializeParams())&&
      this.interface2.equals(that.getInterface2())&&
      this.kind.equals(that.getKind())&&
      this.licenses.equals(that.getLicenses())&&
      this.mode.equals(that.getMode())&&
      this.source.equals(that.getSource())&&
      this.type.equals(that.getType())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.autoDelete.hashCode();
    h *= 1000003;
    h ^= this.boot.hashCode();
    h *= 1000003;
    h ^= this.deviceName.hashCode();
    h *= 1000003;
    h ^= this.diskEncryptionKey.hashCode();
    h *= 1000003;
    h ^= this.index.hashCode();
    h *= 1000003;
    h ^= this.initializeParams.hashCode();
    h *= 1000003;
    h ^= this.interface2.hashCode();
    h *= 1000003;
    h ^= this.kind.hashCode();
    h *= 1000003;
    h ^= this.licenses.hashCode();
    h *= 1000003;
    h ^= this.mode.hashCode();
    h *= 1000003;
    h ^= this.source.hashCode();
    h *= 1000003;
    h ^= this.type.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/fakebilling/v1/BillingAccount.java ==============
/*
 *
 */
package com.google.cloud.fakebilling.v1;

import com.google.api.core.BetaApi;
import com.google.fakebilling.v1.BillingAccount;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class BillingAccount implements Serializable {
  private final String displayName;
  private final String name;
  private final Boolean open;

  private BillingAccount(

    String displayName,
    String name,
    Boolean open
    ) {
    this.displayName = displayName;
    this.name = name;
    this.open = open;
  }

  public String getDisplayName() {
    return displayName;
  }

  public String getName() {
    return name;
  }

  public Boolean getOpen() {
    return open;
  }




  public static Builder newBuilder() {
    return new BillingAccount.Builder();
  }

  public static class Builder {
    private String displayName;
    private String name;
    private Boolean open;

    Builder() {}

    Builder(BillingAccount source) {
      this.displayName = source.displayName;
      this.name = source.name;
      this.open = source.open;
    }

    public String getDisplayName() {
      return displayName;
    }

    public Builder setDisplayName(String displayName) {
      this.displayName = displayName;
      return this;
    }

    public String getName() {
      return name;
    }

    public Builder setName(String name) {
      this.name = name;
      return this;
    }

    public Boolean getOpen() {
      return open;
    }

    public Builder setOpen(Boolean open) {
      this.open = open;
      return this;
    }


    public BillingAccount build() {
      return new BillingAccount(

        displayName,
        name,
        open
      );
    }
  }

  @Override
  public String toString() {
    return "BillingAccount{"

    + "displayName=" + displayName + ", "
    + "name=" + name + ", "
    + "open=" + open
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof BillingAccount) {
      BillingAccount that = (BillingAccount) o;
      return

      this.displayName.equals(that.getDisplayName())&&
      this.name.equals(that.getName())&&
      this.open.equals(that.getOpen())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.displayName.hashCode();
    h *= 1000003;
    h ^= this.name.hashCode();
    h *= 1000003;
    h ^= this.open.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/fakebilling/v1/FakebillingClient.java ==============
/*
 *
 */
package com.google.compute.v1;

import com.google.api.core.BetaApi;
import com.google.api.gax.grpc.ChannelAndExecutor;
import com.google.api.gax.grpc.UnaryCallable;
import com.google.api.pathtemplate.PathTemplate;
import io.grpc.ManagedChannel;
import java.io.Closeable;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ScheduledExecutorService;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public class FakebillingClient implements AutoCloseable {
  private final FakebillingSettings settings;
  private final ScheduledExecutorService executor;
  private final ManagedChannel channel;
  private final List<AutoCloseable> closeables = new ArrayList<>();




  /**
   * Constructs an instance of FakebillingClient with default settings.
   */
  public static final FakebillingClient create() throws IOException {
    return create(FakebillingSettings.defaultBuilder().build());
  }

  /**
   * Constructs an instance of FakebillingClient, using the given settings.
   * The channels are created based on the settings passed in, or defaults for any
   * settings that are not set.
   */
  public static final FakebillingClient create(FakebillingSettings settings) throws IOException {
    return new FakebillingClient(settings);
  }

  /**
   * Constructs an instance of FakebillingClient, using the given settings.
   * This is protected so that it easy to make a subclass, but otherwise, the static
   * factory methods should be preferred.
   */
  protected FakebillingClient(FakebillingSettings settings) throws IOException {
    this.settings = settings;
    ChannelAndExecutor channelAndExecutor = settings.getChannelAndExecutor();
    this.executor = channelAndExecutor.getExecutor();
    this.channel = channelAndExecutor.getChannel();



    if (settings.getChannelProvider().shouldAutoClose()) {
      closeables.add(
        new Closeable() {
          @Override
          public void close() throws IOException {
            channel.shutdown();
          }
        });
    }
    if (settings.getExecutorProvider().shouldAutoClose()) {
      closeables.add(
        new Closeable() {
          @Override
          public void close() throws IOException {
            executor.shutdown();
          }
        });
    }
  }

  public final FakebillingSettings getSettings() {
    return settings;
  }



  /**
   * Initiates an orderly shutdown in which preexisting calls continue but new calls are immediately
   * cancelled.
   */
  @Override
  public final void close() throws Exception {
    for (AutoCloseable closeable : closeables) {
      closeable.close();
    }
  }

}
============== file: src/main/java/com/google/cloud/fakebilling/v1/ListBillingAccountsResponse.java ==============
/*
 *
 */
package com.google.cloud.fakebilling.v1;

import com.google.api.core.BetaApi;
import com.google.fakebilling.v1.BillingAccount;
import com.google.fakebilling.v1.ListBillingAccountsResponse;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class ListBillingAccountsResponse implements Serializable {
  private final List<BillingAccount> billingAccounts;
  private final String nextPageToken;

  private ListBillingAccountsResponse(

    List<BillingAccount> billingAccounts,
    String nextPageToken
    ) {
    this.billingAccounts = billingAccounts;
    this.nextPageToken = nextPageToken;
  }

  public List<BillingAccount> getBillingAccounts() {
    return billingAccounts;
  }

  public String getNextPageToken() {
    return nextPageToken;
  }



  public static Builder newBuilder() {
    return new ListBillingAccountsResponse.Builder();
  }

  public static class Builder {
    private List<BillingAccount> billingAccounts;
    private String nextPageToken;

    Builder() {}

    Builder(ListBillingAccountsResponse source) {
      this.billingAccounts = source.billingAccounts;
      this.nextPageToken = source.nextPageToken;
    }

    public List<BillingAccount> getBillingAccounts() {
      return billingAccounts;
    }

    public Builder setBillingAccounts(List<BillingAccount> billingAccounts) {
      this.billingAccounts = billingAccounts;
      return this;
    }

    public String getNextPageToken() {
      return nextPageToken;
    }

    public Builder setNextPageToken(String nextPageToken) {
      this.nextPageToken = nextPageToken;
      return this;
    }


    public ListBillingAccountsResponse build() {
      return new ListBillingAccountsResponse(

        billingAccounts,
        nextPageToken
      );
    }
  }

  @Override
  public String toString() {
    return "ListBillingAccountsResponse{"

    + "billingAccounts=" + billingAccounts + ", "
    + "nextPageToken=" + nextPageToken
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof ListBillingAccountsResponse) {
      ListBillingAccountsResponse that = (ListBillingAccountsResponse) o;
      return

      this.billingAccounts.equals(that.getBillingAccounts())&&
      this.nextPageToken.equals(that.getNextPageToken())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.billingAccounts.hashCode();
    h *= 1000003;
    h ^= this.nextPageToken.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/fakebilling/v1/ListProjectBillingInfoResponse.java ==============
/*
 *
 */
package com.google.cloud.fakebilling.v1;

import com.google.api.core.BetaApi;
import com.google.fakebilling.v1.ListProjectBillingInfoResponse;
import com.google.fakebilling.v1.ProjectBillingInfo;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class ListProjectBillingInfoResponse implements Serializable {
  private final String nextPageToken;
  private final List<ProjectBillingInfo> projectBillingInfo;

  private ListProjectBillingInfoResponse(

    String nextPageToken,
    List<ProjectBillingInfo> projectBillingInfo
    ) {
    this.nextPageToken = nextPageToken;
    this.projectBillingInfo = projectBillingInfo;
  }

  public String getNextPageToken() {
    return nextPageToken;
  }

  public List<ProjectBillingInfo> getProjectBillingInfo() {
    return projectBillingInfo;
  }



  public static Builder newBuilder() {
    return new ListProjectBillingInfoResponse.Builder();
  }

  public static class Builder {
    private String nextPageToken;
    private List<ProjectBillingInfo> projectBillingInfo;

    Builder() {}

    Builder(ListProjectBillingInfoResponse source) {
      this.nextPageToken = source.nextPageToken;
      this.projectBillingInfo = source.projectBillingInfo;
    }

    public String getNextPageToken() {
      return nextPageToken;
    }

    public Builder setNextPageToken(String nextPageToken) {
      this.nextPageToken = nextPageToken;
      return this;
    }

    public List<ProjectBillingInfo> getProjectBillingInfo() {
      return projectBillingInfo;
    }

    public Builder setProjectBillingInfo(List<ProjectBillingInfo> projectBillingInfo) {
      this.projectBillingInfo = projectBillingInfo;
      return this;
    }


    public ListProjectBillingInfoResponse build() {
      return new ListProjectBillingInfoResponse(

        nextPageToken,
        projectBillingInfo
      );
    }
  }

  @Override
  public String toString() {
    return "ListProjectBillingInfoResponse{"

    + "nextPageToken=" + nextPageToken + ", "
    + "projectBillingInfo=" + projectBillingInfo
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof ListProjectBillingInfoResponse) {
      ListProjectBillingInfoResponse that = (ListProjectBillingInfoResponse) o;
      return

      this.nextPageToken.equals(that.getNextPageToken())&&
      this.projectBillingInfo.equals(that.getProjectBillingInfo())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.nextPageToken.hashCode();
    h *= 1000003;
    h ^= this.projectBillingInfo.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/fakebilling/v1/Operation.java ==============
/*
 *
 */
package com.google.cloud.fakebilling.v1;

import com.google.api.core.BetaApi;
import com.google.fakebilling.v1.Data.Data;
import com.google.fakebilling.v1.Errors.Errors;
import com.google.fakebilling.v1.Operation;
import com.google.fakebilling.v1.Operation.Error;
import com.google.fakebilling.v1.ProjectBillingInfo;
import com.google.fakebilling.v1.Warnings.Warnings;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class Operation implements Serializable {
  private final String creationTimestamp;
  private final String description;
  private final Error error;
  private final Integer httpErrorStatusCode;
  private final String id;
  private final String kind;
  private final String name;
  private final String status;
  private final String targetId;
  private final List<Warnings> warnings;
  private final String zone;

  private Operation(

    String creationTimestamp,
    String description,
    Error error,
    Integer httpErrorStatusCode,
    String id,
    String kind,
    String name,
    String status,
    String targetId,
    List<Warnings> warnings,
    String zone
    ) {
    this.creationTimestamp = creationTimestamp;
    this.description = description;
    this.error = error;
    this.httpErrorStatusCode = httpErrorStatusCode;
    this.id = id;
    this.kind = kind;
    this.name = name;
    this.status = status;
    this.targetId = targetId;
    this.warnings = warnings;
    this.zone = zone;
  }

  public String getCreationTimestamp() {
    return creationTimestamp;
  }

  public String getDescription() {
    return description;
  }

  public Error getError() {
    return error;
  }

  public Integer getHttpErrorStatusCode() {
    return httpErrorStatusCode;
  }

  public String getId() {
    return id;
  }

  public String getKind() {
    return kind;
  }

  public String getName() {
    return name;
  }

  public String getStatus() {
    return status;
  }

  public String getTargetId() {
    return targetId;
  }

  public List<Warnings> getWarnings() {
    return warnings;
  }

  public String getZone() {
    return zone;
  }



  public final class Error implements Serializable {
    private final List<Errors> errors;

    private Error(

      List<Errors> errors
      ) {
      this.errors = errors;
    }

    public List<Errors> getErrors() {
      return errors;
    }

    public final class Errors implements Serializable {
      private final String code;
      private final String location;
      private final String message;

      private Errors(

        String code,
        String location,
        String message
        ) {
        this.code = code;
        this.location = location;
        this.message = message;
      }

      public String getCode() {
        return code;
      }

      public String getLocation() {
        return location;
      }

      public String getMessage() {
        return message;
      }




      public static Builder newBuilder() {
        return new List<Errors>.Builder();
      }

      public static class Builder {
        private String code;
        private String location;
        private String message;

        Builder() {}

        Builder(List<Errors> source) {
          this.code = source.code;
          this.location = source.location;
          this.message = source.message;
        }

        public String getCode() {
          return code;
        }

        public Builder setCode(String code) {
          this.code = code;
          return this;
        }

        public String getLocation() {
          return location;
        }

        public Builder setLocation(String location) {
          this.location = location;
          return this;
        }

        public String getMessage() {
          return message;
        }

        public Builder setMessage(String message) {
          this.message = message;
          return this;
        }


        public List<Errors> build() {
          return new List<Errors>(

            code,
            location,
            message
          );
        }
      }

      @Override
      public String toString() {
        return "List<Errors>{"

        + "code=" + code + ", "
        + "location=" + location + ", "
        + "message=" + message
            + "}";
      }

      @Override
      public boolean equals(Object o) {
        if (o == this) {
          return true;
        }
        if (o instanceof List<Errors>) {
          List<Errors> that = (List<Errors>) o;
          return

          this.code.equals(that.getCode())&&
          this.location.equals(that.getLocation())&&
          this.message.equals(that.getMessage())
          ;
        }
        return false;
      }

      @Override
      public int hashCode() {
        int h = 1;
        h *= 1000003;
        h ^= this.code.hashCode();
        h *= 1000003;
        h ^= this.location.hashCode();
        h *= 1000003;
        h ^= this.message.hashCode();
        return h;
      }
    }
    public static Builder newBuilder() {
      return new Error.Builder();
    }

    public static class Builder {
      private List<Errors> errors;

      Builder() {}

      Builder(Error source) {
        this.errors = source.errors;
      }

      public List<Errors> getErrors() {
        return errors;
      }

      public Builder setErrors(List<Errors> errors) {
        this.errors = errors;
        return this;
      }


      public Error build() {
        return new Error(

          errors
        );
      }
    }

    @Override
    public String toString() {
      return "Error{"

      + "errors=" + errors
          + "}";
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Error) {
        Error that = (Error) o;
        return

        this.errors.equals(that.getErrors())
        ;
      }
      return false;
    }

    @Override
    public int hashCode() {
      int h = 1;
      h *= 1000003;
      h ^= this.errors.hashCode();
      return h;
    }
  }






  public final class Warnings implements Serializable {
    private final String code2;
    private final List<Data> data;
    private final String message2;
    private final ProjectBillingInfo projectBillingInfo;

    private Warnings(

      String code2,
      List<Data> data,
      String message2,
      ProjectBillingInfo projectBillingInfo
      ) {
      this.code2 = code2;
      this.data = data;
      this.message2 = message2;
      this.projectBillingInfo = projectBillingInfo;
    }

    public String getCode2() {
      return code2;
    }

    public List<Data> getData() {
      return data;
    }

    public String getMessage2() {
      return message2;
    }

    public ProjectBillingInfo getProjectBillingInfo() {
      return projectBillingInfo;
    }


    public final class Data implements Serializable {
      private final String key;
      private final String value;

      private Data(

        String key,
        String value
        ) {
        this.key = key;
        this.value = value;
      }

      public String getKey() {
        return key;
      }

      public String getValue() {
        return value;
      }



      public static Builder newBuilder() {
        return new List<Data>.Builder();
      }

      public static class Builder {
        private String key;
        private String value;

        Builder() {}

        Builder(List<Data> source) {
          this.key = source.key;
          this.value = source.value;
        }

        public String getKey() {
          return key;
        }

        public Builder setKey(String key) {
          this.key = key;
          return this;
        }

        public String getValue() {
          return value;
        }

        public Builder setValue(String value) {
          this.value = value;
          return this;
        }


        public List<Data> build() {
          return new List<Data>(

            key,
            value
          );
        }
      }

      @Override
      public String toString() {
        return "List<Data>{"

        + "key=" + key + ", "
        + "value=" + value
            + "}";
      }

      @Override
      public boolean equals(Object o) {
        if (o == this) {
          return true;
        }
        if (o instanceof List<Data>) {
          List<Data> that = (List<Data>) o;
          return

          this.key.equals(that.getKey())&&
          this.value.equals(that.getValue())
          ;
        }
        return false;
      }

      @Override
      public int hashCode() {
        int h = 1;
        h *= 1000003;
        h ^= this.key.hashCode();
        h *= 1000003;
        h ^= this.value.hashCode();
        return h;
      }
    }


    public static Builder newBuilder() {
      return new List<Warnings>.Builder();
    }

    public static class Builder {
      private String code2;
      private List<Data> data;
      private String message2;
      private ProjectBillingInfo projectBillingInfo;

      Builder() {}

      Builder(List<Warnings> source) {
        this.code2 = source.code2;
        this.data = source.data;
        this.message2 = source.message2;
        this.projectBillingInfo = source.projectBillingInfo;
      }

      public String getCode2() {
        return code2;
      }

      public Builder setCode2(String code2) {
        this.code2 = code2;
        return this;
      }

      public List<Data> getData() {
        return data;
      }

      public Builder setData(List<Data> data) {
        this.data = data;
        return this;
      }

      public String getMessage2() {
        return message2;
      }

      public Builder setMessage2(String message2) {
        this.message2 = message2;
        return this;
      }

      public ProjectBillingInfo getProjectBillingInfo() {
        return projectBillingInfo;
      }

      public Builder setProjectBillingInfo(ProjectBillingInfo projectBillingInfo) {
        this.projectBillingInfo = projectBillingInfo;
        return this;
      }


      public List<Warnings> build() {
        return new List<Warnings>(

          code2,
          data,
          message2,
          projectBillingInfo
        );
      }
    }

    @Override
    public String toString() {
      return "List<Warnings>{"

      + "code2=" + code2 + ", "
      + "data=" + data + ", "
      + "message2=" + message2 + ", "
      + "projectBillingInfo=" + projectBillingInfo
          + "}";
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof List<Warnings>) {
        List<Warnings> that = (List<Warnings>) o;
        return

        this.code2.equals(that.getCode2())&&
        this.data.equals(that.getData())&&
        this.message2.equals(that.getMessage2())&&
        this.projectBillingInfo.equals(that.getProjectBillingInfo())
        ;
      }
      return false;
    }

    @Override
    public int hashCode() {
      int h = 1;
      h *= 1000003;
      h ^= this.code2.hashCode();
      h *= 1000003;
      h ^= this.data.hashCode();
      h *= 1000003;
      h ^= this.message2.hashCode();
      h *= 1000003;
      h ^= this.projectBillingInfo.hashCode();
      return h;
    }
  }

  public static Builder newBuilder() {
    return new Operation.Builder();
  }

  public static class Builder {
    private String creationTimestamp;
    private String description;
    private Error error;
    private Integer httpErrorStatusCode;
    private String id;
    private String kind;
    private String name;
    private String status;
    private String targetId;
    private List<Warnings> warnings;
    private String zone;

    Builder() {}

    Builder(Operation source) {
      this.creationTimestamp = source.creationTimestamp;
      this.description = source.description;
      this.error = source.error;
      this.httpErrorStatusCode = source.httpErrorStatusCode;
      this.id = source.id;
      this.kind = source.kind;
      this.name = source.name;
      this.status = source.status;
      this.targetId = source.targetId;
      this.warnings = source.warnings;
      this.zone = source.zone;
    }

    public String getCreationTimestamp() {
      return creationTimestamp;
    }

    public Builder setCreationTimestamp(String creationTimestamp) {
      this.creationTimestamp = creationTimestamp;
      return this;
    }

    public String getDescription() {
      return description;
    }

    public Builder setDescription(String description) {
      this.description = description;
      return this;
    }

    public Error getError() {
      return error;
    }

    public Builder setError(Error error) {
      this.error = error;
      return this;
    }

    public Integer getHttpErrorStatusCode() {
      return httpErrorStatusCode;
    }

    public Builder setHttpErrorStatusCode(Integer httpErrorStatusCode) {
      this.httpErrorStatusCode = httpErrorStatusCode;
      return this;
    }

    public String getId() {
      return id;
    }

    public Builder setId(String id) {
      this.id = id;
      return this;
    }

    public String getKind() {
      return kind;
    }

    public Builder setKind(String kind) {
      this.kind = kind;
      return this;
    }

    public String getName() {
      return name;
    }

    public Builder setName(String name) {
      this.name = name;
      return this;
    }

    public String getStatus() {
      return status;
    }

    public Builder setStatus(String status) {
      this.status = status;
      return this;
    }

    public String getTargetId() {
      return targetId;
    }

    public Builder setTargetId(String targetId) {
      this.targetId = targetId;
      return this;
    }

    public List<Warnings> getWarnings() {
      return warnings;
    }

    public Builder setWarnings(List<Warnings> warnings) {
      this.warnings = warnings;
      return this;
    }

    public String getZone() {
      return zone;
    }

    public Builder setZone(String zone) {
      this.zone = zone;
      return this;
    }


    public Operation build() {
      return new Operation(

        creationTimestamp,
        description,
        error,
        httpErrorStatusCode,
        id,
        kind,
        name,
        status,
        targetId,
        warnings,
        zone
      );
    }
  }

  @Override
  public String toString() {
    return "Operation{"

    + "creationTimestamp=" + creationTimestamp + ", "
    + "description=" + description + ", "
    + "error=" + error + ", "
    + "httpErrorStatusCode=" + httpErrorStatusCode + ", "
    + "id=" + id + ", "
    + "kind=" + kind + ", "
    + "name=" + name + ", "
    + "status=" + status + ", "
    + "targetId=" + targetId + ", "
    + "warnings=" + warnings + ", "
    + "zone=" + zone
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof Operation) {
      Operation that = (Operation) o;
      return

      this.creationTimestamp.equals(that.getCreationTimestamp())&&
      this.description.equals(that.getDescription())&&
      this.error.equals(that.getError())&&
      this.httpErrorStatusCode.equals(that.getHttpErrorStatusCode())&&
      this.id.equals(that.getId())&&
      this.kind.equals(that.getKind())&&
      this.name.equals(that.getName())&&
      this.status.equals(that.getStatus())&&
      this.targetId.equals(that.getTargetId())&&
      this.warnings.equals(that.getWarnings())&&
      this.zone.equals(that.getZone())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.creationTimestamp.hashCode();
    h *= 1000003;
    h ^= this.description.hashCode();
    h *= 1000003;
    h ^= this.error.hashCode();
    h *= 1000003;
    h ^= this.httpErrorStatusCode.hashCode();
    h *= 1000003;
    h ^= this.id.hashCode();
    h *= 1000003;
    h ^= this.kind.hashCode();
    h *= 1000003;
    h ^= this.name.hashCode();
    h *= 1000003;
    h ^= this.status.hashCode();
    h *= 1000003;
    h ^= this.targetId.hashCode();
    h *= 1000003;
    h ^= this.warnings.hashCode();
    h *= 1000003;
    h ^= this.zone.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/fakebilling/v1/ProjectBillingInfo.java ==============
/*
 *
 */
package com.google.cloud.fakebilling.v1;

import com.google.api.core.BetaApi;
import com.google.fakebilling.v1.ProjectBillingInfo;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class ProjectBillingInfo implements Serializable {
  private final String billingAccountName;
  private final Boolean billingEnabled;
  private final String name;
  private final String projectId;

  private ProjectBillingInfo(

    String billingAccountName,
    Boolean billingEnabled,
    String name,
    String projectId
    ) {
    this.billingAccountName = billingAccountName;
    this.billingEnabled = billingEnabled;
    this.name = name;
    this.projectId = projectId;
  }

  public String getBillingAccountName() {
    return billingAccountName;
  }

  public Boolean getBillingEnabled() {
    return billingEnabled;
  }

  public String getName() {
    return name;
  }

  public String getProjectId() {
    return projectId;
  }





  public static Builder newBuilder() {
    return new ProjectBillingInfo.Builder();
  }

  public static class Builder {
    private String billingAccountName;
    private Boolean billingEnabled;
    private String name;
    private String projectId;

    Builder() {}

    Builder(ProjectBillingInfo source) {
      this.billingAccountName = source.billingAccountName;
      this.billingEnabled = source.billingEnabled;
      this.name = source.name;
      this.projectId = source.projectId;
    }

    public String getBillingAccountName() {
      return billingAccountName;
    }

    public Builder setBillingAccountName(String billingAccountName) {
      this.billingAccountName = billingAccountName;
      return this;
    }

    public Boolean getBillingEnabled() {
      return billingEnabled;
    }

    public Builder setBillingEnabled(Boolean billingEnabled) {
      this.billingEnabled = billingEnabled;
      return this;
    }

    public String getName() {
      return name;
    }

    public Builder setName(String name) {
      this.name = name;
      return this;
    }

    public String getProjectId() {
      return projectId;
    }

    public Builder setProjectId(String projectId) {
      this.projectId = projectId;
      return this;
    }


    public ProjectBillingInfo build() {
      return new ProjectBillingInfo(

        billingAccountName,
        billingEnabled,
        name,
        projectId
      );
    }
  }

  @Override
  public String toString() {
    return "ProjectBillingInfo{"

    + "billingAccountName=" + billingAccountName + ", "
    + "billingEnabled=" + billingEnabled + ", "
    + "name=" + name + ", "
    + "projectId=" + projectId
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof ProjectBillingInfo) {
      ProjectBillingInfo that = (ProjectBillingInfo) o;
      return

      this.billingAccountName.equals(that.getBillingAccountName())&&
      this.billingEnabled.equals(that.getBillingEnabled())&&
      this.name.equals(that.getName())&&
      this.projectId.equals(that.getProjectId())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.billingAccountName.hashCode();
    h *= 1000003;
    h ^= this.billingEnabled.hashCode();
    h *= 1000003;
    h ^= this.name.hashCode();
    h *= 1000003;
    h ^= this.projectId.hashCode();
    return h;
  }
}
