============== file: google.golang.org/cloud/library/apiv1/library/client_test.go ==============
package library_test

import (
    gax "github.com/googleapis/gax-go"
    google_example_library_v1 "github.com/googleapis/proto-client-go/library/v1"
    "golang.org/x/net/context"
    "google.golang.org/cloud/library/apiv1/library"
)

func ExampleNewClient() {
    ctx := context.Background()
    opts := []gax.ClientOption{ /* Optional client parameters. */ }
    c, err := library.NewClient(ctx, opts...)
    _, _ = c, err // Handle error.
}

func ExampleClient_CreateShelf() {
    ctx := context.Background()
    c, err := library.NewClient(ctx)
    _ = err // Handle error.

    req := &google_example_library_v1.CreateShelfRequest{ /* Data... */ }
    var resp *google_example_library_v1.Shelf
    resp, err = c.CreateShelf(ctx, req)
    _, _ = resp, err // Handle error.
}

func ExampleClient_GetShelf() {
    ctx := context.Background()
    c, err := library.NewClient(ctx)
    _ = err // Handle error.

    req := &google_example_library_v1.GetShelfRequest{ /* Data... */ }
    var resp *google_example_library_v1.Shelf
    resp, err = c.GetShelf(ctx, req)
    _, _ = resp, err // Handle error.
}

func ExampleClient_ListShelves() {
    ctx := context.Background()
    c, err := library.NewClient(ctx)
    _ = err // Handle error.

    req := &google_example_library_v1.ListShelvesRequest{ /* Data... */ }
    it := c.ListShelves(ctx, req)
    var resp *google_example_library_v1.Shelf
    for {
        resp, err = it.Next()
        if err != nil {
            break
        }
    }
    _ = resp
}

func ExampleClient_DeleteShelf() {
    ctx := context.Background()
    c, err := library.NewClient(ctx)
    _ = err // Handle error.

    req := &google_example_library_v1.DeleteShelfRequest{ /* Data... */ }
    err = c.DeleteShelf(ctx, req)
    _ = err // Handle error.
}

func ExampleClient_MergeShelves() {
    ctx := context.Background()
    c, err := library.NewClient(ctx)
    _ = err // Handle error.

    req := &google_example_library_v1.MergeShelvesRequest{ /* Data... */ }
    var resp *google_example_library_v1.Shelf
    resp, err = c.MergeShelves(ctx, req)
    _, _ = resp, err // Handle error.
}

func ExampleClient_CreateBook() {
    ctx := context.Background()
    c, err := library.NewClient(ctx)
    _ = err // Handle error.

    req := &google_example_library_v1.CreateBookRequest{ /* Data... */ }
    var resp *google_example_library_v1.Book
    resp, err = c.CreateBook(ctx, req)
    _, _ = resp, err // Handle error.
}

func ExampleClient_PublishSeries() {
    ctx := context.Background()
    c, err := library.NewClient(ctx)
    _ = err // Handle error.

    req := &google_example_library_v1.PublishSeriesRequest{ /* Data... */ }
    var resp *google_example_library_v1.PublishSeriesResponse
    resp, err = c.PublishSeries(ctx, req)
    _, _ = resp, err // Handle error.
}

func ExampleClient_GetBook() {
    ctx := context.Background()
    c, err := library.NewClient(ctx)
    _ = err // Handle error.

    req := &google_example_library_v1.GetBookRequest{ /* Data... */ }
    var resp *google_example_library_v1.Book
    resp, err = c.GetBook(ctx, req)
    _, _ = resp, err // Handle error.
}

func ExampleClient_ListBooks() {
    ctx := context.Background()
    c, err := library.NewClient(ctx)
    _ = err // Handle error.

    req := &google_example_library_v1.ListBooksRequest{ /* Data... */ }
    it := c.ListBooks(ctx, req)
    var resp *google_example_library_v1.Book
    for {
        resp, err = it.Next()
        if err != nil {
            break
        }
    }
    _ = resp
}

func ExampleClient_DeleteBook() {
    ctx := context.Background()
    c, err := library.NewClient(ctx)
    _ = err // Handle error.

    req := &google_example_library_v1.DeleteBookRequest{ /* Data... */ }
    err = c.DeleteBook(ctx, req)
    _ = err // Handle error.
}

func ExampleClient_UpdateBook() {
    ctx := context.Background()
    c, err := library.NewClient(ctx)
    _ = err // Handle error.

    req := &google_example_library_v1.UpdateBookRequest{ /* Data... */ }
    var resp *google_example_library_v1.Book
    resp, err = c.UpdateBook(ctx, req)
    _, _ = resp, err // Handle error.
}

func ExampleClient_MoveBook() {
    ctx := context.Background()
    c, err := library.NewClient(ctx)
    _ = err // Handle error.

    req := &google_example_library_v1.MoveBookRequest{ /* Data... */ }
    var resp *google_example_library_v1.Book
    resp, err = c.MoveBook(ctx, req)
    _, _ = resp, err // Handle error.
}

func ExampleClient_ListStrings() {
    ctx := context.Background()
    c, err := library.NewClient(ctx)
    _ = err // Handle error.

    req := &google_example_library_v1.ListStringsRequest{ /* Data... */ }
    it := c.ListStrings(ctx, req)
    var resp string
    for {
        resp, err = it.Next()
        if err != nil {
            break
        }
    }
    _ = resp
}

func ExampleClient_AddComments() {
    ctx := context.Background()
    c, err := library.NewClient(ctx)
    _ = err // Handle error.

    req := &google_example_library_v1.AddCommentsRequest{ /* Data... */ }
    err = c.AddComments(ctx, req)
    _ = err // Handle error.
}
