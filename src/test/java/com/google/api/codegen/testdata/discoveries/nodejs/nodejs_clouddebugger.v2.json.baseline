
// PRE-REQUISITES:
// ---------------
// 1. If not already done, enable the Google Cloud Debugger API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/clouddebugger
// 2. This sample uses Application Default Credentials for Auth.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
// 3. To install the client library and Application Default Credentials library, run:
//    'npm install googleapis --save'
var google = require('googleapis');
var clouddebugger = google.clouddebugger('v2');

google.auth.getApplicationDefault(function(err, authClient) {
  if (err) {
    console.log('Authentication failed because of ', err);
    return;
  }
  if (authClient.createScopedRequired && authClient.createScopedRequired()) {
    var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
    authClient = authClient.createScoped(scopes);
  }

  var request = {
    // TODO: Change placeholders below to appropriate parameter values for the 'list' method:

    // Identifies the debuggee.
    debuggeeId: "",
    // Auth client
    auth: authClient
  };

  clouddebugger.controller.debuggees.breakpoints.list(request, function(err, result) {
    if (err) {
      console.log(err);
    } else {
      console.log(result);
    }
  });
});
// PRE-REQUISITES:
// ---------------
// 1. If not already done, enable the Google Cloud Debugger API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/clouddebugger
// 2. This sample uses Application Default Credentials for Auth.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
// 3. To install the client library and Application Default Credentials library, run:
//    'npm install googleapis --save'
var google = require('googleapis');
var clouddebugger = google.clouddebugger('v2');

google.auth.getApplicationDefault(function(err, authClient) {
  if (err) {
    console.log('Authentication failed because of ', err);
    return;
  }
  if (authClient.createScopedRequired && authClient.createScopedRequired()) {
    var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
    authClient = authClient.createScoped(scopes);
  }

  var request = {
    // TODO: Change placeholders below to appropriate parameter values for the 'update' method:

    // Identifies the debuggee being debugged.
    debuggeeId: "",
    // Breakpoint identifier, unique in the scope of the debuggee.
    id: "",
    resource: {},
    // Auth client
    auth: authClient
  };

  clouddebugger.controller.debuggees.breakpoints.update(request, function(err, result) {
    if (err) {
      console.log(err);
    } else {
      console.log(result);
    }
  });
});
// PRE-REQUISITES:
// ---------------
// 1. If not already done, enable the Google Cloud Debugger API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/clouddebugger
// 2. This sample uses Application Default Credentials for Auth.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
// 3. To install the client library and Application Default Credentials library, run:
//    'npm install googleapis --save'
var google = require('googleapis');
var clouddebugger = google.clouddebugger('v2');

google.auth.getApplicationDefault(function(err, authClient) {
  if (err) {
    console.log('Authentication failed because of ', err);
    return;
  }
  if (authClient.createScopedRequired && authClient.createScopedRequired()) {
    var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
    authClient = authClient.createScoped(scopes);
  }

  var request = {
    // TODO: Change placeholders below to appropriate parameter values for the 'register' method:

    resource: {},
    // Auth client
    auth: authClient
  };

  clouddebugger.controller.debuggees.register(request, function(err, result) {
    if (err) {
      console.log(err);
    } else {
      console.log(result);
    }
  });
});
// PRE-REQUISITES:
// ---------------
// 1. If not already done, enable the Google Cloud Debugger API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/clouddebugger
// 2. This sample uses Application Default Credentials for Auth.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
// 3. To install the client library and Application Default Credentials library, run:
//    'npm install googleapis --save'
var google = require('googleapis');
var clouddebugger = google.clouddebugger('v2');

google.auth.getApplicationDefault(function(err, authClient) {
  if (err) {
    console.log('Authentication failed because of ', err);
    return;
  }
  if (authClient.createScopedRequired && authClient.createScopedRequired()) {
    var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
    authClient = authClient.createScoped(scopes);
  }

  var request = {
    // TODO: Change placeholders below to appropriate parameter values for the 'delete' method:

    // ID of the debuggee whose breakpoint to delete.
    debuggeeId: "",
    // ID of the breakpoint to delete.
    breakpointId: "",
    // Auth client
    auth: authClient
  };

  clouddebugger.debugger.debuggees.breakpoints.delete(request, function(err, result) {
    if (err) {
      console.log(err);
    } else {
      console.log(result);
    }
  });
});
// PRE-REQUISITES:
// ---------------
// 1. If not already done, enable the Google Cloud Debugger API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/clouddebugger
// 2. This sample uses Application Default Credentials for Auth.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
// 3. To install the client library and Application Default Credentials library, run:
//    'npm install googleapis --save'
var google = require('googleapis');
var clouddebugger = google.clouddebugger('v2');

google.auth.getApplicationDefault(function(err, authClient) {
  if (err) {
    console.log('Authentication failed because of ', err);
    return;
  }
  if (authClient.createScopedRequired && authClient.createScopedRequired()) {
    var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
    authClient = authClient.createScoped(scopes);
  }

  var request = {
    // TODO: Change placeholders below to appropriate parameter values for the 'get' method:

    // ID of the debuggee whose breakpoint to get.
    debuggeeId: "",
    // ID of the breakpoint to get.
    breakpointId: "",
    // Auth client
    auth: authClient
  };

  clouddebugger.debugger.debuggees.breakpoints.get(request, function(err, result) {
    if (err) {
      console.log(err);
    } else {
      console.log(result);
    }
  });
});
// PRE-REQUISITES:
// ---------------
// 1. If not already done, enable the Google Cloud Debugger API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/clouddebugger
// 2. This sample uses Application Default Credentials for Auth.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
// 3. To install the client library and Application Default Credentials library, run:
//    'npm install googleapis --save'
var google = require('googleapis');
var clouddebugger = google.clouddebugger('v2');

google.auth.getApplicationDefault(function(err, authClient) {
  if (err) {
    console.log('Authentication failed because of ', err);
    return;
  }
  if (authClient.createScopedRequired && authClient.createScopedRequired()) {
    var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
    authClient = authClient.createScoped(scopes);
  }

  var request = {
    // TODO: Change placeholders below to appropriate parameter values for the 'list' method:

    // ID of the debuggee whose breakpoints to list.
    debuggeeId: "",
    // Auth client
    auth: authClient
  };

  clouddebugger.debugger.debuggees.breakpoints.list(request, function(err, result) {
    if (err) {
      console.log(err);
    } else {
      console.log(result);
    }
  });
});
// PRE-REQUISITES:
// ---------------
// 1. If not already done, enable the Google Cloud Debugger API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/clouddebugger
// 2. This sample uses Application Default Credentials for Auth.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
// 3. To install the client library and Application Default Credentials library, run:
//    'npm install googleapis --save'
var google = require('googleapis');
var clouddebugger = google.clouddebugger('v2');

google.auth.getApplicationDefault(function(err, authClient) {
  if (err) {
    console.log('Authentication failed because of ', err);
    return;
  }
  if (authClient.createScopedRequired && authClient.createScopedRequired()) {
    var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
    authClient = authClient.createScoped(scopes);
  }

  var request = {
    // TODO: Change placeholders below to appropriate parameter values for the 'set' method:

    // ID of the debuggee where the breakpoint is to be set.
    debuggeeId: "",
    resource: {},
    // Auth client
    auth: authClient
  };

  clouddebugger.debugger.debuggees.breakpoints.set(request, function(err, result) {
    if (err) {
      console.log(err);
    } else {
      console.log(result);
    }
  });
});
// PRE-REQUISITES:
// ---------------
// 1. If not already done, enable the Google Cloud Debugger API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/clouddebugger
// 2. This sample uses Application Default Credentials for Auth.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
// 3. To install the client library and Application Default Credentials library, run:
//    'npm install googleapis --save'
var google = require('googleapis');
var clouddebugger = google.clouddebugger('v2');

google.auth.getApplicationDefault(function(err, authClient) {
  if (err) {
    console.log('Authentication failed because of ', err);
    return;
  }
  if (authClient.createScopedRequired && authClient.createScopedRequired()) {
    var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
    authClient = authClient.createScoped(scopes);
  }

  var request = {
    // TODO: Change placeholders below to appropriate parameter values for the 'list' method:

    // Auth client
    auth: authClient
  };

  clouddebugger.debugger.debuggees.list(request, function(err, result) {
    if (err) {
      console.log(err);
    } else {
      console.log(result);
    }
  });
});
