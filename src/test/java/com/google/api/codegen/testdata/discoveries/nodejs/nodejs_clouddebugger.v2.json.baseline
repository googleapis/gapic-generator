
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Stackdriver Debugger API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/clouddebugger
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk and run
//    `gcloud beta auth application-default login`
// 3. Install the Node.js client library by running
//    `npm install googleapis --save`

var google = require('googleapis');
var clouddebugger = google.clouddebugger('v2');

authorize(function(authClient) {
  var request = {
    // Identifies the debuggee.
    debuggeeId: '',  // TODO: Update placeholder value.

    auth: authClient
  };

  clouddebugger.controller.debuggees.breakpoints.list(request, function(err, response) {
    if (err) {
      console.log(err);
      return;
    }

    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response, null, 2));
  });
});

function authorize(callback) {
  google.auth.getApplicationDefault(function(err, authClient)) {
    if (err) {
      console.log('authentication failed: ', err);
      return;
    }
    if (authClient.createScopedRequired && authClient.createScopedRequired()) {
      var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
      authClient = authClient.createScoped(scopes);
    }
    callback(authClient);
  });
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Stackdriver Debugger API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/clouddebugger
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk and run
//    `gcloud beta auth application-default login`
// 3. Install the Node.js client library by running
//    `npm install googleapis --save`

var google = require('googleapis');
var clouddebugger = google.clouddebugger('v2');

authorize(function(authClient) {
  var request = {
    // Identifies the debuggee being debugged.
    debuggeeId: '',  // TODO: Update placeholder value.

    // Breakpoint identifier, unique in the scope of the debuggee.
    id: '',  // TODO: Update placeholder value.

    resource: {
      // TODO: Add desired properties of the request body.
    },

    auth: authClient
  };

  clouddebugger.controller.debuggees.breakpoints.update(request, function(err, response) {
    if (err) {
      console.log(err);
      return;
    }

    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response, null, 2));
  });
});

function authorize(callback) {
  google.auth.getApplicationDefault(function(err, authClient)) {
    if (err) {
      console.log('authentication failed: ', err);
      return;
    }
    if (authClient.createScopedRequired && authClient.createScopedRequired()) {
      var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
      authClient = authClient.createScoped(scopes);
    }
    callback(authClient);
  });
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Stackdriver Debugger API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/clouddebugger
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk and run
//    `gcloud beta auth application-default login`
// 3. Install the Node.js client library by running
//    `npm install googleapis --save`

var google = require('googleapis');
var clouddebugger = google.clouddebugger('v2');

authorize(function(authClient) {
  var request = {
    resource: {
      // TODO: Add desired properties of the request body.
    },

    auth: authClient
  };

  clouddebugger.controller.debuggees.register(request, function(err, response) {
    if (err) {
      console.log(err);
      return;
    }

    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response, null, 2));
  });
});

function authorize(callback) {
  google.auth.getApplicationDefault(function(err, authClient)) {
    if (err) {
      console.log('authentication failed: ', err);
      return;
    }
    if (authClient.createScopedRequired && authClient.createScopedRequired()) {
      var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
      authClient = authClient.createScoped(scopes);
    }
    callback(authClient);
  });
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Stackdriver Debugger API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/clouddebugger
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk and run
//    `gcloud beta auth application-default login`
// 3. Install the Node.js client library by running
//    `npm install googleapis --save`

var google = require('googleapis');
var clouddebugger = google.clouddebugger('v2');

authorize(function(authClient) {
  var request = {
    // ID of the debuggee whose breakpoint to delete.
    debuggeeId: '',  // TODO: Update placeholder value.

    // ID of the breakpoint to delete.
    breakpointId: '',  // TODO: Update placeholder value.

    auth: authClient
  };

  clouddebugger.debugger.debuggees.breakpoints.delete(request, function(err) {
    if (err) {
      console.log(err);
      return;
    }
  });
});

function authorize(callback) {
  google.auth.getApplicationDefault(function(err, authClient)) {
    if (err) {
      console.log('authentication failed: ', err);
      return;
    }
    if (authClient.createScopedRequired && authClient.createScopedRequired()) {
      var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
      authClient = authClient.createScoped(scopes);
    }
    callback(authClient);
  });
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Stackdriver Debugger API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/clouddebugger
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk and run
//    `gcloud beta auth application-default login`
// 3. Install the Node.js client library by running
//    `npm install googleapis --save`

var google = require('googleapis');
var clouddebugger = google.clouddebugger('v2');

authorize(function(authClient) {
  var request = {
    // ID of the debuggee whose breakpoint to get.
    debuggeeId: '',  // TODO: Update placeholder value.

    // ID of the breakpoint to get.
    breakpointId: '',  // TODO: Update placeholder value.

    auth: authClient
  };

  clouddebugger.debugger.debuggees.breakpoints.get(request, function(err, response) {
    if (err) {
      console.log(err);
      return;
    }

    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response, null, 2));
  });
});

function authorize(callback) {
  google.auth.getApplicationDefault(function(err, authClient)) {
    if (err) {
      console.log('authentication failed: ', err);
      return;
    }
    if (authClient.createScopedRequired && authClient.createScopedRequired()) {
      var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
      authClient = authClient.createScoped(scopes);
    }
    callback(authClient);
  });
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Stackdriver Debugger API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/clouddebugger
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk and run
//    `gcloud beta auth application-default login`
// 3. Install the Node.js client library by running
//    `npm install googleapis --save`

var google = require('googleapis');
var clouddebugger = google.clouddebugger('v2');

authorize(function(authClient) {
  var request = {
    // ID of the debuggee whose breakpoints to list.
    debuggeeId: '',  // TODO: Update placeholder value.

    auth: authClient
  };

  clouddebugger.debugger.debuggees.breakpoints.list(request, function(err, response) {
    if (err) {
      console.log(err);
      return;
    }

    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response, null, 2));
  });
});

function authorize(callback) {
  google.auth.getApplicationDefault(function(err, authClient)) {
    if (err) {
      console.log('authentication failed: ', err);
      return;
    }
    if (authClient.createScopedRequired && authClient.createScopedRequired()) {
      var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
      authClient = authClient.createScoped(scopes);
    }
    callback(authClient);
  });
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Stackdriver Debugger API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/clouddebugger
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk and run
//    `gcloud beta auth application-default login`
// 3. Install the Node.js client library by running
//    `npm install googleapis --save`

var google = require('googleapis');
var clouddebugger = google.clouddebugger('v2');

authorize(function(authClient) {
  var request = {
    // ID of the debuggee where the breakpoint is to be set.
    debuggeeId: '',  // TODO: Update placeholder value.

    resource: {
      // TODO: Add desired properties of the request body.
    },

    auth: authClient
  };

  clouddebugger.debugger.debuggees.breakpoints.set(request, function(err, response) {
    if (err) {
      console.log(err);
      return;
    }

    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response, null, 2));
  });
});

function authorize(callback) {
  google.auth.getApplicationDefault(function(err, authClient)) {
    if (err) {
      console.log('authentication failed: ', err);
      return;
    }
    if (authClient.createScopedRequired && authClient.createScopedRequired()) {
      var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
      authClient = authClient.createScoped(scopes);
    }
    callback(authClient);
  });
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Stackdriver Debugger API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/clouddebugger
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk and run
//    `gcloud beta auth application-default login`
// 3. Install the Node.js client library by running
//    `npm install googleapis --save`

var google = require('googleapis');
var clouddebugger = google.clouddebugger('v2');

authorize(function(authClient) {
  var request = {
    auth: authClient
  };

  clouddebugger.debugger.debuggees.list(request, function(err, response) {
    if (err) {
      console.log(err);
      return;
    }

    // TODO: Change code below to process the `response` object:
    console.log(JSON.stringify(response, null, 2));
  });
});

function authorize(callback) {
  google.auth.getApplicationDefault(function(err, authClient)) {
    if (err) {
      console.log('authentication failed: ', err);
      return;
    }
    if (authClient.createScopedRequired && authClient.createScopedRequired()) {
      var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
      authClient = authClient.createScoped(scopes);
    }
    callback(authClient);
  });
}
