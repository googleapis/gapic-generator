============== file: lib/library.rb ==============
# Copyright 2017, Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

##
# # Ruby Client for Google Example Library API ([Alpha](https://github.com/GoogleCloudPlatform/google-cloud-ruby#versioning))
#
# [Google Example Library API][Product Documentation]: A simple Google Example Library API.
# - [Product Documentation][]
#
# ## Quick Start
# In order to use this library, you first need to go through the following steps:
#
# 1. [Select or create a Cloud Platform project.](https://console.cloud.google.com/project)
# 2. [Enable the Google Example Library API.](https://console.cloud.google.com/apis/api/library)
# 3. [Setup Authentication.](https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/google-cloud/master/guides/authentication)
#
# ### Installation
# ```
# $ gem install library
# ```
#
# ### Preview
# #### LibraryServiceClient
# ```rb
# require "library"
#
# library_service_client = Library.new
# formatted_name = Library::V1::LibraryServiceClient.book_path("testShelf-" + Time.new.to_i.to_s, project_id)
# rating = :GOOD
# book = { rating: rating }
# response = library_service_client.update_book(formatted_name, book)
# ```
#
# ### Next Steps
# - Read the [Google Example Library API Product documentation][Product Documentation] to learn more about the product and see How-to Guides.
# - View this [repository's main README](https://github.com/GoogleCloudPlatform/google-cloud-ruby/blob/master/README.md) to see the full list of Cloud APIs that we cover.
#
# [Product Documentation]: https://cloud.google.com/library
#
module Library
  ##
  # This API represents a simple digital library.  It lets you manage Shelf
  # resources and Book resources in the library. It defines the following
  # resource model:
  #
  # * The API has a collection of Shelf
  #   resources, named +bookShelves/*+
  #
  # * Each Shelf has a collection of Book
  #   resources, named +bookShelves/*/books/*+
  #
  # Check out {cloud docs!}[https://cloud.google.com/library/example/link].
  # This is {not a cloud link}[http://www.google.com].
  #
  # Service comment may include special characters: <>&"+'@.
  #
  # @param version [Symbol, String]
  #   The major version of the service to be used. By default :v1
  #   is used.
  # @param service_path [String]
  #   The domain name of the API remote host.
  # @param port [Integer]
  #   The port on which to connect to the remote host.
  # @param channel [Channel]
  #   A Channel object through which to make calls.
  # @param chan_creds [Grpc::ChannelCredentials]
  #   A ChannelCredentials for the setting up the RPC client.
  # @param updater_proc [Proc]
  #   A function that transforms the metadata for requests, e.g., to give
  #   OAuth credentials.
  # @param scopes [Array<String>]
  #   The OAuth scopes for this service. This parameter is ignored if
  #   an updater_proc is supplied.
  # @param client_config[Hash]
  #   A Hash for call options for each method. See
  #   Google::Gax#construct_settings for the structure of
  #   this data. Falls back to the default config if not specified
  #   or the specified config is missing data points.
  # @param timeout [Numeric]
  #   The default timeout, in seconds, for calls made through this client.
  def self.new(*args, version: :v1, **kwargs)
    case version.to_s.downcase
    when "v1"
      require "library/v1"
      Library::V1.new(*args, **kwargs)
    else
      raise ArgumentError.new "The version #{version}, was not found."
    end
  end
end
============== file: lib/library/v1.rb ==============
# Copyright 2017, Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require "library/v1/library_service_client"

##
# # Ruby Client for Google Example Library API ([Alpha](https://github.com/GoogleCloudPlatform/google-cloud-ruby#versioning))
#
# [Google Example Library API][Product Documentation]: A simple Google Example Library API.
# - [Product Documentation][]
#
# ## Quick Start
# In order to use this library, you first need to go through the following steps:
#
# 1. [Select or create a Cloud Platform project.](https://console.cloud.google.com/project)
# 2. [Enable the Google Example Library API.](https://console.cloud.google.com/apis/api/library)
# 3. [Setup Authentication.](https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/google-cloud/master/guides/authentication)
#
# ### Installation
# ```
# $ gem install library
# ```
#
# ### Preview
# #### LibraryServiceClient
# ```rb
# require "library/v1"
#
# library_service_client = Library::V1.new
# formatted_name = Library::V1::LibraryServiceClient.book_path("testShelf-" + Time.new.to_i.to_s, project_id)
# rating = :GOOD
# book = { rating: rating }
# response = library_service_client.update_book(formatted_name, book)
# ```
#
# ### Next Steps
# - Read the [Google Example Library API Product documentation][Product Documentation] to learn more about the product and see How-to Guides.
# - View this [repository's main README](https://github.com/GoogleCloudPlatform/google-cloud-ruby/blob/master/README.md) to see the full list of Cloud APIs that we cover.
#
# [Product Documentation]: https://cloud.google.com/library
#
module Library
  ##
  # # Google Example Library API Contents
  #
  # | Class | Description |
  # | ----- | ----------- |
  # | [LibraryServiceClient][] | A simple Google Example Library API. |
  # | [Data Types][] | Data types for Library::V1 |
  #
  # [LibraryServiceClient]: https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/library/latest/google/library/v1/libraryserviceclient
  # [Data Types]: https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/library/latest/google/library/v1/datatypes
  #
  module V1
    ##
    # This API represents a simple digital library.  It lets you manage Shelf
    # resources and Book resources in the library. It defines the following
    # resource model:
    #
    # * The API has a collection of Shelf
    #   resources, named +bookShelves/*+
    #
    # * Each Shelf has a collection of Book
    #   resources, named +bookShelves/*/books/*+
    #
    # Check out {cloud docs!}[https://cloud.google.com/library/example/link].
    # This is {not a cloud link}[http://www.google.com].
    #
    # Service comment may include special characters: <>&"+'@.
    #
    # @param service_path [String]
    #   The domain name of the API remote host.
    # @param port [Integer]
    #   The port on which to connect to the remote host.
    # @param channel [Channel]
    #   A Channel object through which to make calls.
    # @param chan_creds [Grpc::ChannelCredentials]
    #   A ChannelCredentials for the setting up the RPC client.
    # @param updater_proc [Proc]
    #   A function that transforms the metadata for requests, e.g., to give
    #   OAuth credentials.
    # @param scopes [Array<String>]
    #   The OAuth scopes for this service. This parameter is ignored if
    #   an updater_proc is supplied.
    # @param client_config[Hash]
    #   A Hash for call options for each method. See
    #   Google::Gax#construct_settings for the structure of
    #   this data. Falls back to the default config if not specified
    #   or the specified config is missing data points.
    # @param timeout [Numeric]
    #   The default timeout, in seconds, for calls made through this client.
    def self.new(*args, **kwargs)
      Library::V1::LibraryServiceClient.new(*args, **kwargs)
    end
  end
end
