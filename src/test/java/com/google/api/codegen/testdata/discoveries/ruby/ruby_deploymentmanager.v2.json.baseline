
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

# Construct the deploymentmanager service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `cancel_deployment_preview` method:

# * The project ID for this request.
project = ''

# * The name of the deployment for this request.
deployment = ''


deployments_cancel_preview_request_body = Google::Apis::DeploymentmanagerV2::DeploymentsCancelPreviewRequest.new
# TODO: Assign values to desired members of the `deployments_cancel_preview_request_body` object.


# Perform the call
response = service.cancel_deployment_preview(project, deployment, deployments_cancel_preview_request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

# Construct the deploymentmanager service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `delete_deployment` method:

# * The project ID for this request.
project = ''

# * The name of the deployment for this request.
deployment = ''


# Perform the call
response = service.delete_deployment(project, deployment)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

# Construct the deploymentmanager service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `get_deployment` method:

# * The project ID for this request.
project = ''

# * The name of the deployment for this request.
deployment = ''


# Perform the call
response = service.get_deployment(project, deployment)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

# Construct the deploymentmanager service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `insert_deployment` method:

# * The project ID for this request.
project = ''


deployment_body = Google::Apis::DeploymentmanagerV2::Deployment.new
# TODO: Assign values to desired members of the `deployment_body` object.


# Perform the call
response = service.insert_deployment(project, deployment_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

# Construct the deploymentmanager service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `list_deployments` method:

# * The project ID for this request.
project = ''


# Perform the call
deployments = service.fetch_all(items: :deployments) do |token|
  service.list_deployments(project, page_token: token)
end

deployments.each do |deployment|
  # TODO: Change code below to process each `deployment` resource:
  puts JSON.pretty_generate(deployment)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

# Construct the deploymentmanager service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `patch_deployment` method:

# * The project ID for this request.
project = ''

# * The name of the deployment for this request.
deployment = ''


deployment_body = Google::Apis::DeploymentmanagerV2::Deployment.new
# TODO: Assign values to desired members of the `deployment_body` object to be changed.


# Perform the call
response = service.patch_deployment(project, deployment, deployment_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

# Construct the deploymentmanager service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `stop_deployment` method:

# * The project ID for this request.
project = ''

# * The name of the deployment for this request.
deployment = ''


deployments_stop_request_body = Google::Apis::DeploymentmanagerV2::DeploymentsStopRequest.new
# TODO: Assign values to desired members of the `deployments_stop_request_body` object.


# Perform the call
response = service.stop_deployment(project, deployment, deployments_stop_request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

# Construct the deploymentmanager service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `update_deployment` method:

# * The project ID for this request.
project = ''

# * The name of the deployment for this request.
deployment = ''


deployment_body = Google::Apis::DeploymentmanagerV2::Deployment.new
# TODO: Assign values to desired members of the `deployment_body` object.


# Perform the call
response = service.update_deployment(project, deployment, deployment_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

# Construct the deploymentmanager service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `get_manifest` method:

# * The project ID for this request.
project = ''

# * The name of the deployment for this request.
deployment = ''

# * The name of the manifest for this request.
manifest = ''


# Perform the call
response = service.get_manifest(project, deployment, manifest)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

# Construct the deploymentmanager service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `list_manifests` method:

# * The project ID for this request.
project = ''

# * The name of the deployment for this request.
deployment = ''


# Perform the call
manifests = service.fetch_all(items: :manifests) do |token|
  service.list_manifests(project, deployment, page_token: token)
end

manifests.each do |manifest|
  # TODO: Change code below to process each `manifest` resource:
  puts JSON.pretty_generate(manifest)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

# Construct the deploymentmanager service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `get_operation` method:

# * The project ID for this request.
project = ''

# * The name of the operation for this request.
operation = ''


# Perform the call
response = service.get_operation(project, operation)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

# Construct the deploymentmanager service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `list_operations` method:

# * The project ID for this request.
project = ''


# Perform the call
operations = service.fetch_all(items: :operations) do |token|
  service.list_operations(project, page_token: token)
end

operations.each do |operation|
  # TODO: Change code below to process each `operation` resource:
  puts JSON.pretty_generate(operation)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

# Construct the deploymentmanager service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `get_resource` method:

# * The project ID for this request.
project = ''

# * The name of the deployment for this request.
deployment = ''

# * The name of the resource for this request.
resource = ''


# Perform the call
response = service.get_resource(project, deployment, resource)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

# Construct the deploymentmanager service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `list_resources` method:

# * The project ID for this request.
project = ''

# * The name of the deployment for this request.
deployment = ''


# Perform the call
resources = service.fetch_all(items: :resources) do |token|
  service.list_resources(project, deployment, page_token: token)
end

resources.each do |resource|
  # TODO: Change code below to process each `resource` resource:
  puts JSON.pretty_generate(resource)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

# Construct the deploymentmanager service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `list_types` method:

# * The project ID for this request.
project = ''


# Perform the call
types = service.fetch_all(items: :types) do |token|
  service.list_types(project, page_token: token)
end

types.each do |type|
  # TODO: Change code below to process each `type` resource:
  puts JSON.pretty_generate(type)
end
