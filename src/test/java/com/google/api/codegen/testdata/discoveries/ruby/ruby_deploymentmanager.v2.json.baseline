
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# The name of the deployment for this request.
deployment = '{MY-DEPLOYMENT}' # TODO: Change placeholder value(s).

# TODO: Assign values to the desired members.
deployments_cancel_preview_request_body = Google::Apis::DeploymentmanagerV2::DeploymentsCancelPreviewRequest.new

# Perform the call
response = service.cancel_deployment_preview(project, deployment, deployments_cancel_preview_request_body)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# The name of the deployment for this request.
deployment = '{MY-DEPLOYMENT}' # TODO: Change placeholder value(s).

# Perform the call
response = service.delete_deployment(project, deployment)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# The name of the deployment for this request.
deployment = '{MY-DEPLOYMENT}' # TODO: Change placeholder value(s).

# Perform the call
response = service.get_deployment(project, deployment)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# TODO: Assign values to the desired members.
deployment_body = Google::Apis::DeploymentmanagerV2::Deployment.new

# Perform the call
response = service.insert_deployment(project, deployment_body)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# Perform the call
deployments = service.fetch_all(items: :deployments) do |token|
  service.list_deployments(project, page_token: token)
end

deployments.each do |deployment|
  # TODO: Use deployment
  puts JSON.pretty_generate(deployment)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# The name of the deployment for this request.
deployment = '{MY-DEPLOYMENT}' # TODO: Change placeholder value(s).

# TODO: Assign values to the desired members to be changed.
deployment_body = Google::Apis::DeploymentmanagerV2::Deployment.new

# Perform the call
response = service.patch_deployment(project, deployment, deployment_body)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# The name of the deployment for this request.
deployment = '{MY-DEPLOYMENT}' # TODO: Change placeholder value(s).

# TODO: Assign values to the desired members.
deployments_stop_request_body = Google::Apis::DeploymentmanagerV2::DeploymentsStopRequest.new

# Perform the call
response = service.stop_deployment(project, deployment, deployments_stop_request_body)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# The name of the deployment for this request.
deployment = '{MY-DEPLOYMENT}' # TODO: Change placeholder value(s).

# TODO: Assign values to the desired members.
deployment_body = Google::Apis::DeploymentmanagerV2::Deployment.new

# Perform the call
response = service.update_deployment(project, deployment, deployment_body)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# The name of the deployment for this request.
deployment = '{MY-DEPLOYMENT}' # TODO: Change placeholder value(s).

# The name of the manifest for this request.
manifest = '{MY-MANIFEST}' # TODO: Change placeholder value(s).

# Perform the call
response = service.get_manifest(project, deployment, manifest)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# The name of the deployment for this request.
deployment = '{MY-DEPLOYMENT}' # TODO: Change placeholder value(s).

# Perform the call
manifests = service.fetch_all(items: :manifests) do |token|
  service.list_manifests(project, deployment, page_token: token)
end

manifests.each do |manifest|
  # TODO: Use manifest
  puts JSON.pretty_generate(manifest)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# The name of the operation for this request.
operation = '{MY-OPERATION}' # TODO: Change placeholder value(s).

# Perform the call
response = service.get_operation(project, operation)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# Perform the call
operations = service.fetch_all(items: :operations) do |token|
  service.list_operations(project, page_token: token)
end

operations.each do |operation|
  # TODO: Use operation
  puts JSON.pretty_generate(operation)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# The name of the deployment for this request.
deployment = '{MY-DEPLOYMENT}' # TODO: Change placeholder value(s).

# The name of the resource for this request.
resource = '{MY-RESOURCE}' # TODO: Change placeholder value(s).

# Perform the call
response = service.get_resource(project, deployment, resource)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# The name of the deployment for this request.
deployment = '{MY-DEPLOYMENT}' # TODO: Change placeholder value(s).

# Perform the call
resources = service.fetch_all(items: :resources) do |token|
  service.list_resources(project, deployment, page_token: token)
end

resources.each do |resource|
  # TODO: Use resource
  puts JSON.pretty_generate(resource)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# Perform the call
types = service.fetch_all(items: :types) do |token|
  service.list_types(project, page_token: token)
end

types.each do |type|
  # TODO: Use type
  puts JSON.pretty_generate(type)
end
