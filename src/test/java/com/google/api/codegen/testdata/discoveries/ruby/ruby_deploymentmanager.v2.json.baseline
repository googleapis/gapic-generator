
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = ''  # TODO: Update placeholder value.

# The name of the deployment for this request.
deployment = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DeploymentmanagerV2::DeploymentsCancelPreviewRequest.new

response = service.cancel_deployment_preview(project, deployment, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = ''  # TODO: Update placeholder value.

# The name of the deployment for this request.
deployment = ''  # TODO: Update placeholder value.

response = service.delete_deployment(project, deployment)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = ''  # TODO: Update placeholder value.

# The name of the deployment for this request.
deployment = ''  # TODO: Update placeholder value.

response = service.get_deployment(project, deployment)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID for this request.
project = ''  # TODO: Update placeholder value.

# Name of the resource for this request.
resource = ''  # TODO: Update placeholder value.

response = service.get_deployment_iam_policy(project, resource)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DeploymentmanagerV2::Deployment.new

response = service.insert_deployment(project, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = ''  # TODO: Update placeholder value.

deployments = service.fetch_all(items: :deployments) do |token|
  service.list_deployments(project, page_token: token)
end

deployments.each do |deployment|
  # TODO: Change code below to process each `deployment` resource:
  puts JSON.pretty_generate(deployment)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = ''  # TODO: Update placeholder value.

# The name of the deployment for this request.
deployment = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# fields will be changed:
request_body = Google::Apis::DeploymentmanagerV2::Deployment.new

response = service.patch_deployment(project, deployment, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID for this request.
project = ''  # TODO: Update placeholder value.

# Name of the resource for this request.
resource = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DeploymentmanagerV2::Policy.new

response = service.set_deployment_iam_policy(project, resource, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = ''  # TODO: Update placeholder value.

# The name of the deployment for this request.
deployment = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DeploymentmanagerV2::DeploymentsStopRequest.new

response = service.stop_deployment(project, deployment, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID for this request.
project = ''  # TODO: Update placeholder value.

# Name of the resource for this request.
resource = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DeploymentmanagerV2::TestPermissionsRequest.new

response = service.test_deployment_iam_permissions(project, resource, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = ''  # TODO: Update placeholder value.

# The name of the deployment for this request.
deployment = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DeploymentmanagerV2::Deployment.new

response = service.update_deployment(project, deployment, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = ''  # TODO: Update placeholder value.

# The name of the deployment for this request.
deployment = ''  # TODO: Update placeholder value.

# The name of the manifest for this request.
manifest = ''  # TODO: Update placeholder value.

response = service.get_manifest(project, deployment, manifest)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = ''  # TODO: Update placeholder value.

# The name of the deployment for this request.
deployment = ''  # TODO: Update placeholder value.

manifests = service.fetch_all(items: :manifests) do |token|
  service.list_manifests(project, deployment, page_token: token)
end

manifests.each do |manifest|
  # TODO: Change code below to process each `manifest` resource:
  puts JSON.pretty_generate(manifest)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = ''  # TODO: Update placeholder value.

# The name of the operation for this request.
operation = ''  # TODO: Update placeholder value.

response = service.get_operation(project, operation)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = ''  # TODO: Update placeholder value.

operations = service.fetch_all(items: :operations) do |token|
  service.list_operations(project, page_token: token)
end

operations.each do |operation|
  # TODO: Change code below to process each `operation` resource:
  puts JSON.pretty_generate(operation)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = ''  # TODO: Update placeholder value.

# The name of the deployment for this request.
deployment = ''  # TODO: Update placeholder value.

# The name of the resource for this request.
resource = ''  # TODO: Update placeholder value.

response = service.get_resource(project, deployment, resource)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = ''  # TODO: Update placeholder value.

# The name of the deployment for this request.
deployment = ''  # TODO: Update placeholder value.

resources = service.fetch_all(items: :resources) do |token|
  service.list_resources(project, deployment, page_token: token)
end

resources.each do |resource|
  # TODO: Change code below to process each `resource` resource:
  puts JSON.pretty_generate(resource)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Deployment Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/deploymentmanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/deploymentmanager_v2'
require 'json'

service = Google::Apis::DeploymentmanagerV2::DeploymentManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID for this request.
project = ''  # TODO: Update placeholder value.

types = service.fetch_all(items: :types) do |token|
  service.list_types(project, page_token: token)
end

types.each do |type|
  # TODO: Change code below to process each `type` resource:
  puts JSON.pretty_generate(type)
end
