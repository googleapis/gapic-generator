
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = getClient();

$service = new Google_Service_Taskqueue($client);


// TODO: Change placeholders below to desired parameter values for the `get` method:

// The project under which the queue lies.
$project = '{MY-PROJECT}';

// The id of the taskqueue to get the properties of.
$taskqueue = '{MY-TASKQUEUE}';


$response = $service->taskqueues->get($project, $taskqueue);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";

function getClient() {
  // TODO: Change placeholder below to get authentication credentials.
  // See: https://foo.com/bar
  //
  // To use the `get` method, authorize using one of the following scopes:
  //   https://www.googleapis.com/auth/taskqueue
  //   https://www.googleapis.com/auth/taskqueue.consumer
  return null;
}
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = getClient();

$service = new Google_Service_Taskqueue($client);


// TODO: Change placeholders below to desired parameter values for the `delete` method:

// The project under which the queue lies.
$project = '{MY-PROJECT}';

// The taskqueue to delete a task from.
$taskqueue = '{MY-TASKQUEUE}';

// The id of the task to delete.
$task = '{MY-TASK}';


$service->tasks->delete($project, $taskqueue, $task);

function getClient() {
  // TODO: Change placeholder below to get authentication credentials.
  // See: https://foo.com/bar
  //
  // To use the `delete` method, authorize using one of the following scopes:
  //   https://www.googleapis.com/auth/taskqueue
  //   https://www.googleapis.com/auth/taskqueue.consumer
  return null;
}
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = getClient();

$service = new Google_Service_Taskqueue($client);


// TODO: Change placeholders below to desired parameter values for the `get` method:

// The project under which the queue lies.
$project = '{MY-PROJECT}';

// The taskqueue in which the task belongs.
$taskqueue = '{MY-TASKQUEUE}';

// The task to get properties of.
$task = '{MY-TASK}';


$response = $service->tasks->get($project, $taskqueue, $task);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";

function getClient() {
  // TODO: Change placeholder below to get authentication credentials.
  // See: https://foo.com/bar
  //
  // To use the `get` method, authorize using one of the following scopes:
  //   https://www.googleapis.com/auth/taskqueue
  //   https://www.googleapis.com/auth/taskqueue.consumer
  return null;
}
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = getClient();

$service = new Google_Service_Taskqueue($client);


// TODO: Change placeholders below to desired parameter values for the `insert` method:

// The project under which the queue lies
$project = '{MY-PROJECT}';

// The taskqueue to insert the task into
$taskqueue = '{MY-TASKQUEUE}';


$requestBody = new Google_Service_Taskqueue_Task($client);
// TODO: Assign values to desired properties of the `requestBody` object.


$response = $service->tasks->insert($project, $taskqueue, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";

function getClient() {
  // TODO: Change placeholder below to get authentication credentials.
  // See: https://foo.com/bar
  //
  // To use the `insert` method, authorize using one of the following scopes:
  //   https://www.googleapis.com/auth/taskqueue
  //   https://www.googleapis.com/auth/taskqueue.consumer
  return null;
}
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = getClient();

$service = new Google_Service_Taskqueue($client);


// TODO: Change placeholders below to desired parameter values for the `lease` method:

// The project under which the queue lies.
$project = '{MY-PROJECT}';

// The taskqueue to lease a task from.
$taskqueue = '{MY-TASKQUEUE}';

// The number of tasks to lease.
$numTasks = 0;

// The lease in seconds.
$leaseSecs = 0;


$response = $service->tasks->lease($project, $taskqueue, $numTasks, $leaseSecs);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";

function getClient() {
  // TODO: Change placeholder below to get authentication credentials.
  // See: https://foo.com/bar
  //
  // To use the `lease` method, authorize using one of the following scopes:
  //   https://www.googleapis.com/auth/taskqueue
  //   https://www.googleapis.com/auth/taskqueue.consumer
  return null;
}
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = getClient();

$service = new Google_Service_Taskqueue($client);


// TODO: Change placeholders below to desired parameter values for the `listTasks` method:

// The project under which the queue lies.
$project = '{MY-PROJECT}';

// The id of the taskqueue to list tasks from.
$taskqueue = '{MY-TASKQUEUE}';


$response = $service->tasks->listTasks($project, $taskqueue);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";

function getClient() {
  // TODO: Change placeholder below to get authentication credentials.
  // See: https://foo.com/bar
  //
  // To use the `listTasks` method, authorize using one of the following scopes:
  //   https://www.googleapis.com/auth/taskqueue
  //   https://www.googleapis.com/auth/taskqueue.consumer
  return null;
}
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = getClient();

$service = new Google_Service_Taskqueue($client);


// TODO: Change placeholders below to desired parameter values for the `patch` method:

// The project under which the queue lies.
$project = '{MY-PROJECT}';

// taskqueue
$taskqueue = '{MY-TASKQUEUE}';

// task
$task = '{MY-TASK}';

// The new lease in seconds.
$newLeaseSeconds = 0;


$requestBody = new Google_Service_Taskqueue_Task($client);
// TODO: Assign values to desired properties of the `requestBody` object to be changed.


$response = $service->tasks->patch($project, $taskqueue, $task, $newLeaseSeconds, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";

function getClient() {
  // TODO: Change placeholder below to get authentication credentials.
  // See: https://foo.com/bar
  //
  // To use the `patch` method, authorize using one of the following scopes:
  //   https://www.googleapis.com/auth/taskqueue
  //   https://www.googleapis.com/auth/taskqueue.consumer
  return null;
}
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = getClient();

$service = new Google_Service_Taskqueue($client);


// TODO: Change placeholders below to desired parameter values for the `update` method:

// The project under which the queue lies.
$project = '{MY-PROJECT}';

// taskqueue
$taskqueue = '{MY-TASKQUEUE}';

// task
$task = '{MY-TASK}';

// The new lease in seconds.
$newLeaseSeconds = 0;


$requestBody = new Google_Service_Taskqueue_Task($client);
// TODO: Assign values to desired properties of the `requestBody` object.


$response = $service->tasks->update($project, $taskqueue, $task, $newLeaseSeconds, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";

function getClient() {
  // TODO: Change placeholder below to get authentication credentials.
  // See: https://foo.com/bar
  //
  // To use the `update` method, authorize using one of the following scopes:
  //   https://www.googleapis.com/auth/taskqueue
  //   https://www.googleapis.com/auth/taskqueue.consumer
  return null;
}
?>
