
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

function getClient() {
  // TODO: Implement this function to get authentication credentials.
  // See https://foo.com/bar
  // Authorize using one of the following scopes in order to use this method:
  //   https://www.googleapis.com/auth/taskqueue
  //   https://www.googleapis.com/auth/taskqueue.consumer
  return null;
}

// Create a new client.
$client = getClient();

// Create a new Taskqueue service.
$service = new Google_Service_Taskqueue($client);

// * The project under which the queue lies.
$project = '{MY-PROJECT}';

// * The id of the taskqueue to get the properties of.
$taskqueue = '{MY-TASKQUEUE}';

$response = $service->taskqueues->get($project, $taskqueue);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

function getClient() {
  // TODO: Implement this function to get authentication credentials.
  // See https://foo.com/bar
  // Authorize using one of the following scopes in order to use this method:
  //   https://www.googleapis.com/auth/taskqueue
  //   https://www.googleapis.com/auth/taskqueue.consumer
  return null;
}

// Create a new client.
$client = getClient();

// Create a new Taskqueue service.
$service = new Google_Service_Taskqueue($client);

// * The project under which the queue lies.
$project = '{MY-PROJECT}';

// * The taskqueue to delete a task from.
$taskqueue = '{MY-TASKQUEUE}';

// * The id of the task to delete.
$task = '{MY-TASK}';

$response = $service->tasks->delete($project, $taskqueue, $task);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

function getClient() {
  // TODO: Implement this function to get authentication credentials.
  // See https://foo.com/bar
  // Authorize using one of the following scopes in order to use this method:
  //   https://www.googleapis.com/auth/taskqueue
  //   https://www.googleapis.com/auth/taskqueue.consumer
  return null;
}

// Create a new client.
$client = getClient();

// Create a new Taskqueue service.
$service = new Google_Service_Taskqueue($client);

// * The project under which the queue lies.
$project = '{MY-PROJECT}';

// * The taskqueue in which the task belongs.
$taskqueue = '{MY-TASKQUEUE}';

// * The task to get properties of.
$task = '{MY-TASK}';

$response = $service->tasks->get($project, $taskqueue, $task);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

function getClient() {
  // TODO: Implement this function to get authentication credentials.
  // See https://foo.com/bar
  // Authorize using one of the following scopes in order to use this method:
  //   https://www.googleapis.com/auth/taskqueue
  //   https://www.googleapis.com/auth/taskqueue.consumer
  return null;
}

// Create a new client.
$client = getClient();

// Create a new Taskqueue service.
$service = new Google_Service_Taskqueue($client);

// * The project under which the queue lies
$project = '{MY-PROJECT}';

// * The taskqueue to insert the task into
$taskqueue = '{MY-TASKQUEUE}';

$postBody = new Google_Service_Taskqueue_Task($client);

$response = $service->tasks->insert($project, $taskqueue, $postBody);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

function getClient() {
  // TODO: Implement this function to get authentication credentials.
  // See https://foo.com/bar
  // Authorize using one of the following scopes in order to use this method:
  //   https://www.googleapis.com/auth/taskqueue
  //   https://www.googleapis.com/auth/taskqueue.consumer
  return null;
}

// Create a new client.
$client = getClient();

// Create a new Taskqueue service.
$service = new Google_Service_Taskqueue($client);

// * The project under which the queue lies.
$project = '{MY-PROJECT}';

// * The taskqueue to lease a task from.
$taskqueue = '{MY-TASKQUEUE}';

// * The number of tasks to lease.
$numTasks = 0;

// * The lease in seconds.
$leaseSecs = 0;

$response = $service->tasks->lease($project, $taskqueue, $numTasks, $leaseSecs);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

function getClient() {
  // TODO: Implement this function to get authentication credentials.
  // See https://foo.com/bar
  // Authorize using one of the following scopes in order to use this method:
  //   https://www.googleapis.com/auth/taskqueue
  //   https://www.googleapis.com/auth/taskqueue.consumer
  return null;
}

// Create a new client.
$client = getClient();

// Create a new Taskqueue service.
$service = new Google_Service_Taskqueue($client);

// * The project under which the queue lies.
$project = '{MY-PROJECT}';

// * The id of the taskqueue to list tasks from.
$taskqueue = '{MY-TASKQUEUE}';

$response = $service->tasks->listTasks($project, $taskqueue);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

function getClient() {
  // TODO: Implement this function to get authentication credentials.
  // See https://foo.com/bar
  // Authorize using one of the following scopes in order to use this method:
  //   https://www.googleapis.com/auth/taskqueue
  //   https://www.googleapis.com/auth/taskqueue.consumer
  return null;
}

// Create a new client.
$client = getClient();

// Create a new Taskqueue service.
$service = new Google_Service_Taskqueue($client);

// * The project under which the queue lies.
$project = '{MY-PROJECT}';


$taskqueue = '{MY-TASKQUEUE}';


$task = '{MY-TASK}';

// * The new lease in seconds.
$newLeaseSeconds = 0;

$postBody = new Google_Service_Taskqueue_Task($client);

$response = $service->tasks->patch($project, $taskqueue, $task, $newLeaseSeconds, $postBody);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

function getClient() {
  // TODO: Implement this function to get authentication credentials.
  // See https://foo.com/bar
  // Authorize using one of the following scopes in order to use this method:
  //   https://www.googleapis.com/auth/taskqueue
  //   https://www.googleapis.com/auth/taskqueue.consumer
  return null;
}

// Create a new client.
$client = getClient();

// Create a new Taskqueue service.
$service = new Google_Service_Taskqueue($client);

// * The project under which the queue lies.
$project = '{MY-PROJECT}';


$taskqueue = '{MY-TASKQUEUE}';


$task = '{MY-TASK}';

// * The new lease in seconds.
$newLeaseSeconds = 0;

$postBody = new Google_Service_Taskqueue_Task($client);

$response = $service->tasks->update($project, $taskqueue, $task, $newLeaseSeconds, $postBody);

