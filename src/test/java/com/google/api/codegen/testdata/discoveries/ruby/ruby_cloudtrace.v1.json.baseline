
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Cloud Trace API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudtrace
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/cloudtrace_v1'

service = Google::Apis::CloudtraceV1::CloudTraceService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'patch_project_traces' method:

# * ID of the Cloud project where the trace data is stored.
project_id = ''

traces_object = Google::Apis::CloudtraceV1::Traces.new


# Perform the call
service.patch_project_traces(project_id, traces_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Cloud Trace API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudtrace
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/cloudtrace_v1'

service = Google::Apis::CloudtraceV1::CloudTraceService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'get_project_trace' method:

# * ID of the Cloud project where the trace data is stored.
project_id = ''

# * ID of the trace to return.
trace_id = ''

# Perform the call
response = service.get_project_trace(project_id, trace_id)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Cloud Trace API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudtrace
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/cloudtrace_v1'

service = Google::Apis::CloudtraceV1::CloudTraceService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'list_project_traces' method:

# * ID of the Cloud project where the trace data is stored.
project_id = ''

# Perform the call
result_list = service.fetch_all(items: :traces) { |token|
  service.list_project_traces(project_id, page_token: token)
}
result_list.each { |element|
  # doThingsWith(element)
}
