
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of Autoscaler resource.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# Zone name of Autoscaler resource.
zone = '{MY-ZONE}' # TODO: Change placeholder value(s).

# Name of the Autoscaler resource.
autoscaler = '{MY-AUTOSCALER}' # TODO: Change placeholder value(s).

# Perform the call
response = service.delete_autoscaler(project, zone, autoscaler)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of Autoscaler resource.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# Zone name of Autoscaler resource.
zone = '{MY-ZONE}' # TODO: Change placeholder value(s).

# Name of the Autoscaler resource.
autoscaler = '{MY-AUTOSCALER}' # TODO: Change placeholder value(s).

# Perform the call
response = service.get_autoscaler(project, zone, autoscaler)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of Autoscaler resource.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# Zone name of Autoscaler resource.
zone = '{MY-ZONE}' # TODO: Change placeholder value(s).

# TODO: Assign values to the desired members.
autoscaler_body = Google::Apis::AutoscalerV1beta2::Autoscaler.new

# Perform the call
response = service.insert_autoscaler(project, zone, autoscaler_body)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of Autoscaler resource.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# Zone name of Autoscaler resource.
zone = '{MY-ZONE}' # TODO: Change placeholder value(s).

# Perform the call
items = service.fetch_all(items: :items) do |token|
  service.list_autoscalers(project, zone, page_token: token)
end

items.each do |autoscaler|
  # TODO: Use autoscaler
  puts JSON.pretty_generate(autoscaler)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of Autoscaler resource.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# Zone name of Autoscaler resource.
zone = '{MY-ZONE}' # TODO: Change placeholder value(s).

# Name of the Autoscaler resource.
autoscaler = '{MY-AUTOSCALER}' # TODO: Change placeholder value(s).

# TODO: Assign values to the desired members to be changed.
autoscaler_body = Google::Apis::AutoscalerV1beta2::Autoscaler.new

# Perform the call
response = service.patch_autoscaler(project, zone, autoscaler, autoscaler_body)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of Autoscaler resource.
project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# Zone name of Autoscaler resource.
zone = '{MY-ZONE}' # TODO: Change placeholder value(s).

# Name of the Autoscaler resource.
autoscaler = '{MY-AUTOSCALER}' # TODO: Change placeholder value(s).

# TODO: Assign values to the desired members.
autoscaler_body = Google::Apis::AutoscalerV1beta2::Autoscaler.new

# Perform the call
response = service.update_autoscaler(project, zone, autoscaler, autoscaler_body)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


project = '{MY-PROJECT}' # TODO: Change placeholder value(s).


zone = '{MY-ZONE}'  # eg. 'us-central1-f' # TODO: Change placeholder value(s).


operation = '{MY-OPERATION}' # TODO: Change placeholder value(s).

# Perform the call
service.delete_zone_operation(project, zone, operation)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


project = '{MY-PROJECT}' # TODO: Change placeholder value(s).


zone = '{MY-ZONE}'  # eg. 'us-central1-f' # TODO: Change placeholder value(s).


operation = '{MY-OPERATION}' # TODO: Change placeholder value(s).

# Perform the call
response = service.get_zone_operation(project, zone, operation)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


project = '{MY-PROJECT}' # TODO: Change placeholder value(s).


zone = '{MY-ZONE}'  # eg. 'us-central1-f' # TODO: Change placeholder value(s).

# Perform the call
items = service.fetch_all(items: :items) do |token|
  service.list_zone_operations(project, zone, page_token: token)
end

items.each do |operation|
  # TODO: Use operation
  puts JSON.pretty_generate(operation)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


project = '{MY-PROJECT}' # TODO: Change placeholder value(s).

# Perform the call
items = service.fetch_all(items: :items) do |token|
  service.list_zones(project, page_token: token)
end

items.each do |zone|
  # TODO: Use zone
  puts JSON.pretty_generate(zone)
end
