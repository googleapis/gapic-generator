
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

# Construct the autoscaler service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `delete_autoscaler` method:

# * Project ID of Autoscaler resource.
project = ''

# * Zone name of Autoscaler resource.
zone = ''

# * Name of the Autoscaler resource.
autoscaler = ''


# Perform the call
response = service.delete_autoscaler(project, zone, autoscaler)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

# Construct the autoscaler service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `get_autoscaler` method:

# * Project ID of Autoscaler resource.
project = ''

# * Zone name of Autoscaler resource.
zone = ''

# * Name of the Autoscaler resource.
autoscaler = ''


# Perform the call
response = service.get_autoscaler(project, zone, autoscaler)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

# Construct the autoscaler service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `insert_autoscaler` method:

# * Project ID of Autoscaler resource.
project = ''

# * Zone name of Autoscaler resource.
zone = ''


autoscaler_body = Google::Apis::AutoscalerV1beta2::Autoscaler.new
# TODO: Assign values to desired members of the `autoscaler_body` object.


# Perform the call
response = service.insert_autoscaler(project, zone, autoscaler_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

# Construct the autoscaler service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `list_autoscalers` method:

# * Project ID of Autoscaler resource.
project = ''

# * Zone name of Autoscaler resource.
zone = ''


# Perform the call
items = service.fetch_all(items: :items) do |token|
  service.list_autoscalers(project, zone, page_token: token)
end

items.each do |autoscaler|
  # TODO: Change code below to process each `autoscaler` resource:
  puts JSON.pretty_generate(autoscaler)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

# Construct the autoscaler service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `patch_autoscaler` method:

# * Project ID of Autoscaler resource.
project = ''

# * Zone name of Autoscaler resource.
zone = ''

# * Name of the Autoscaler resource.
autoscaler = ''


autoscaler_body = Google::Apis::AutoscalerV1beta2::Autoscaler.new
# TODO: Assign values to desired members of the `autoscaler_body` object to be changed.


# Perform the call
response = service.patch_autoscaler(project, zone, autoscaler, autoscaler_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

# Construct the autoscaler service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `update_autoscaler` method:

# * Project ID of Autoscaler resource.
project = ''

# * Zone name of Autoscaler resource.
zone = ''

# * Name of the Autoscaler resource.
autoscaler = ''


autoscaler_body = Google::Apis::AutoscalerV1beta2::Autoscaler.new
# TODO: Assign values to desired members of the `autoscaler_body` object.


# Perform the call
response = service.update_autoscaler(project, zone, autoscaler, autoscaler_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

# Construct the autoscaler service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `delete_zone_operation` method:

# * project
project = ''

# * zone
zone = ''

# * operation
operation = ''


# Perform the call
service.delete_zone_operation(project, zone, operation)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

# Construct the autoscaler service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `get_zone_operation` method:

# * project
project = ''

# * zone
zone = ''

# * operation
operation = ''


# Perform the call
response = service.get_zone_operation(project, zone, operation)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

# Construct the autoscaler service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `list_zone_operations` method:

# * project
project = ''

# * zone
zone = ''


# Perform the call
items = service.fetch_all(items: :items) do |token|
  service.list_zone_operations(project, zone, page_token: token)
end

items.each do |operation|
  # TODO: Change code below to process each `operation` resource:
  puts JSON.pretty_generate(operation)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Autoscaler API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/autoscaler
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/autoscaler_v1beta2'
require 'json'

# Construct the autoscaler service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::AutoscalerV1beta2::AutoscalerService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `list_zones` method:

# * project
project = ''


# Perform the call
items = service.fetch_all(items: :items) do |token|
  service.list_zones(project, page_token: token)
end

items.each do |zone|
  # TODO: Change code below to process each `zone` resource:
  puts JSON.pretty_generate(zone)
end
