============== file: tests/unit/gapic/v1/test_no_templates_api_service_client_v1.py ==============
# Copyright 2017, Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Unit tests."""

import mock
import unittest

from google.gax import errors

from example.proto import no_path_templates_messages_pb2
from google.protobuf import empty_pb2
import example


class CustomException(Exception):
    pass


class TestNoTemplatesAPIServiceClient(unittest.TestCase):

    @mock.patch('google.gax.config.create_stub', spec=True)
    def test_increment(self, mock_create_stub):
        # Mock gRPC layer
        grpc_stub = mock.Mock()
        mock_create_stub.return_value = grpc_stub

        client = example.NoTemplatesAPIServiceClient()

        client.increment()

        grpc_stub.Increment.assert_called_once()
        args, kwargs = grpc_stub.Increment.call_args
        self.assertEqual(len(args), 2)
        self.assertEqual(len(kwargs), 1)
        self.assertIn('metadata', kwargs)
        actual_request = args[0]

        expected_request = no_path_templates_messages_pb2.IncrementRequest()
        self.assertEqual(expected_request, actual_request)

    @mock.patch('google.gax.config.API_ERRORS', (CustomException,))
    @mock.patch('google.gax.config.create_stub', spec=True)
    def test_increment_exception(self, mock_create_stub):
        # Mock gRPC layer
        grpc_stub = mock.Mock()
        mock_create_stub.return_value = grpc_stub

        client = example.NoTemplatesAPIServiceClient()

        # Mock exception response
        grpc_stub.Increment.side_effect = CustomException()

        self.assertRaises(errors.GaxError, client.increment)

