
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Translate API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/translate
// 2. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Services;
using Google.Apis.Translate.v2;
using System.Collections.Generic;
using System.Threading.Tasks;

using Data = Google.Apis.Translate.v2.Data;

namespace TranslateSample
{
    public class Program
    {
        public static void Main(string[] args)
        {
            // TODO: Replace "{MY-API-KEY}"
            TranslateService translateService = new TranslateService(new BaseClientService.Initializer
            {
                ApplicationName = "Google Cloud Platform Sample",
                ApiKey = "{MY-API-KEY}",
            });

            // TODO: Change placeholders below to values for parameters to the List() method:

            // The text to detect
            List<string> q = new List<string>();

            DetectionsResource.ListRequest request = translateService.Detections.List(q);
            Data.DetectionsListResponse response = request.Execute();

            // To execute asynchronously in an async method, use
            // Data.DetectionsListResponse response = await request.ExecuteAsync();
        }

        public static UserCredential GetCredential() {
            // TODO: Implement this function to get authentication credentials.
            // See https://foo.com/bar
            return null;
        }
    }
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Translate API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/translate
// 2. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Services;
using Google.Apis.Translate.v2;
using System.Threading.Tasks;

using Data = Google.Apis.Translate.v2.Data;

namespace TranslateSample
{
    public class Program
    {
        public static void Main(string[] args)
        {
            // TODO: Replace "{MY-API-KEY}"
            TranslateService translateService = new TranslateService(new BaseClientService.Initializer
            {
                ApplicationName = "Google Cloud Platform Sample",
                ApiKey = "{MY-API-KEY}",
            });

            LanguagesResource.ListRequest request = translateService.Languages.List();
            Data.LanguagesListResponse response = request.Execute();

            // To execute asynchronously in an async method, use
            // Data.LanguagesListResponse response = await request.ExecuteAsync();
        }

        public static UserCredential GetCredential() {
            // TODO: Implement this function to get authentication credentials.
            // See https://foo.com/bar
            return null;
        }
    }
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Translate API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/translate
// 2. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Services;
using Google.Apis.Translate.v2;
using System.Collections.Generic;
using System.Threading.Tasks;

using Data = Google.Apis.Translate.v2.Data;

namespace TranslateSample
{
    public class Program
    {
        public static void Main(string[] args)
        {
            // TODO: Replace "{MY-API-KEY}"
            TranslateService translateService = new TranslateService(new BaseClientService.Initializer
            {
                ApplicationName = "Google Cloud Platform Sample",
                ApiKey = "{MY-API-KEY}",
            });

            // TODO: Change placeholders below to values for parameters to the List() method:

            // The text to translate
            List<string> q = new List<string>();

            // The target language into which the text should be translated
            string target = "{MY-TARGET}";

            TranslationsResource.ListRequest request = translateService.Translations.List(q, target);
            Data.TranslationsListResponse response = request.Execute();

            // To execute asynchronously in an async method, use
            // Data.TranslationsListResponse response = await request.ExecuteAsync();
        }

        public static UserCredential GetCredential() {
            // TODO: Implement this function to get authentication credentials.
            // See https://foo.com/bar
            return null;
        }
    }
}
