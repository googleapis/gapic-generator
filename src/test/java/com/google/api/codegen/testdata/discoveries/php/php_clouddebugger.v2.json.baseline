
<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Debugger API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouddebugger
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudDebugger service.
$service = new Google_Service_CloudDebugger($client);
// Identifies the debuggee.
$debuggeeId = '';

$response = $service->controller_debuggees_breakpoints->listControllerDebuggeesBreakpoints($debuggeeId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Debugger API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouddebugger
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudDebugger service.
$service = new Google_Service_CloudDebugger($client);
// Identifies the debuggee being debugged.
$debuggeeId = '';
// Breakpoint identifier, unique in the scope of the debuggee.
$id = '';

$postBody = new Google_Service_CloudDebugger_UpdateActiveBreakpointRequest($client);

$response = $service->controller_debuggees_breakpoints->update($debuggeeId, $id, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Debugger API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouddebugger
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudDebugger service.
$service = new Google_Service_CloudDebugger($client);


$postBody = new Google_Service_CloudDebugger_RegisterDebuggeeRequest($client);

$response = $service->controller_debuggees->register($postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Debugger API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouddebugger
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudDebugger service.
$service = new Google_Service_CloudDebugger($client);
// ID of the debuggee whose breakpoint to delete.
$debuggeeId = '';
// ID of the breakpoint to delete.
$breakpointId = '';

$response = $service->debugger_debuggees_breakpoints->delete($debuggeeId, $breakpointId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Debugger API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouddebugger
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudDebugger service.
$service = new Google_Service_CloudDebugger($client);
// ID of the debuggee whose breakpoint to get.
$debuggeeId = '';
// ID of the breakpoint to get.
$breakpointId = '';

$response = $service->debugger_debuggees_breakpoints->get($debuggeeId, $breakpointId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Debugger API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouddebugger
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudDebugger service.
$service = new Google_Service_CloudDebugger($client);
// ID of the debuggee whose breakpoints to list.
$debuggeeId = '';

$response = $service->debugger_debuggees_breakpoints->listDebuggerDebuggeesBreakpoints($debuggeeId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Debugger API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouddebugger
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudDebugger service.
$service = new Google_Service_CloudDebugger($client);
// ID of the debuggee where the breakpoint is to be set.
$debuggeeId = '';

$postBody = new Google_Service_CloudDebugger_Breakpoint($client);

$response = $service->debugger_debuggees_breakpoints->set($debuggeeId, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Debugger API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouddebugger
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudDebugger service.
$service = new Google_Service_CloudDebugger($client);


$response = $service->debugger_debuggees->listDebuggerDebuggees();

