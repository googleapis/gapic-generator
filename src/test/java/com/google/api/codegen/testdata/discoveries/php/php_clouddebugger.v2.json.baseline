
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Stackdriver Debugger API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouddebugger
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Use Application Default Credentials for authentication when running locally.
// For more information, see:
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudDebugger($client);


// TODO: Change placeholders below to desired parameter values for the `listControllerDebuggeesBreakpoints` method:

// Identifies the debuggee.
$debuggeeId = '{MY-DEBUGGEE-ID}';


$response = $service->controller_debuggees_breakpoints->listControllerDebuggeesBreakpoints($debuggeeId);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Stackdriver Debugger API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouddebugger
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Use Application Default Credentials for authentication when running locally.
// For more information, see:
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudDebugger($client);


// TODO: Change placeholders below to desired parameter values for the `update` method:

// Identifies the debuggee being debugged.
$debuggeeId = '{MY-DEBUGGEE-ID}';

// Breakpoint identifier, unique in the scope of the debuggee.
$id = '{MY-ID}';


$requestBody = new Google_Service_CloudDebugger_UpdateActiveBreakpointRequest($client);
// TODO: Assign values to desired properties of the `requestBody` object.


$response = $service->controller_debuggees_breakpoints->update($debuggeeId, $id, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Stackdriver Debugger API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouddebugger
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Use Application Default Credentials for authentication when running locally.
// For more information, see:
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudDebugger($client);


$requestBody = new Google_Service_CloudDebugger_RegisterDebuggeeRequest($client);
// TODO: Assign values to desired properties of the `requestBody` object.


$response = $service->controller_debuggees->register($requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Stackdriver Debugger API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouddebugger
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Use Application Default Credentials for authentication when running locally.
// For more information, see:
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudDebugger($client);


// TODO: Change placeholders below to desired parameter values for the `delete` method:

// ID of the debuggee whose breakpoint to delete.
$debuggeeId = '{MY-DEBUGGEE-ID}';

// ID of the breakpoint to delete.
$breakpointId = '{MY-BREAKPOINT-ID}';


$service->debugger_debuggees_breakpoints->delete($debuggeeId, $breakpointId);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Stackdriver Debugger API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouddebugger
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Use Application Default Credentials for authentication when running locally.
// For more information, see:
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudDebugger($client);


// TODO: Change placeholders below to desired parameter values for the `get` method:

// ID of the debuggee whose breakpoint to get.
$debuggeeId = '{MY-DEBUGGEE-ID}';

// ID of the breakpoint to get.
$breakpointId = '{MY-BREAKPOINT-ID}';


$response = $service->debugger_debuggees_breakpoints->get($debuggeeId, $breakpointId);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Stackdriver Debugger API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouddebugger
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Use Application Default Credentials for authentication when running locally.
// For more information, see:
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudDebugger($client);


// TODO: Change placeholders below to desired parameter values for the `listDebuggerDebuggeesBreakpoints` method:

// ID of the debuggee whose breakpoints to list.
$debuggeeId = '{MY-DEBUGGEE-ID}';


$response = $service->debugger_debuggees_breakpoints->listDebuggerDebuggeesBreakpoints($debuggeeId);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Stackdriver Debugger API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouddebugger
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Use Application Default Credentials for authentication when running locally.
// For more information, see:
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudDebugger($client);


// TODO: Change placeholders below to desired parameter values for the `set` method:

// ID of the debuggee where the breakpoint is to be set.
$debuggeeId = '{MY-DEBUGGEE-ID}';


$requestBody = new Google_Service_CloudDebugger_Breakpoint($client);
// TODO: Assign values to desired properties of the `requestBody` object.


$response = $service->debugger_debuggees_breakpoints->set($debuggeeId, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Stackdriver Debugger API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/clouddebugger
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Use Application Default Credentials for authentication when running locally.
// For more information, see:
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudDebugger($client);


$response = $service->debugger_debuggees->listDebuggerDebuggees();

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
