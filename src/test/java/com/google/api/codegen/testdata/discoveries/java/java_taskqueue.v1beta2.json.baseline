
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/taskqueue/v1beta2/java
 */

import com.google.api.client.auth.oauth2.Credential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.taskqueue.Taskqueue;
import com.google.api.services.taskqueue.model.TaskQueue;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Collections;


public class TaskqueueExample {
  public static void main(String[] args) throws IOException, GeneralSecurityException {
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    Taskqueue taskqueueService = new Taskqueue.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();


    // TODO: Change placeholders below to desired parameter values for the `get` method:

    // The project under which the queue lies.
    String project = "{MY-PROJECT}";

    // The id of the taskqueue to get the properties of.
    String taskqueue = "{MY-TASKQUEUE}";


    Taskqueue.Taskqueues.Get request = taskqueueService.taskqueues().get(project, taskqueue);
    TaskQueue response = request.execute();

    // TODO: Change code below to process the `response` object:
    System.out.println(response);
  }

  public static Credential getAuth() {
    // TODO: Change placeholder below to get authentication credentials.
    // See: https://foo.com/bar
    //
    // To use the `get` method, authorize using one of the following scopes:
    //   https://www.googleapis.com/auth/taskqueue
    //   https://www.googleapis.com/auth/taskqueue.consumer
    return null;
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/taskqueue/v1beta2/java
 */

import com.google.api.client.auth.oauth2.Credential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.taskqueue.Taskqueue;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Collections;


public class TaskqueueExample {
  public static void main(String[] args) throws IOException, GeneralSecurityException {
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    Taskqueue taskqueueService = new Taskqueue.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();


    // TODO: Change placeholders below to desired parameter values for the `delete` method:

    // The project under which the queue lies.
    String project = "{MY-PROJECT}";

    // The taskqueue to delete a task from.
    String taskqueue = "{MY-TASKQUEUE}";

    // The id of the task to delete.
    String task = "{MY-TASK}";


    Taskqueue.Tasks.Delete request = taskqueueService.tasks().delete(project, taskqueue, task);
    request.execute();
  }

  public static Credential getAuth() {
    // TODO: Change placeholder below to get authentication credentials.
    // See: https://foo.com/bar
    //
    // To use the `delete` method, authorize using one of the following scopes:
    //   https://www.googleapis.com/auth/taskqueue
    //   https://www.googleapis.com/auth/taskqueue.consumer
    return null;
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/taskqueue/v1beta2/java
 */

import com.google.api.client.auth.oauth2.Credential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.taskqueue.Taskqueue;
import com.google.api.services.taskqueue.model.Task;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Collections;


public class TaskqueueExample {
  public static void main(String[] args) throws IOException, GeneralSecurityException {
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    Taskqueue taskqueueService = new Taskqueue.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();


    // TODO: Change placeholders below to desired parameter values for the `get` method:

    // The project under which the queue lies.
    String project = "{MY-PROJECT}";

    // The taskqueue in which the task belongs.
    String taskqueue = "{MY-TASKQUEUE}";

    // The task to get properties of.
    String task = "{MY-TASK}";


    Taskqueue.Tasks.Get request = taskqueueService.tasks().get(project, taskqueue, task);
    Task response = request.execute();

    // TODO: Change code below to process the `response` object:
    System.out.println(response);
  }

  public static Credential getAuth() {
    // TODO: Change placeholder below to get authentication credentials.
    // See: https://foo.com/bar
    //
    // To use the `get` method, authorize using one of the following scopes:
    //   https://www.googleapis.com/auth/taskqueue
    //   https://www.googleapis.com/auth/taskqueue.consumer
    return null;
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/taskqueue/v1beta2/java
 */

import com.google.api.client.auth.oauth2.Credential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.taskqueue.Taskqueue;
import com.google.api.services.taskqueue.model.Task;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Collections;


public class TaskqueueExample {
  public static void main(String[] args) throws IOException, GeneralSecurityException {
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    Taskqueue taskqueueService = new Taskqueue.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();


    // TODO: Change placeholders below to desired parameter values for the `insert` method:

    // The project under which the queue lies
    String project = "{MY-PROJECT}";

    // The taskqueue to insert the task into
    String taskqueue = "{MY-TASKQUEUE}";


    Task requestBody = new Task();
    // TODO: Assign values to desired fields of the `requestBody` object.


    Taskqueue.Tasks.Insert request = taskqueueService.tasks().insert(project, taskqueue, requestBody);
    Task response = request.execute();

    // TODO: Change code below to process the `response` object:
    System.out.println(response);
  }

  public static Credential getAuth() {
    // TODO: Change placeholder below to get authentication credentials.
    // See: https://foo.com/bar
    //
    // To use the `insert` method, authorize using one of the following scopes:
    //   https://www.googleapis.com/auth/taskqueue
    //   https://www.googleapis.com/auth/taskqueue.consumer
    return null;
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/taskqueue/v1beta2/java
 */

import com.google.api.client.auth.oauth2.Credential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.taskqueue.Taskqueue;
import com.google.api.services.taskqueue.model.Tasks;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Collections;


public class TaskqueueExample {
  public static void main(String[] args) throws IOException, GeneralSecurityException {
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    Taskqueue taskqueueService = new Taskqueue.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();


    // TODO: Change placeholders below to desired parameter values for the `lease` method:

    // The project under which the queue lies.
    String project = "{MY-PROJECT}";

    // The taskqueue to lease a task from.
    String taskqueue = "{MY-TASKQUEUE}";

    // The number of tasks to lease.
    int numTasks = 0;

    // The lease in seconds.
    int leaseSecs = 0;


    Taskqueue.Tasks.Lease request = taskqueueService.tasks().lease(project, taskqueue, numTasks, leaseSecs);
    Tasks response = request.execute();

    // TODO: Change code below to process the `response` object:
    System.out.println(response);
  }

  public static Credential getAuth() {
    // TODO: Change placeholder below to get authentication credentials.
    // See: https://foo.com/bar
    //
    // To use the `lease` method, authorize using one of the following scopes:
    //   https://www.googleapis.com/auth/taskqueue
    //   https://www.googleapis.com/auth/taskqueue.consumer
    return null;
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/taskqueue/v1beta2/java
 */

import com.google.api.client.auth.oauth2.Credential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.taskqueue.Taskqueue;
import com.google.api.services.taskqueue.model.Tasks2;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Collections;


public class TaskqueueExample {
  public static void main(String[] args) throws IOException, GeneralSecurityException {
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    Taskqueue taskqueueService = new Taskqueue.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();


    // TODO: Change placeholders below to desired parameter values for the `list` method:

    // The project under which the queue lies.
    String project = "{MY-PROJECT}";

    // The id of the taskqueue to list tasks from.
    String taskqueue = "{MY-TASKQUEUE}";


    Taskqueue.Tasks.List request = taskqueueService.tasks().list(project, taskqueue);
    Tasks2 response = request.execute();

    // TODO: Change code below to process the `response` object:
    System.out.println(response);
  }

  public static Credential getAuth() {
    // TODO: Change placeholder below to get authentication credentials.
    // See: https://foo.com/bar
    //
    // To use the `list` method, authorize using one of the following scopes:
    //   https://www.googleapis.com/auth/taskqueue
    //   https://www.googleapis.com/auth/taskqueue.consumer
    return null;
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/taskqueue/v1beta2/java
 */

import com.google.api.client.auth.oauth2.Credential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.taskqueue.Taskqueue;
import com.google.api.services.taskqueue.model.Task;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Collections;


public class TaskqueueExample {
  public static void main(String[] args) throws IOException, GeneralSecurityException {
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    Taskqueue taskqueueService = new Taskqueue.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();


    // TODO: Change placeholders below to desired parameter values for the `patch` method:

    // The project under which the queue lies.
    String project = "{MY-PROJECT}";

    // taskqueue
    String taskqueue = "{MY-TASKQUEUE}";

    // task
    String task = "{MY-TASK}";

    // The new lease in seconds.
    int newLeaseSeconds = 0;


    Task requestBody = new Task();
    // TODO: Assign values to desired fields of the `requestBody` object to be changed.


    Taskqueue.Tasks.Patch request = taskqueueService.tasks().patch(project, taskqueue, task, newLeaseSeconds, requestBody);
    Task response = request.execute();

    // TODO: Change code below to process the `response` object:
    System.out.println(response);
  }

  public static Credential getAuth() {
    // TODO: Change placeholder below to get authentication credentials.
    // See: https://foo.com/bar
    //
    // To use the `patch` method, authorize using one of the following scopes:
    //   https://www.googleapis.com/auth/taskqueue
    //   https://www.googleapis.com/auth/taskqueue.consumer
    return null;
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/taskqueue/v1beta2/java
 */

import com.google.api.client.auth.oauth2.Credential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.taskqueue.Taskqueue;
import com.google.api.services.taskqueue.model.Task;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Collections;


public class TaskqueueExample {
  public static void main(String[] args) throws IOException, GeneralSecurityException {
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    Taskqueue taskqueueService = new Taskqueue.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();


    // TODO: Change placeholders below to desired parameter values for the `update` method:

    // The project under which the queue lies.
    String project = "{MY-PROJECT}";

    // taskqueue
    String taskqueue = "{MY-TASKQUEUE}";

    // task
    String task = "{MY-TASK}";

    // The new lease in seconds.
    int newLeaseSeconds = 0;


    Task requestBody = new Task();
    // TODO: Assign values to desired fields of the `requestBody` object.


    Taskqueue.Tasks.Update request = taskqueueService.tasks().update(project, taskqueue, task, newLeaseSeconds, requestBody);
    Task response = request.execute();

    // TODO: Change code below to process the `response` object:
    System.out.println(response);
  }

  public static Credential getAuth() {
    // TODO: Change placeholder below to get authentication credentials.
    // See: https://foo.com/bar
    //
    // To use the `update` method, authorize using one of the following scopes:
    //   https://www.googleapis.com/auth/taskqueue
    //   https://www.googleapis.com/auth/taskqueue.consumer
    return null;
  }
}
