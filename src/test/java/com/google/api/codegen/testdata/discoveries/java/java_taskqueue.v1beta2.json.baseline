
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
 * 2. Install the Java client library on Maven or Gradle. Check installation
=======
 * 2. Install the Java client library on maven or gradle. Check installation
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/taskqueue/v1beta2/java
 */
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
=======

import com.google.api.client.auth.oauth2.Credential;
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.taskqueue.Taskqueue;
import com.google.api.services.taskqueue.Taskqueue.Taskqueues.Get;
import com.google.api.services.taskqueue.model.TaskQueue;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;


public class TaskqueueExample {
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
  public void run() throws IOException, GeneralSecurityException {
    // The project under which the queue lies.
    String project = ""; // TODO: Update field(s).

    // The id of the taskqueue to get the properties of.
    String taskqueue = ""; // TODO: Update field(s).

    Taskqueue service = createService();
    Get request = service.taskqueues().get(project, taskqueue);
    TaskQueue response = request.execute();
    System.out.println(response);
  }

  public Taskqueue createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Taskqueue.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new TaskqueueExample().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
=======
  public static void main(String[] args) throws IOException, GeneralSecurityException {

    // TODO: Implement this function to get authentication credentials.
    // See https://foo.com/bar
    // Authorize using one of the following scopes in order to use this method:
    //   https://www.googleapis.com/auth/taskqueue
    //   https://www.googleapis.com/auth/taskqueue.consumer
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();
    Taskqueue taskqueueService = new Taskqueue.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();

    // TODO: Change placeholders below to appropriate parameter values for the 'get' method:

    // * The project under which the queue lies.
    String project = "{MY-PROJECT}";

    // * The id of the taskqueue to get the properties of.
    String taskqueue = "{MY-TASKQUEUE}";

    Taskqueue.Taskqueues.Get request = taskqueueService.taskqueues().get(project, taskqueue);
    TaskQueue response = request.execute();

    // TODO: Add code here to process the 'response' object
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
  }
}
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
 * 2. Install the Java client library on Maven or Gradle. Check installation
=======
 * 2. Install the Java client library on maven or gradle. Check installation
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/taskqueue/v1beta2/java
 */
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
=======

import com.google.api.client.auth.oauth2.Credential;
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.taskqueue.Taskqueue;
import com.google.api.services.taskqueue.Taskqueue.Tasks.Delete;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;


public class TaskqueueExample {
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
  public void run() throws IOException, GeneralSecurityException {
    // The project under which the queue lies.
    String project = ""; // TODO: Update field(s).

    // The taskqueue to delete a task from.
    String taskqueue = ""; // TODO: Update field(s).

    // The id of the task to delete.
    String task = ""; // TODO: Update field(s).

    Taskqueue service = createService();
    Delete request = service.tasks().delete(project, taskqueue, task);
    request.execute();
  }

  public Taskqueue createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Taskqueue.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }
=======
  public static void main(String[] args) throws IOException, GeneralSecurityException {

    // TODO: Implement this function to get authentication credentials.
    // See https://foo.com/bar
    // Authorize using one of the following scopes in order to use this method:
    //   https://www.googleapis.com/auth/taskqueue
    //   https://www.googleapis.com/auth/taskqueue.consumer
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();
    Taskqueue taskqueueService = new Taskqueue.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();

    // TODO: Change placeholders below to appropriate parameter values for the 'delete' method:

    // * The project under which the queue lies.
    String project = "{MY-PROJECT}";

    // * The taskqueue to delete a task from.
    String taskqueue = "{MY-TASKQUEUE}";

    // * The id of the task to delete.
    String task = "{MY-TASK}";
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new TaskqueueExample().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
 * 2. Install the Java client library on Maven or Gradle. Check installation
=======
 * 2. Install the Java client library on maven or gradle. Check installation
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/taskqueue/v1beta2/java
 */
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
=======

import com.google.api.client.auth.oauth2.Credential;
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.taskqueue.Taskqueue;
import com.google.api.services.taskqueue.Taskqueue.Tasks.Get;
import com.google.api.services.taskqueue.model.Task;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;


public class TaskqueueExample {
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
  public void run() throws IOException, GeneralSecurityException {
    // The project under which the queue lies.
    String project = ""; // TODO: Update field(s).

    // The taskqueue in which the task belongs.
    String taskqueue = ""; // TODO: Update field(s).

    // The task to get properties of.
    String task = ""; // TODO: Update field(s).

    Taskqueue service = createService();
    Get request = service.tasks().get(project, taskqueue, task);
    Task response = request.execute();
    System.out.println(response);
  }

  public Taskqueue createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Taskqueue.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new TaskqueueExample().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
=======
  public static void main(String[] args) throws IOException, GeneralSecurityException {

    // TODO: Implement this function to get authentication credentials.
    // See https://foo.com/bar
    // Authorize using one of the following scopes in order to use this method:
    //   https://www.googleapis.com/auth/taskqueue
    //   https://www.googleapis.com/auth/taskqueue.consumer
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();
    Taskqueue taskqueueService = new Taskqueue.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();

    // TODO: Change placeholders below to appropriate parameter values for the 'get' method:

    // * The project under which the queue lies.
    String project = "{MY-PROJECT}";

    // * The taskqueue in which the task belongs.
    String taskqueue = "{MY-TASKQUEUE}";

    // * The task to get properties of.
    String task = "{MY-TASK}";

    Taskqueue.Tasks.Get request = taskqueueService.tasks().get(project, taskqueue, task);
    Task response = request.execute();

    // TODO: Add code here to process the 'response' object
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
  }
}
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
 * 2. Install the Java client library on Maven or Gradle. Check installation
=======
 * 2. Install the Java client library on maven or gradle. Check installation
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/taskqueue/v1beta2/java
 */
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
=======

import com.google.api.client.auth.oauth2.Credential;
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.taskqueue.Taskqueue;
import com.google.api.services.taskqueue.Taskqueue.Tasks.Insert;
import com.google.api.services.taskqueue.model.Task;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;


public class TaskqueueExample {
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
  public void run() throws IOException, GeneralSecurityException {
    // TODO: Assign desired fields.
    Task requestBody = new Task();

    // The project under which the queue lies
    String project = ""; // TODO: Update field(s).

    // The taskqueue to insert the task into
    String taskqueue = ""; // TODO: Update field(s).

    Taskqueue service = createService();
    Insert request = service.tasks().insert(project, taskqueue, requestBody);
    Task response = request.execute();
    System.out.println(response);
  }

  public Taskqueue createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Taskqueue.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new TaskqueueExample().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
=======
  public static void main(String[] args) throws IOException, GeneralSecurityException {

    // TODO: Implement this function to get authentication credentials.
    // See https://foo.com/bar
    // Authorize using one of the following scopes in order to use this method:
    //   https://www.googleapis.com/auth/taskqueue
    //   https://www.googleapis.com/auth/taskqueue.consumer
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();
    Taskqueue taskqueueService = new Taskqueue.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();

    // TODO: Change placeholders below to appropriate parameter values for the 'insert' method:

    // * The project under which the queue lies
    String project = "{MY-PROJECT}";

    // * The taskqueue to insert the task into
    String taskqueue = "{MY-TASKQUEUE}";

    Task content = new Task();
    // TODO: Add code here to assign values to desired fields of the 'content' object

    Taskqueue.Tasks.Insert request = taskqueueService.tasks().insert(project, taskqueue, content);
    Task response = request.execute();

    // TODO: Add code here to process the 'response' object
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
  }
}
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
 * 2. Install the Java client library on Maven or Gradle. Check installation
=======
 * 2. Install the Java client library on maven or gradle. Check installation
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/taskqueue/v1beta2/java
 */
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
=======

import com.google.api.client.auth.oauth2.Credential;
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.taskqueue.Taskqueue;
import com.google.api.services.taskqueue.Taskqueue.Tasks.Lease;
import com.google.api.services.taskqueue.model.Tasks;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;


public class TaskqueueExample {
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
  public void run() throws IOException, GeneralSecurityException {
    // The project under which the queue lies.
    String project = ""; // TODO: Update field(s).

    // The taskqueue to lease a task from.
    String taskqueue = ""; // TODO: Update field(s).

    // The number of tasks to lease.
    int numTasks = 0; // TODO: Update field(s).

    // The lease in seconds.
    int leaseSecs = 0; // TODO: Update field(s).
=======
  public static void main(String[] args) throws IOException, GeneralSecurityException {

    // TODO: Implement this function to get authentication credentials.
    // See https://foo.com/bar
    // Authorize using one of the following scopes in order to use this method:
    //   https://www.googleapis.com/auth/taskqueue
    //   https://www.googleapis.com/auth/taskqueue.consumer
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();
    Taskqueue taskqueueService = new Taskqueue.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();

    // TODO: Change placeholders below to appropriate parameter values for the 'lease' method:

    // * The project under which the queue lies.
    String project = "{MY-PROJECT}";

    // * The taskqueue to lease a task from.
    String taskqueue = "{MY-TASKQUEUE}";

    // * The number of tasks to lease.
    int numTasks = 0;

    // * The lease in seconds.
    int leaseSecs = 0;
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)

    Taskqueue service = createService();
    Lease request = service.tasks().lease(project, taskqueue, numTasks, leaseSecs);
    Tasks response = request.execute();
    System.out.println(response);
  }

<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
  public Taskqueue createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Taskqueue.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new TaskqueueExample().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
=======
    // TODO: Add code here to process the 'response' object
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
  }
}
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
 * 2. Install the Java client library on Maven or Gradle. Check installation
=======
 * 2. Install the Java client library on maven or gradle. Check installation
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/taskqueue/v1beta2/java
 */
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
=======

import com.google.api.client.auth.oauth2.Credential;
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.taskqueue.Taskqueue;
import com.google.api.services.taskqueue.Taskqueue.Tasks.List;
import com.google.api.services.taskqueue.model.Tasks2;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;


public class TaskqueueExample {
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
  public void run() throws IOException, GeneralSecurityException {
    // The project under which the queue lies.
    String project = ""; // TODO: Update field(s).

    // The id of the taskqueue to list tasks from.
    String taskqueue = ""; // TODO: Update field(s).

    Taskqueue service = createService();
    List request = service.tasks().list(project, taskqueue);
    Tasks2 response = request.execute();
    System.out.println(response);
  }

  public Taskqueue createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Taskqueue.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new TaskqueueExample().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
=======
  public static void main(String[] args) throws IOException, GeneralSecurityException {

    // TODO: Implement this function to get authentication credentials.
    // See https://foo.com/bar
    // Authorize using one of the following scopes in order to use this method:
    //   https://www.googleapis.com/auth/taskqueue
    //   https://www.googleapis.com/auth/taskqueue.consumer
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();
    Taskqueue taskqueueService = new Taskqueue.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();

    // TODO: Change placeholders below to appropriate parameter values for the 'list' method:

    // * The project under which the queue lies.
    String project = "{MY-PROJECT}";

    // * The id of the taskqueue to list tasks from.
    String taskqueue = "{MY-TASKQUEUE}";

    Taskqueue.Tasks.List request = taskqueueService.tasks().list(project, taskqueue);
    Tasks2 response = request.execute();

    // TODO: Add code here to process the 'response' object
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
  }
}
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
 * 2. Install the Java client library on Maven or Gradle. Check installation
=======
 * 2. Install the Java client library on maven or gradle. Check installation
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/taskqueue/v1beta2/java
 */
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
=======

import com.google.api.client.auth.oauth2.Credential;
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.taskqueue.Taskqueue;
import com.google.api.services.taskqueue.Taskqueue.Tasks.Patch;
import com.google.api.services.taskqueue.model.Task;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;


public class TaskqueueExample {
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
  public void run() throws IOException, GeneralSecurityException {
    // TODO: Assign desired fields.
    Task requestBody = new Task();

    // The project under which the queue lies.
    String project = ""; // TODO: Update field(s).
=======
  public static void main(String[] args) throws IOException, GeneralSecurityException {

    // TODO: Implement this function to get authentication credentials.
    // See https://foo.com/bar
    // Authorize using one of the following scopes in order to use this method:
    //   https://www.googleapis.com/auth/taskqueue
    //   https://www.googleapis.com/auth/taskqueue.consumer
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();
    Taskqueue taskqueueService = new Taskqueue.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();

    // TODO: Change placeholders below to appropriate parameter values for the 'patch' method:
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)

    // * The project under which the queue lies.
    String project = "{MY-PROJECT}";

<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
    String taskqueue = ""; // TODO: Update field(s).
=======
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)

    String taskqueue = "{MY-TASKQUEUE}";

<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
    String task = ""; // TODO: Update field(s).

    // The new lease in seconds.
    int newLeaseSeconds = 0; // TODO: Update field(s).

    Taskqueue service = createService();
    Patch request = service.tasks().patch(project, taskqueue, task, newLeaseSeconds, requestBody);
    Task response = request.execute();
    System.out.println(response);
  }

  public Taskqueue createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Taskqueue.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new TaskqueueExample().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
=======

    String task = "{MY-TASK}";

    // * The new lease in seconds.
    int newLeaseSeconds = 0;

    Task content = new Task();
    // TODO: Add code here to assign values to desired fields of the 'content' object to be changed

    Taskqueue.Tasks.Patch request = taskqueueService.tasks().patch(project, taskqueue, task, newLeaseSeconds, content);
    Task response = request.execute();

    // TODO: Add code here to process the 'response' object
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
  }
}
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the TaskQueue API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/taskqueue
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
 * 2. Install the Java client library on Maven or Gradle. Check installation
=======
 * 2. Install the Java client library on maven or gradle. Check installation
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/taskqueue/v1beta2/java
 */
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
=======

import com.google.api.client.auth.oauth2.Credential;
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.taskqueue.Taskqueue;
import com.google.api.services.taskqueue.Taskqueue.Tasks.Update;
import com.google.api.services.taskqueue.model.Task;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;


public class TaskqueueExample {
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
  public void run() throws IOException, GeneralSecurityException {
    // TODO: Assign desired fields.
    Task requestBody = new Task();

    // The project under which the queue lies.
    String project = ""; // TODO: Update field(s).
=======
  public static void main(String[] args) throws IOException, GeneralSecurityException {

    // TODO: Implement this function to get authentication credentials.
    // See https://foo.com/bar
    // Authorize using one of the following scopes in order to use this method:
    //   https://www.googleapis.com/auth/taskqueue
    //   https://www.googleapis.com/auth/taskqueue.consumer
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();
    Taskqueue taskqueueService = new Taskqueue.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();

    // TODO: Change placeholders below to appropriate parameter values for the 'update' method:
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)

    // * The project under which the queue lies.
    String project = "{MY-PROJECT}";

<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
    String taskqueue = ""; // TODO: Update field(s).
=======
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)

    String taskqueue = "{MY-TASKQUEUE}";

<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
    String task = ""; // TODO: Update field(s).

    // The new lease in seconds.
    int newLeaseSeconds = 0; // TODO: Update field(s).

    Taskqueue service = createService();
    Update request = service.tasks().update(project, taskqueue, task, newLeaseSeconds, requestBody);
    Task response = request.execute();
    System.out.println(response);
  }

  public Taskqueue createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Taskqueue.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new TaskqueueExample().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
=======

    String task = "{MY-TASK}";

    // * The new lease in seconds.
    int newLeaseSeconds = 0;

    Task content = new Task();
    // TODO: Add code here to assign values to desired fields of the 'content' object

    Taskqueue.Tasks.Update request = taskqueueService.tasks().update(project, taskqueue, task, newLeaseSeconds, content);
    Task response = request.execute();

    // TODO: Add code here to process the 'response' object
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
  }
}
