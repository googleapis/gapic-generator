
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Autoscaler API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/autoscaler
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/autoscaler/v1beta2/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.autoscaler.v1beta2.Autoscaler;
import com.google.api.services.autoscaler.v1beta2.Autoscaler.Autoscalers.Delete;
import com.google.api.services.autoscaler.v1beta2.model.Operation;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class AutoscalerExample {
  public void run() throws IOException, GeneralSecurityException {
    // Name of the Autoscaler resource.
    String autoscaler = ""; // TODO: Update field(s).

    // Zone name of Autoscaler resource.
    String zone = ""; // TODO: Update field(s).

    // Project ID of Autoscaler resource.
    String project = ""; // TODO: Update field(s).

    Autoscaler service = createService();
    Delete request = service.autoscalers().delete(autoscaler, zone, project);
    Operation response = request.execute();
    System.out.println(response);
  }

  public Autoscaler createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Autoscaler.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Autoscaler API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/autoscaler
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/autoscaler/v1beta2/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.autoscaler.v1beta2.Autoscaler;
import com.google.api.services.autoscaler.v1beta2.Autoscaler.Autoscalers.Get;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class AutoscalerExample {
  public void run() throws IOException, GeneralSecurityException {
    // Name of the Autoscaler resource.
    String autoscaler = ""; // TODO: Update field(s).

    // Zone name of Autoscaler resource.
    String zone = ""; // TODO: Update field(s).

    // Project ID of Autoscaler resource.
    String project = ""; // TODO: Update field(s).

    Autoscaler service = createService();
    Get request = service.autoscalers().get(autoscaler, zone, project);
    com.google.api.services.autoscaler.v1beta2.model.Autoscaler response = request.execute();
    System.out.println(response);
  }

  public Autoscaler createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Autoscaler.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Autoscaler API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/autoscaler
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/autoscaler/v1beta2/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.autoscaler.v1beta2.Autoscaler;
import com.google.api.services.autoscaler.v1beta2.Autoscaler.Autoscalers.Insert;
import com.google.api.services.autoscaler.v1beta2.model.Operation;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class AutoscalerExample {
  public void run() throws IOException, GeneralSecurityException {
    // TODO: Assign desired fields.
    com.google.api.services.autoscaler.v1beta2.model.Autoscaler requestBody = new com.google.api.services.autoscaler.v1beta2.model.Autoscaler();

    // Zone name of Autoscaler resource.
    String zone = ""; // TODO: Update field(s).

    // Project ID of Autoscaler resource.
    String project = ""; // TODO: Update field(s).

    Autoscaler service = createService();
    Insert request = service.autoscalers().insert(zone, project, requestBody);
    Operation response = request.execute();
    System.out.println(response);
  }

  public Autoscaler createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Autoscaler.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Autoscaler API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/autoscaler
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/autoscaler/v1beta2/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.autoscaler.v1beta2.Autoscaler;
import com.google.api.services.autoscaler.v1beta2.Autoscaler.Autoscalers.List;
import com.google.api.services.autoscaler.v1beta2.model.AutoscalerListResponse;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class AutoscalerExample {
  public void run() throws IOException, GeneralSecurityException {
    // Zone name of Autoscaler resource.
    String zone = ""; // TODO: Update field(s).

    // Project ID of Autoscaler resource.
    String project = ""; // TODO: Update field(s).

    Autoscaler service = createService();
    List request = service.autoscalers().list(zone, project);
    AutoscalerListResponse response;
    do {
      response = request.execute();
      if (response.getItems() == null) {
        continue;
      }
      for (com.google.api.services.autoscaler.v1beta2.model.Autoscaler item : response.getItems()) {
        System.out.println(item);
      }
    } while (response.getNextPageToken() != null);
  }

  public Autoscaler createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Autoscaler.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Autoscaler API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/autoscaler
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/autoscaler/v1beta2/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.autoscaler.v1beta2.Autoscaler;
import com.google.api.services.autoscaler.v1beta2.Autoscaler.Autoscalers.Patch;
import com.google.api.services.autoscaler.v1beta2.model.Operation;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class AutoscalerExample {
  public void run() throws IOException, GeneralSecurityException {
    // TODO: Assign desired fields.
    com.google.api.services.autoscaler.v1beta2.model.Autoscaler requestBody = new com.google.api.services.autoscaler.v1beta2.model.Autoscaler();

    // Name of the Autoscaler resource.
    String autoscaler = ""; // TODO: Update field(s).

    // Zone name of Autoscaler resource.
    String zone = ""; // TODO: Update field(s).

    // Project ID of Autoscaler resource.
    String project = ""; // TODO: Update field(s).

    Autoscaler service = createService();
    Patch request = service.autoscalers().patch(autoscaler, zone, project, requestBody);
    Operation response = request.execute();
    System.out.println(response);
  }

  public Autoscaler createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Autoscaler.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Autoscaler API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/autoscaler
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/autoscaler/v1beta2/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.autoscaler.v1beta2.Autoscaler;
import com.google.api.services.autoscaler.v1beta2.Autoscaler.Autoscalers.Update;
import com.google.api.services.autoscaler.v1beta2.model.Operation;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class AutoscalerExample {
  public void run() throws IOException, GeneralSecurityException {
    // TODO: Assign desired fields.
    com.google.api.services.autoscaler.v1beta2.model.Autoscaler requestBody = new com.google.api.services.autoscaler.v1beta2.model.Autoscaler();

    // Name of the Autoscaler resource.
    String autoscaler = ""; // TODO: Update field(s).

    // Zone name of Autoscaler resource.
    String zone = ""; // TODO: Update field(s).

    // Project ID of Autoscaler resource.
    String project = ""; // TODO: Update field(s).

    Autoscaler service = createService();
    Update request = service.autoscalers().update(autoscaler, zone, project, requestBody);
    Operation response = request.execute();
    System.out.println(response);
  }

  public Autoscaler createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Autoscaler.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Autoscaler API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/autoscaler
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/autoscaler/v1beta2/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.autoscaler.v1beta2.Autoscaler;
import com.google.api.services.autoscaler.v1beta2.Autoscaler.ZoneOperations.Delete;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class AutoscalerExample {
  public void run() throws IOException, GeneralSecurityException {

    String zone = ""; // TODO: Update field(s).


    String project = ""; // TODO: Update field(s).


    String operation = ""; // TODO: Update field(s).

    Autoscaler service = createService();
    Delete request = service.zoneOperations().delete(zone, project, operation);
    request.execute();
  }

  public Autoscaler createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Autoscaler.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Autoscaler API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/autoscaler
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/autoscaler/v1beta2/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.autoscaler.v1beta2.Autoscaler;
import com.google.api.services.autoscaler.v1beta2.Autoscaler.ZoneOperations.Get;
import com.google.api.services.autoscaler.v1beta2.model.Operation;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class AutoscalerExample {
  public void run() throws IOException, GeneralSecurityException {

    String zone = ""; // TODO: Update field(s).


    String project = ""; // TODO: Update field(s).


    String operation = ""; // TODO: Update field(s).

    Autoscaler service = createService();
    Get request = service.zoneOperations().get(zone, project, operation);
    Operation response = request.execute();
    System.out.println(response);
  }

  public Autoscaler createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Autoscaler.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Autoscaler API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/autoscaler
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/autoscaler/v1beta2/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.autoscaler.v1beta2.Autoscaler;
import com.google.api.services.autoscaler.v1beta2.Autoscaler.ZoneOperations.List;
import com.google.api.services.autoscaler.v1beta2.model.Operation;
import com.google.api.services.autoscaler.v1beta2.model.OperationList;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class AutoscalerExample {
  public void run() throws IOException, GeneralSecurityException {

    String zone = ""; // TODO: Update field(s).


    String project = ""; // TODO: Update field(s).

    Autoscaler service = createService();
    List request = service.zoneOperations().list(zone, project);
    OperationList response;
    do {
      response = request.execute();
      if (response.getItems() == null) {
        continue;
      }
      for (Operation item : response.getItems()) {
        System.out.println(item);
      }
    } while (response.getNextPageToken() != null);
  }

  public Autoscaler createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Autoscaler.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
/**
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Autoscaler API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/autoscaler
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/autoscaler/v1beta2/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.autoscaler.v1beta2.Autoscaler;
import com.google.api.services.autoscaler.v1beta2.Autoscaler.Zones.List;
import com.google.api.services.autoscaler.v1beta2.model.Zone;
import com.google.api.services.autoscaler.v1beta2.model.ZoneList;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;

public class AutoscalerExample {
  public void run() throws IOException, GeneralSecurityException {

    String project = ""; // TODO: Update field(s).

    Autoscaler service = createService();
    List request = service.zones().list(project);
    ZoneList response;
    do {
      response = request.execute();
      if (response.getItems() == null) {
        continue;
      }
      for (Zone item : response.getItems()) {
        System.out.println(item);
      }
    } while (response.getNextPageToken() != null);
  }

  public Autoscaler createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Autoscaler.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new Main().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
  }
}
