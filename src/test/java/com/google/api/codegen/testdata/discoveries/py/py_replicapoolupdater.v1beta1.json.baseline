
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'cancel' method:

# * The Google Developers Console project name.
project = ''

# * The name of the zone in which the update's target resides.
zone = ''

# * The name of the update.
rollingUpdate = ''

request = service.rollingUpdates().cancel(project=project, zone=zone, rollingUpdate=rollingUpdate)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'get' method:

# * The Google Developers Console project name.
project = ''

# * The name of the zone in which the update's target resides.
zone = ''

# * The name of the update.
rollingUpdate = ''

request = service.rollingUpdates().get(project=project, zone=zone, rollingUpdate=rollingUpdate)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'insert' method:

# * The Google Developers Console project name.
project = ''

# * The name of the zone in which the update's target resides.
zone = ''

rolling_update_body = {
# TODO: Add desired entries of the 'rolling_update_body' dict
}

request = service.rollingUpdates().insert(project=project, zone=zone, body=rolling_update_body)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'list' method:

# * The Google Developers Console project name.
project = ''

# * The name of the zone in which the update's target resides.
zone = ''

rollingUpdates = service.rollingUpdates()
request = rollingUpdates.list(project=project, zone=zone)
while request is not None:
    response = request.execute()

    for rolling_update in response['items']:
        # TODO: Add code here to process each 'rolling_update' resource

    request = rollingUpdates.list_next(previous_request=request, previous_response=response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'listInstanceUpdates' method:

# * The Google Developers Console project name.
project = ''

# * The name of the zone in which the update's target resides.
zone = ''

# * The name of the update.
rollingUpdate = ''

rollingUpdates = service.rollingUpdates()
request = rollingUpdates.listInstanceUpdates(project=project, zone=zone, rollingUpdate=rollingUpdate)
while request is not None:
    response = request.execute()

    for instance_update in response['items']:
        # TODO: Add code here to process each 'instance_update' resource

    request = rollingUpdates.listInstanceUpdates_next(previous_request=request, previous_response=response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'pause' method:

# * The Google Developers Console project name.
project = ''

# * The name of the zone in which the update's target resides.
zone = ''

# * The name of the update.
rollingUpdate = ''

request = service.rollingUpdates().pause(project=project, zone=zone, rollingUpdate=rollingUpdate)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'resume' method:

# * The Google Developers Console project name.
project = ''

# * The name of the zone in which the update's target resides.
zone = ''

# * The name of the update.
rollingUpdate = ''

request = service.rollingUpdates().resume(project=project, zone=zone, rollingUpdate=rollingUpdate)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'rollback' method:

# * The Google Developers Console project name.
project = ''

# * The name of the zone in which the update's target resides.
zone = ''

# * The name of the update.
rollingUpdate = ''

request = service.rollingUpdates().rollback(project=project, zone=zone, rollingUpdate=rollingUpdate)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'get' method:

# * Name of the project scoping this request.
project = ''

# * Name of the zone scoping this request.
zone = ''

# * Name of the operation resource to return.
operation = ''

request = service.zoneOperations().get(project=project, zone=zone, operation=operation)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'list' method:

# * Name of the project scoping this request.
project = ''

# * Name of the zone scoping this request.
zone = ''

zoneOperations = service.zoneOperations()
request = zoneOperations.list(project=project, zone=zone)
while request is not None:
    response = request.execute()

    for operation in response['items']:
        # TODO: Add code here to process each 'operation' resource

    request = zoneOperations.list_next(previous_request=request, previous_response=response)
