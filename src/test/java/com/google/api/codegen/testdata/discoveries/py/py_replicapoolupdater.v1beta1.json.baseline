
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)

# The Google Developers Console project name.
project = 'my-project'  # TODO: Update placeholder value.

# The name of the zone in which the update's target resides.
zone = 'my-zone'  # TODO: Update placeholder value.

# The name of the update.
rolling_update = 'my-rolling-update'  # TODO: Update placeholder value.

request = service.rollingUpdates().cancel(project=project, zone=zone, rollingUpdate=rolling_update)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)

# The Google Developers Console project name.
project = 'my-project'  # TODO: Update placeholder value.

# The name of the zone in which the update's target resides.
zone = 'my-zone'  # TODO: Update placeholder value.

# The name of the update.
rolling_update = 'my-rolling-update'  # TODO: Update placeholder value.

request = service.rollingUpdates().get(project=project, zone=zone, rollingUpdate=rolling_update)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)

# The Google Developers Console project name.
project = 'my-project'  # TODO: Update placeholder value.

# The name of the zone in which the update's target resides.
zone = 'my-zone'  # TODO: Update placeholder value.

rolling_update_body = {
    # TODO: Add desired entries to the request body.
}

request = service.rollingUpdates().insert(project=project, zone=zone, body=rolling_update_body)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)

# The Google Developers Console project name.
project = 'my-project'  # TODO: Update placeholder value.

# The name of the zone in which the update's target resides.
zone = 'my-zone'  # TODO: Update placeholder value.

request = service.rollingUpdates().list(project=project, zone=zone)
while request is not None:
    response = request.execute()

    for rolling_update in response['items']:
        # TODO: Change code below to process each `rolling_update` resource:
        pprint(rolling_update)

    request = service.rollingUpdates().list_next(previous_request=request, previous_response=response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)

# The Google Developers Console project name.
project = 'my-project'  # TODO: Update placeholder value.

# The name of the zone in which the update's target resides.
zone = 'my-zone'  # TODO: Update placeholder value.

# The name of the update.
rolling_update = 'my-rolling-update'  # TODO: Update placeholder value.

request = service.rollingUpdates().listInstanceUpdates(project=project, zone=zone, rollingUpdate=rolling_update)
while request is not None:
    response = request.execute()

    for instance_update in response['items']:
        # TODO: Change code below to process each `instance_update` resource:
        pprint(instance_update)

    request = service.rollingUpdates().listInstanceUpdates_next(previous_request=request, previous_response=response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)

# The Google Developers Console project name.
project = 'my-project'  # TODO: Update placeholder value.

# The name of the zone in which the update's target resides.
zone = 'my-zone'  # TODO: Update placeholder value.

# The name of the update.
rolling_update = 'my-rolling-update'  # TODO: Update placeholder value.

request = service.rollingUpdates().pause(project=project, zone=zone, rollingUpdate=rolling_update)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)

# The Google Developers Console project name.
project = 'my-project'  # TODO: Update placeholder value.

# The name of the zone in which the update's target resides.
zone = 'my-zone'  # TODO: Update placeholder value.

# The name of the update.
rolling_update = 'my-rolling-update'  # TODO: Update placeholder value.

request = service.rollingUpdates().resume(project=project, zone=zone, rollingUpdate=rolling_update)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)

# The Google Developers Console project name.
project = 'my-project'  # TODO: Update placeholder value.

# The name of the zone in which the update's target resides.
zone = 'my-zone'  # TODO: Update placeholder value.

# The name of the update.
rolling_update = 'my-rolling-update'  # TODO: Update placeholder value.

request = service.rollingUpdates().rollback(project=project, zone=zone, rollingUpdate=rolling_update)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)

# Name of the project scoping this request.
project = 'my-project'  # TODO: Update placeholder value.

# Name of the zone scoping this request.
zone = 'my-zone'  # TODO: Update placeholder value.

# Name of the operation resource to return.
operation = 'my-operation'  # TODO: Update placeholder value.

request = service.zoneOperations().get(project=project, zone=zone, operation=operation)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Instance Group Updater API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/replicapoolupdater
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('replicapoolupdater', 'v1beta1', credentials=credentials)

# Name of the project scoping this request.
project = 'my-project'  # TODO: Update placeholder value.

# Name of the zone scoping this request.
zone = 'my-zone'  # TODO: Update placeholder value.

request = service.zoneOperations().list(project=project, zone=zone)
while request is not None:
    response = request.execute()

    for operation in response['items']:
        # TODO: Change code below to process each `operation` resource:
        pprint(operation)

    request = service.zoneOperations().list_next(previous_request=request, previous_response=response)
