
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'get_account' method:

# * The account id
id = 0

# Perform the call
response = service.get_account(id)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])



# Perform the call
response = service.list_accounts()
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'patch_account' method:

# * The account id
id = 0

account_object = Google::Apis::AdexchangebuyerV1_4::Account.new


# Perform the call
response = service.patch_account(id, account_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'update_account' method:

# * The account id
id = 0

account_object = Google::Apis::AdexchangebuyerV1_4::Account.new


# Perform the call
response = service.update_account(id, account_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'get_billing_info' method:

# * The account id.
account_id = 0

# Perform the call
response = service.get_billing_info(account_id)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])



# Perform the call
response = service.list_billing_infos()
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'get_budget' method:

# * The account id to get the budget information for.
account_id = ''

# * The billing id to get the budget information for.
billing_id = ''

# Perform the call
response = service.get_budget(account_id, billing_id)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'patch_budget' method:

# * The account id associated with the budget being updated.
account_id = ''

# * The billing id associated with the budget being updated.
billing_id = ''

budget_object = Google::Apis::AdexchangebuyerV1_4::Budget.new


# Perform the call
response = service.patch_budget(account_id, billing_id, budget_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'update_budget' method:

# * The account id associated with the budget being updated.
account_id = ''

# * The billing id associated with the budget being updated.
billing_id = ''

budget_object = Google::Apis::AdexchangebuyerV1_4::Budget.new


# Perform the call
response = service.update_budget(account_id, billing_id, budget_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'add_creative_deal' method:

# * The id for the account that will serve this creative.
account_id = 0

# * The buyer-specific id for this creative.
buyer_creative_id = ''

# * The id of the deal id to associate with this creative.
deal_id = ''

# Perform the call
service.add_creative_deal(account_id, buyer_creative_id, deal_id)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'get_creative' method:

# * The id for the account that will serve this creative.
account_id = 0

# * The buyer-specific id for this creative.
buyer_creative_id = ''

# Perform the call
response = service.get_creative(account_id, buyer_creative_id)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])



creative_object = Google::Apis::AdexchangebuyerV1_4::Creative.new


# Perform the call
response = service.insert_creative(creative_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])



# Perform the call
result_list = service.fetch_all(items: :items) { |token|
  service.list_creatives(, page_token: token)
}
result_list.each { |element|
  # doThingsWith(element)
}
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'remove_creative_deal' method:

# * The id for the account that will serve this creative.
account_id = 0

# * The buyer-specific id for this creative.
buyer_creative_id = ''

# * The id of the deal id to disassociate with this creative.
deal_id = ''

# Perform the call
service.remove_creative_deal(account_id, buyer_creative_id, deal_id)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'delete_marketplacedeal_order_deals' method:

# * The proposalId to delete deals from.
proposal_id = ''

delete_order_deals_request_object = Google::Apis::AdexchangebuyerV1_4::DeleteOrderDealsRequest.new


# Perform the call
response = service.delete_marketplacedeal_order_deals(proposal_id, delete_order_deals_request_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'insert_marketplacedeal' method:

# * proposalId for which deals need to be added.
proposal_id = ''

add_order_deals_request_object = Google::Apis::AdexchangebuyerV1_4::AddOrderDealsRequest.new


# Perform the call
response = service.insert_marketplacedeal(proposal_id, add_order_deals_request_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'list_marketplacedeals' method:

# * The proposalId to get deals for. To search across proposals specify order_id = '-' as part of the
#   URL.
proposal_id = ''

# Perform the call
response = service.list_marketplacedeals(proposal_id)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'update_marketplacedeal' method:

# * The proposalId to edit deals on.
proposal_id = ''

edit_all_order_deals_request_object = Google::Apis::AdexchangebuyerV1_4::EditAllOrderDealsRequest.new


# Perform the call
response = service.update_marketplacedeal(proposal_id, edit_all_order_deals_request_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'insert_marketplacenote' method:

# * The proposalId to add notes for.
proposal_id = ''

add_order_notes_request_object = Google::Apis::AdexchangebuyerV1_4::AddOrderNotesRequest.new


# Perform the call
response = service.insert_marketplacenote(proposal_id, add_order_notes_request_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'list_marketplacenotes' method:

# * The proposalId to get notes for.
proposal_id = ''

# Perform the call
response = service.list_marketplacenotes(proposal_id)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'update_marketplace_private_auction_proposal' method:

# * The private auction id to be updated.
private_auction_id = ''

update_private_auction_proposal_request_object = Google::Apis::AdexchangebuyerV1_4::UpdatePrivateAuctionProposalRequest.new


# Perform the call
service.update_marketplace_private_auction_proposal(private_auction_id, update_private_auction_proposal_request_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'list_performance_reports' method:

# * The account id to get the reports.
account_id = ''

# * The end time of the report in ISO 8601 timestamp format using UTC.
end_date_time = ''

# * The start time of the report in ISO 8601 timestamp format using UTC.
start_date_time = ''

# Perform the call
response = service.list_performance_reports(account_id, end_date_time, start_date_time)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'delete_pretargeting_config' method:

# * The account id to delete the pretargeting config for.
account_id = ''

# * The specific id of the configuration to delete.
config_id = ''

# Perform the call
service.delete_pretargeting_config(account_id, config_id)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'get_pretargeting_config' method:

# * The account id to get the pretargeting config for.
account_id = ''

# * The specific id of the configuration to retrieve.
config_id = ''

# Perform the call
response = service.get_pretargeting_config(account_id, config_id)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'insert_pretargeting_config' method:

# * The account id to insert the pretargeting config for.
account_id = ''

pretargeting_config_object = Google::Apis::AdexchangebuyerV1_4::PretargetingConfig.new


# Perform the call
response = service.insert_pretargeting_config(account_id, pretargeting_config_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'list_pretargeting_configs' method:

# * The account id to get the pretargeting configs for.
account_id = ''

# Perform the call
response = service.list_pretargeting_configs(account_id)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'patch_pretargeting_config' method:

# * The account id to update the pretargeting config for.
account_id = ''

# * The specific id of the configuration to update.
config_id = ''

pretargeting_config_object = Google::Apis::AdexchangebuyerV1_4::PretargetingConfig.new


# Perform the call
response = service.patch_pretargeting_config(account_id, config_id, pretargeting_config_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'update_pretargeting_config' method:

# * The account id to update the pretargeting config for.
account_id = ''

# * The specific id of the configuration to update.
config_id = ''

pretargeting_config_object = Google::Apis::AdexchangebuyerV1_4::PretargetingConfig.new


# Perform the call
response = service.update_pretargeting_config(account_id, config_id, pretargeting_config_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'get_product' method:

# * The id for the product to get the head revision for.
product_id = ''

# Perform the call
response = service.get_product(product_id)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])



# Perform the call
response = service.search_products()
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'get_proposal' method:

# * Id of the proposal to retrieve.
proposal_id = ''

# Perform the call
response = service.get_proposal(proposal_id)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])



create_orders_request_object = Google::Apis::AdexchangebuyerV1_4::CreateOrdersRequest.new


# Perform the call
response = service.insert_proposal(create_orders_request_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'patch_proposal' method:

# * The proposal id to update.
proposal_id = ''

# * The last known revision number to update. If the head revision in the marketplace database has
#   since changed, an error will be thrown. The caller should then fetch the latest proposal at head
#   revision and retry the update at that revision.
revision_number = ''

# * The proposed action to take on the proposal.
update_action = ''

proposal_object = Google::Apis::AdexchangebuyerV1_4::Proposal.new


# Perform the call
response = service.patch_proposal(proposal_id, revision_number, update_action, proposal_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])



# Perform the call
response = service.search_proposals()
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'proposal_setup_complete' method:

# * The proposal id for which the setup is complete
proposal_id = ''

# Perform the call
service.proposal_setup_complete(proposal_id)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'update_proposal' method:

# * The proposal id to update.
proposal_id = ''

# * The last known revision number to update. If the head revision in the marketplace database has
#   since changed, an error will be thrown. The caller should then fetch the latest proposal at head
#   revision and retry the update at that revision.
revision_number = ''

# * The proposed action to take on the proposal.
update_action = ''

proposal_object = Google::Apis::AdexchangebuyerV1_4::Proposal.new


# Perform the call
response = service.update_proposal(proposal_id, revision_number, update_action, proposal_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Ad Exchange Buyer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/adexchangebuyer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/adexchangebuyer_v1_4'

service = Google::Apis::AdexchangebuyerV1_4::AdexchangebuyerService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'list_pub_profiles' method:

# * The accountId of the publisher to get profiles for.
account_id = 0

# Perform the call
response = service.list_pub_profiles(account_id)
