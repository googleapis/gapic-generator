
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the dataset being deleted
project_id = ''  # TODO: Update placeholder value.

# Dataset ID of dataset being deleted
dataset_id = ''  # TODO: Update placeholder value.

service.delete_dataset(project_id, dataset_id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the requested dataset
project_id = ''  # TODO: Update placeholder value.

# Dataset ID of the requested dataset
dataset_id = ''  # TODO: Update placeholder value.

response = service.get_dataset(project_id, dataset_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the new dataset
project_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::BigqueryV2::Dataset.new

response = service.insert_dataset(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the datasets to be listed
project_id = ''  # TODO: Update placeholder value.

datasets = service.fetch_all(items: :datasets) do |token|
  service.list_datasets(project_id, page_token: token)
end

datasets.each do |dataset|
  # TODO: Change code below to process each `dataset` resource:
  puts JSON.pretty_generate(dataset)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the dataset being updated
project_id = ''  # TODO: Update placeholder value.

# Dataset ID of the dataset being updated
dataset_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# fields will be changed:
request_body = Google::Apis::BigqueryV2::Dataset.new

response = service.patch_dataset(project_id, dataset_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the dataset being updated
project_id = ''  # TODO: Update placeholder value.

# Dataset ID of the dataset being updated
dataset_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::BigqueryV2::Dataset.new

response = service.update_dataset(project_id, dataset_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# [Required] Project ID of the job to cancel
project_id = ''  # TODO: Update placeholder value.

# [Required] Job ID of the job to cancel
job_id = ''  # TODO: Update placeholder value.

response = service.cancel_job(project_id, job_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# [Required] Project ID of the requested job
project_id = ''  # TODO: Update placeholder value.

# [Required] Job ID of the requested job
job_id = ''  # TODO: Update placeholder value.

response = service.get_job(project_id, job_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# [Required] Project ID of the query job
project_id = ''  # TODO: Update placeholder value.

# [Required] Job ID of the query job
job_id = ''  # TODO: Update placeholder value.

response = service.get_job_query_results(project_id, job_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the project that will be billed for the job
project_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::BigqueryV2::Job.new

# TODO: Add desired media content for upload. For more information, see
# https://github.com/google/google-api-ruby-client#basic-usage
# https://github.com/google/google-api-ruby-client#media

response = service.insert_job(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the jobs to list
project_id = ''  # TODO: Update placeholder value.

jobs = service.fetch_all(items: :jobs) do |token|
  service.list_jobs(project_id, page_token: token)
end

jobs.each do |job|
  # TODO: Change code below to process each `job` resource:
  puts JSON.pretty_generate(job)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the project billed for the query
project_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::BigqueryV2::QueryRequest.new

response = service.query_job(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

projects = service.fetch_all(items: :projects) do |token|
  service.list_projects(page_token: token)
end

projects.each do |project|
  # TODO: Change code below to process each `project` resource:
  puts JSON.pretty_generate(project)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the destination table.
project_id = ''  # TODO: Update placeholder value.

# Dataset ID of the destination table.
dataset_id = ''  # TODO: Update placeholder value.

# Table ID of the destination table.
table_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::BigqueryV2::InsertAllTableDataRequest.new

response = service.insert_all_table_data(project_id, dataset_id, table_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the table to read
project_id = ''  # TODO: Update placeholder value.

# Dataset ID of the table to read
dataset_id = ''  # TODO: Update placeholder value.

# Table ID of the table to read
table_id = ''  # TODO: Update placeholder value.

response = service.list_table_data(project_id, dataset_id, table_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the table to delete
project_id = ''  # TODO: Update placeholder value.

# Dataset ID of the table to delete
dataset_id = ''  # TODO: Update placeholder value.

# Table ID of the table to delete
table_id = ''  # TODO: Update placeholder value.

service.delete_table(project_id, dataset_id, table_id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the requested table
project_id = ''  # TODO: Update placeholder value.

# Dataset ID of the requested table
dataset_id = ''  # TODO: Update placeholder value.

# Table ID of the requested table
table_id = ''  # TODO: Update placeholder value.

response = service.get_table(project_id, dataset_id, table_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the new table
project_id = ''  # TODO: Update placeholder value.

# Dataset ID of the new table
dataset_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::BigqueryV2::Table.new

response = service.insert_table(project_id, dataset_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the tables to list
project_id = ''  # TODO: Update placeholder value.

# Dataset ID of the tables to list
dataset_id = ''  # TODO: Update placeholder value.

tables = service.fetch_all(items: :tables) do |token|
  service.list_tables(project_id, dataset_id, page_token: token)
end

tables.each do |table|
  # TODO: Change code below to process each `table` resource:
  puts JSON.pretty_generate(table)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the table to update
project_id = ''  # TODO: Update placeholder value.

# Dataset ID of the table to update
dataset_id = ''  # TODO: Update placeholder value.

# Table ID of the table to update
table_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# fields will be changed:
request_body = Google::Apis::BigqueryV2::Table.new

response = service.patch_table(project_id, dataset_id, table_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the BigQuery API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/bigquery
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/bigquery_v2'
require 'json'

service = Google::Apis::BigqueryV2::BigqueryService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Project ID of the table to update
project_id = ''  # TODO: Update placeholder value.

# Dataset ID of the table to update
dataset_id = ''  # TODO: Update placeholder value.

# Table ID of the table to update
table_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::BigqueryV2::Table.new

response = service.update_table(project_id, dataset_id, table_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
