
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Instance Group Updater API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/replicapoolupdater
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/replicapoolupdater_v1beta1'
require 'json'

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::ReplicapoolupdaterV1beta1::ReplicapoolupdaterService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `cancel_rolling_update` method:

# * The Google Developers Console project name.
project = ''

# * The name of the zone in which the update's target resides.
zone = ''

# * The name of the update.
rolling_update = ''


# Perform the call
response = service.cancel_rolling_update(project, zone, rolling_update)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Instance Group Updater API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/replicapoolupdater
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/replicapoolupdater_v1beta1'
require 'json'

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::ReplicapoolupdaterV1beta1::ReplicapoolupdaterService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `get_rolling_update` method:

# * The Google Developers Console project name.
project = ''

# * The name of the zone in which the update's target resides.
zone = ''

# * The name of the update.
rolling_update = ''


# Perform the call
response = service.get_rolling_update(project, zone, rolling_update)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Instance Group Updater API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/replicapoolupdater
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/replicapoolupdater_v1beta1'
require 'json'

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::ReplicapoolupdaterV1beta1::ReplicapoolupdaterService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `insert_rolling_update` method:

# * The Google Developers Console project name.
project = ''

# * The name of the zone in which the update's target resides.
zone = ''


rolling_update_body = Google::Apis::ReplicapoolupdaterV1beta1::RollingUpdate.new
# TODO: Assign values to desired members of the `rolling_update_body` object.


# Perform the call
response = service.insert_rolling_update(project, zone, rolling_update_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Instance Group Updater API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/replicapoolupdater
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/replicapoolupdater_v1beta1'
require 'json'

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::ReplicapoolupdaterV1beta1::ReplicapoolupdaterService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `list_rolling_updates` method:

# * The Google Developers Console project name.
project = ''

# * The name of the zone in which the update's target resides.
zone = ''


# Perform the call
items = service.fetch_all(items: :items) do |token|
  service.list_rolling_updates(project, zone, page_token: token)
end

items.each do |rolling_update|
  # TODO: Change code below to process each `rolling_update` resource:
  puts JSON.pretty_generate(rolling_update)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Instance Group Updater API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/replicapoolupdater
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/replicapoolupdater_v1beta1'
require 'json'

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::ReplicapoolupdaterV1beta1::ReplicapoolupdaterService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `list_instance_updates` method:

# * The Google Developers Console project name.
project = ''

# * The name of the zone in which the update's target resides.
zone = ''

# * The name of the update.
rolling_update = ''


# Perform the call
items = service.fetch_all(items: :items) do |token|
  service.list_instance_updates(project, zone, rolling_update, page_token: token)
end

items.each do |instance_update|
  # TODO: Change code below to process each `instance_update` resource:
  puts JSON.pretty_generate(instance_update)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Instance Group Updater API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/replicapoolupdater
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/replicapoolupdater_v1beta1'
require 'json'

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::ReplicapoolupdaterV1beta1::ReplicapoolupdaterService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `pause_rolling_update` method:

# * The Google Developers Console project name.
project = ''

# * The name of the zone in which the update's target resides.
zone = ''

# * The name of the update.
rolling_update = ''


# Perform the call
response = service.pause_rolling_update(project, zone, rolling_update)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Instance Group Updater API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/replicapoolupdater
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/replicapoolupdater_v1beta1'
require 'json'

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::ReplicapoolupdaterV1beta1::ReplicapoolupdaterService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `resume_rolling_update` method:

# * The Google Developers Console project name.
project = ''

# * The name of the zone in which the update's target resides.
zone = ''

# * The name of the update.
rolling_update = ''


# Perform the call
response = service.resume_rolling_update(project, zone, rolling_update)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Instance Group Updater API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/replicapoolupdater
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/replicapoolupdater_v1beta1'
require 'json'

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::ReplicapoolupdaterV1beta1::ReplicapoolupdaterService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `rollback_rolling_update` method:

# * The Google Developers Console project name.
project = ''

# * The name of the zone in which the update's target resides.
zone = ''

# * The name of the update.
rolling_update = ''


# Perform the call
response = service.rollback_rolling_update(project, zone, rolling_update)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Instance Group Updater API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/replicapoolupdater
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/replicapoolupdater_v1beta1'
require 'json'

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::ReplicapoolupdaterV1beta1::ReplicapoolupdaterService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `get_zone_operation` method:

# * Name of the project scoping this request.
project = ''

# * Name of the zone scoping this request.
zone = ''

# * Name of the operation resource to return.
operation = ''


# Perform the call
response = service.get_zone_operation(project, zone, operation)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Compute Engine Instance Group Updater API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/replicapoolupdater
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/replicapoolupdater_v1beta1'
require 'json'

# Construct the replicapoolupdater service object (version v1beta1) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/ruby/apis/
service = Google::Apis::ReplicapoolupdaterV1beta1::ReplicapoolupdaterService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `list_zone_operations` method:

# * Name of the project scoping this request.
project = ''

# * Name of the zone scoping this request.
zone = ''


# Perform the call
items = service.fetch_all(items: :items) do |token|
  service.list_zone_operations(project, zone, page_token: token)
end

items.each do |operation|
  # TODO: Change code below to process each `operation` resource:
  puts JSON.pretty_generate(operation)
end
