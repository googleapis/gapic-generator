
<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Billing API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/cloudbilling
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Cloudbilling service.
$service = new Google_Service_Cloudbilling($client);
// The resource name of the billing account to retrieve. For example,
// `billingAccounts/012345-567890-ABCDEF`.
$name = 'billingAccounts/{MY-BILLINGACCOUNT}';

$response = $service->billingAccounts->get($name);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Billing API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/cloudbilling
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Cloudbilling service.
$service = new Google_Service_Cloudbilling($client);


$response = $service->billingAccounts->listBillingAccounts();

foreach ($response['billingAccounts'] as $element) {
  // TODO: Add code here to process the element.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Billing API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/cloudbilling
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Cloudbilling service.
$service = new Google_Service_Cloudbilling($client);
// The resource name of the billing account associated with the projects that you want to list. For
// example, `billingAccounts/012345-567890-ABCDEF`.
$name = 'billingAccounts/{MY-BILLINGACCOUNT}';

$response = $service->billingAccounts_projects->listBillingAccountsProjects($name);

foreach ($response['projectBillingInfo'] as $element) {
  // TODO: Add code here to process the element.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Billing API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/cloudbilling
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Cloudbilling service.
$service = new Google_Service_Cloudbilling($client);
// The resource name of the project for which billing information is retrieved. For example,
// `projects/tokyo-rain-123`.
$name = 'projects/{MY-PROJECT}';

$response = $service->projects->getBillingInfo($name);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Billing API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/cloudbilling
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Cloudbilling service.
$service = new Google_Service_Cloudbilling($client);
// The resource name of the project associated with the billing information that you want to update.
// For example, `projects/tokyo-rain-123`.
$name = 'projects/{MY-PROJECT}';

$postBody = new Google_Service_Cloudbilling_ProjectBillingInfo($client);

$response = $service->projects->updateBillingInfo($name, $postBody);

