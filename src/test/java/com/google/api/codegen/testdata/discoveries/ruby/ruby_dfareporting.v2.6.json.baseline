
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Account ID.
summary_account_id = '0'  # TODO: Update placeholder value.

response = service.get_account_active_ad_summary(profile_id, summary_account_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Account permission group ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_account_permission_group(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_account_permission_groups(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Account permission ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_account_permission(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_account_permissions(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# User profile ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_account_user_profile(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::AccountUserProfile.new

response = service.insert_account_user_profile(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

account_user_profiles = service.fetch_all(items: :account_user_profiles) do |token|
  service.list_account_user_profiles(profile_id, page_token: token)
end

account_user_profiles.each do |account_user_profile|
  # TODO: Change code below to process each `account_user_profile` resource:
  puts JSON.pretty_generate(account_user_profile)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# User profile ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::AccountUserProfile.new

response = service.patch_account_user_profile(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::AccountUserProfile.new

response = service.update_account_user_profile(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Account ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_account(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

accounts = service.fetch_all(items: :accounts) do |token|
  service.list_accounts(profile_id, page_token: token)
end

accounts.each do |account|
  # TODO: Change code below to process each `account` resource:
  puts JSON.pretty_generate(account)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Account ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::Account.new

response = service.patch_account(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::Account.new

response = service.update_account(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Ad ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_ad(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::Ad.new

response = service.insert_ad(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

ads = service.fetch_all(items: :ads) do |token|
  service.list_ads(profile_id, page_token: token)
end

ads.each do |ad|
  # TODO: Change code below to process each `ad` resource:
  puts JSON.pretty_generate(ad)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Ad ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::Ad.new

response = service.patch_ad(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::Ad.new

response = service.update_ad(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Advertiser group ID.
id = '0'  # TODO: Update placeholder value.

service.delete_advertiser_group(profile_id, id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Advertiser group ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_advertiser_group(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::AdvertiserGroup.new

response = service.insert_advertiser_group(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

advertiser_groups = service.fetch_all(items: :advertiser_groups) do |token|
  service.list_advertiser_groups(profile_id, page_token: token)
end

advertiser_groups.each do |advertiser_group|
  # TODO: Change code below to process each `advertiser_group` resource:
  puts JSON.pretty_generate(advertiser_group)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Advertiser group ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::AdvertiserGroup.new

response = service.patch_advertiser_group(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::AdvertiserGroup.new

response = service.update_advertiser_group(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Advertiser ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_advertiser(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::Advertiser.new

response = service.insert_advertiser(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

advertisers = service.fetch_all(items: :advertisers) do |token|
  service.list_advertisers(profile_id, page_token: token)
end

advertisers.each do |advertiser|
  # TODO: Change code below to process each `advertiser` resource:
  puts JSON.pretty_generate(advertiser)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Advertiser ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::Advertiser.new

response = service.patch_advertiser(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::Advertiser.new

response = service.update_advertiser(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_browsers(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Campaign ID in this association.
campaign_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::CampaignCreativeAssociation.new

response = service.insert_campaign_creative_association(profile_id, campaign_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Campaign ID in this association.
campaign_id = '0'  # TODO: Update placeholder value.

campaign_creative_associations = service.fetch_all(items: :campaign_creative_associations) do |token|
  service.list_campaign_creative_associations(profile_id, campaign_id, page_token: token)
end

campaign_creative_associations.each do |campaign_creative_association|
  # TODO: Change code below to process each `campaign_creative_association` resource:
  puts JSON.pretty_generate(campaign_creative_association)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Campaign ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_campaign(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Default landing page name for this new campaign. Must be less than 256 characters long.
default_landing_page_name = ''  # TODO: Update placeholder value.

# Default landing page URL for this new campaign.
default_landing_page_url = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::Campaign.new

response = service.insert_campaign(profile_id, default_landing_page_name, default_landing_page_url, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

campaigns = service.fetch_all(items: :campaigns) do |token|
  service.list_campaigns(profile_id, page_token: token)
end

campaigns.each do |campaign|
  # TODO: Change code below to process each `campaign` resource:
  puts JSON.pretty_generate(campaign)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Campaign ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::Campaign.new

response = service.patch_campaign(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::Campaign.new

response = service.update_campaign(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Change log ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_change_log(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

change_logs = service.fetch_all(items: :change_logs) do |token|
  service.list_change_logs(profile_id, page_token: token)
end

change_logs.each do |change_log|
  # TODO: Change code below to process each `change_log` resource:
  puts JSON.pretty_generate(change_log)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_cities(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Connection type ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_connection_type(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_connection_types(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Content category ID.
id = '0'  # TODO: Update placeholder value.

service.delete_content_category(profile_id, id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Content category ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_content_category(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::ContentCategory.new

response = service.insert_content_category(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

content_categories = service.fetch_all(items: :content_categories) do |token|
  service.list_content_categories(profile_id, page_token: token)
end

content_categories.each do |content_category|
  # TODO: Change code below to process each `content_category` resource:
  puts JSON.pretty_generate(content_category)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Content category ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::ContentCategory.new

response = service.patch_content_category(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::ContentCategory.new

response = service.update_content_category(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/ddmconversions'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::ConversionsBatchInsertRequest.new

response = service.batchinsert_conversion(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Country DART ID.
dart_id = '0'  # TODO: Update placeholder value.

response = service.get_country(profile_id, dart_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_countries(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Advertiser ID of this creative. This is a required field.
advertiser_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::CreativeAssetMetadata.new

# TODO: Add desired media content for upload. For more information, see
# https://github.com/google/google-api-ruby-client#basic-usage
# https://github.com/google/google-api-ruby-client#media

response = service.insert_creative_asset(profile_id, advertiser_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Creative field ID for this creative field value.
creative_field_id = '0'  # TODO: Update placeholder value.

# Creative Field Value ID
id = '0'  # TODO: Update placeholder value.

service.delete_creative_field_value(profile_id, creative_field_id, id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Creative field ID for this creative field value.
creative_field_id = '0'  # TODO: Update placeholder value.

# Creative Field Value ID
id = '0'  # TODO: Update placeholder value.

response = service.get_creative_field_value(profile_id, creative_field_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Creative field ID for this creative field value.
creative_field_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::CreativeFieldValue.new

response = service.insert_creative_field_value(profile_id, creative_field_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Creative field ID for this creative field value.
creative_field_id = '0'  # TODO: Update placeholder value.

creative_field_values = service.fetch_all(items: :creative_field_values) do |token|
  service.list_creative_field_values(profile_id, creative_field_id, page_token: token)
end

creative_field_values.each do |creative_field_value|
  # TODO: Change code below to process each `creative_field_value` resource:
  puts JSON.pretty_generate(creative_field_value)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Creative field ID for this creative field value.
creative_field_id = '0'  # TODO: Update placeholder value.

# Creative Field Value ID
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::CreativeFieldValue.new

response = service.patch_creative_field_value(profile_id, creative_field_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Creative field ID for this creative field value.
creative_field_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::CreativeFieldValue.new

response = service.update_creative_field_value(profile_id, creative_field_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Creative Field ID
id = '0'  # TODO: Update placeholder value.

service.delete_creative_field(profile_id, id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Creative Field ID
id = '0'  # TODO: Update placeholder value.

response = service.get_creative_field(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::CreativeField.new

response = service.insert_creative_field(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

creative_fields = service.fetch_all(items: :creative_fields) do |token|
  service.list_creative_fields(profile_id, page_token: token)
end

creative_fields.each do |creative_field|
  # TODO: Change code below to process each `creative_field` resource:
  puts JSON.pretty_generate(creative_field)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Creative Field ID
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::CreativeField.new

response = service.patch_creative_field(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::CreativeField.new

response = service.update_creative_field(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Creative group ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_creative_group(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::CreativeGroup.new

response = service.insert_creative_group(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

creative_groups = service.fetch_all(items: :creative_groups) do |token|
  service.list_creative_groups(profile_id, page_token: token)
end

creative_groups.each do |creative_group|
  # TODO: Change code below to process each `creative_group` resource:
  puts JSON.pretty_generate(creative_group)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Creative group ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::CreativeGroup.new

response = service.patch_creative_group(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::CreativeGroup.new

response = service.update_creative_group(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Creative ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_creative(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::Creative.new

response = service.insert_creative(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

creatives = service.fetch_all(items: :creatives) do |token|
  service.list_creatives(profile_id, page_token: token)
end

creatives.each do |creative|
  # TODO: Change code below to process each `creative` resource:
  puts JSON.pretty_generate(creative)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Creative ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::Creative.new

response = service.patch_creative(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::Creative.new

response = service.update_creative(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfareporting'
service.authorization = nil

# The DFA user profile ID.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::DimensionValueRequest.new

items = service.fetch_all do |token|
  service.query_dimension_value(profile_id, request_body, page_token: token)
end

items.each do |dimension_value|
  # TODO: Change code below to process each `dimension_value` resource:
  puts JSON.pretty_generate(dimension_value)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Directory site contact ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_directory_site_contact(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

directory_site_contacts = service.fetch_all(items: :directory_site_contacts) do |token|
  service.list_directory_site_contacts(profile_id, page_token: token)
end

directory_site_contacts.each do |directory_site_contact|
  # TODO: Change code below to process each `directory_site_contact` resource:
  puts JSON.pretty_generate(directory_site_contact)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Directory site ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_directory_site(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::DirectorySite.new

response = service.insert_directory_site(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

directory_sites = service.fetch_all(items: :directory_sites) do |token|
  service.list_directory_sites(profile_id, page_token: token)
end

directory_sites.each do |directory_site|
  # TODO: Change code below to process each `directory_site` resource:
  puts JSON.pretty_generate(directory_site)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# ID of the object of this dynamic targeting key. This is a required field.
object_id_ = '0'  # TODO: Update placeholder value.

# Name of this dynamic targeting key. This is a required field. Must be less than 256 characters long
# and cannot contain commas. All characters are converted to lowercase.
name = ''  # TODO: Update placeholder value.

# Type of the object of this dynamic targeting key. This is a required field.
object_type = ''  # TODO: Update placeholder value.

service.delete_dynamic_targeting_key(profile_id, object_id_, name, object_type)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::DynamicTargetingKey.new

response = service.insert_dynamic_targeting_key(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_dynamic_targeting_keys(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Event tag ID.
id = '0'  # TODO: Update placeholder value.

service.delete_event_tag(profile_id, id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Event tag ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_event_tag(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::EventTag.new

response = service.insert_event_tag(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_event_tags(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Event tag ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::EventTag.new

response = service.patch_event_tag(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::EventTag.new

response = service.update_event_tag(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfareporting'
service.authorization = nil

# The ID of the report.
report_id = '0'  # TODO: Update placeholder value.

# The ID of the report file.
file_id = '0'  # TODO: Update placeholder value.

# TODO: Specify destination to download media content, if desired. For more information, see
# https://github.com/google/google-api-ruby-client#basic-usage
# https://github.com/google/google-api-ruby-client#media

response = service.get_file(report_id, file_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfareporting'
service.authorization = nil

# The DFA profile ID.
profile_id = '0'  # TODO: Update placeholder value.

items = service.fetch_all do |token|
  service.list_files(profile_id, page_token: token)
end

items.each do |file|
  # TODO: Change code below to process each `file` resource:
  puts JSON.pretty_generate(file)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Floodlight activity ID.
id = '0'  # TODO: Update placeholder value.

service.delete_floodlight_activity(profile_id, id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.generate_floodlight_activity_tag(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Floodlight activity ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_floodlight_activity(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::FloodlightActivity.new

response = service.insert_floodlight_activity(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

floodlight_activities = service.fetch_all(items: :floodlight_activities) do |token|
  service.list_floodlight_activities(profile_id, page_token: token)
end

floodlight_activities.each do |floodlight_activity|
  # TODO: Change code below to process each `floodlight_activity` resource:
  puts JSON.pretty_generate(floodlight_activity)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Floodlight activity ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::FloodlightActivity.new

response = service.patch_floodlight_activity(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::FloodlightActivity.new

response = service.update_floodlight_activity(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Floodlight activity Group ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_floodlight_activity_group(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::FloodlightActivityGroup.new

response = service.insert_floodlight_activity_group(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

floodlight_activity_groups = service.fetch_all(items: :floodlight_activity_groups) do |token|
  service.list_floodlight_activity_groups(profile_id, page_token: token)
end

floodlight_activity_groups.each do |floodlight_activity_group|
  # TODO: Change code below to process each `floodlight_activity_group` resource:
  puts JSON.pretty_generate(floodlight_activity_group)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Floodlight activity Group ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::FloodlightActivityGroup.new

response = service.patch_floodlight_activity_group(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::FloodlightActivityGroup.new

response = service.update_floodlight_activity_group(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Floodlight configuration ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_floodlight_configuration(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_floodlight_configurations(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Floodlight configuration ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::FloodlightConfiguration.new

response = service.patch_floodlight_configuration(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::FloodlightConfiguration.new

response = service.update_floodlight_configuration(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Project ID for order documents.
project_id = '0'  # TODO: Update placeholder value.

# Inventory item ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_inventory_item(profile_id, project_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Project ID for order documents.
project_id = '0'  # TODO: Update placeholder value.

inventory_items = service.fetch_all(items: :inventory_items) do |token|
  service.list_inventory_items(profile_id, project_id, page_token: token)
end

inventory_items.each do |inventory_item|
  # TODO: Change code below to process each `inventory_item` resource:
  puts JSON.pretty_generate(inventory_item)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Landing page campaign ID.
campaign_id = '0'  # TODO: Update placeholder value.

# Landing page ID.
id = '0'  # TODO: Update placeholder value.

service.delete_landing_page(profile_id, campaign_id, id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Landing page campaign ID.
campaign_id = '0'  # TODO: Update placeholder value.

# Landing page ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_landing_page(profile_id, campaign_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Landing page campaign ID.
campaign_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::LandingPage.new

response = service.insert_landing_page(profile_id, campaign_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Landing page campaign ID.
campaign_id = '0'  # TODO: Update placeholder value.

response = service.list_landing_pages(profile_id, campaign_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Landing page campaign ID.
campaign_id = '0'  # TODO: Update placeholder value.

# Landing page ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::LandingPage.new

response = service.patch_landing_page(profile_id, campaign_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Landing page campaign ID.
campaign_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::LandingPage.new

response = service.update_landing_page(profile_id, campaign_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_languages(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_metros(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Mobile carrier ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_mobile_carrier(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_mobile_carriers(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Operating system version ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_operating_system_version(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_operating_system_versions(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Operating system DART ID.
dart_id = '0'  # TODO: Update placeholder value.

response = service.get_operating_system(profile_id, dart_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_operating_systems(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Project ID for order documents.
project_id = '0'  # TODO: Update placeholder value.

# Order document ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_order_document(profile_id, project_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Project ID for order documents.
project_id = '0'  # TODO: Update placeholder value.

order_documents = service.fetch_all(items: :order_documents) do |token|
  service.list_order_documents(profile_id, project_id, page_token: token)
end

order_documents.each do |order_document|
  # TODO: Change code below to process each `order_document` resource:
  puts JSON.pretty_generate(order_document)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Project ID for orders.
project_id = '0'  # TODO: Update placeholder value.

# Order ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_order(profile_id, project_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Project ID for orders.
project_id = '0'  # TODO: Update placeholder value.

orders = service.fetch_all(items: :orders) do |token|
  service.list_orders(profile_id, project_id, page_token: token)
end

orders.each do |order|
  # TODO: Change code below to process each `order` resource:
  puts JSON.pretty_generate(order)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Placement group ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_placement_group(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::PlacementGroup.new

response = service.insert_placement_group(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

placement_groups = service.fetch_all(items: :placement_groups) do |token|
  service.list_placement_groups(profile_id, page_token: token)
end

placement_groups.each do |placement_group|
  # TODO: Change code below to process each `placement_group` resource:
  puts JSON.pretty_generate(placement_group)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Placement group ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::PlacementGroup.new

response = service.patch_placement_group(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::PlacementGroup.new

response = service.update_placement_group(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Placement strategy ID.
id = '0'  # TODO: Update placeholder value.

service.delete_placement_strategy(profile_id, id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Placement strategy ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_placement_strategy(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::PlacementStrategy.new

response = service.insert_placement_strategy(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

placement_strategies = service.fetch_all(items: :placement_strategies) do |token|
  service.list_placement_strategies(profile_id, page_token: token)
end

placement_strategies.each do |placement_strategy|
  # TODO: Change code below to process each `placement_strategy` resource:
  puts JSON.pretty_generate(placement_strategy)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Placement strategy ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::PlacementStrategy.new

response = service.patch_placement_strategy(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::PlacementStrategy.new

response = service.update_placement_strategy(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.generate_placement_tags(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Placement ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_placement(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::Placement.new

response = service.insert_placement(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

placements = service.fetch_all(items: :placements) do |token|
  service.list_placements(profile_id, page_token: token)
end

placements.each do |placement|
  # TODO: Change code below to process each `placement` resource:
  puts JSON.pretty_generate(placement)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Placement ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::Placement.new

response = service.patch_placement(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::Placement.new

response = service.update_placement(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Platform type ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_platform_type(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_platform_types(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Postal code ID.
code = 'my-code'  # TODO: Update placeholder value.

response = service.get_postal_code(profile_id, code)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_postal_codes(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Project ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_project(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

projects = service.fetch_all(items: :projects) do |token|
  service.list_projects(profile_id, page_token: token)
end

projects.each do |project|
  # TODO: Change code below to process each `project` resource:
  puts JSON.pretty_generate(project)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_regions(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Remarketing list ID.
remarketing_list_id = '0'  # TODO: Update placeholder value.

response = service.get_remarketing_list_share(profile_id, remarketing_list_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Remarketing list ID.
remarketing_list_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::RemarketingListShare.new

response = service.patch_remarketing_list_share(profile_id, remarketing_list_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::RemarketingListShare.new

response = service.update_remarketing_list_share(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Remarketing list ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_remarketing_list(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::RemarketingList.new

response = service.insert_remarketing_list(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Select only remarketing lists owned by this advertiser.
advertiser_id = '0'  # TODO: Update placeholder value.

remarketing_lists = service.fetch_all(items: :remarketing_lists) do |token|
  service.list_remarketing_lists(profile_id, advertiser_id, page_token: token)
end

remarketing_lists.each do |remarketing_list|
  # TODO: Change code below to process each `remarketing_list` resource:
  puts JSON.pretty_generate(remarketing_list)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Remarketing list ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::RemarketingList.new

response = service.patch_remarketing_list(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::RemarketingList.new

response = service.update_remarketing_list(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfareporting'
service.authorization = nil

# The DFA user profile ID.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::Report.new

response = service.query_report_compatible_field(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfareporting'
service.authorization = nil

# The DFA user profile ID.
profile_id = '0'  # TODO: Update placeholder value.

# The ID of the report.
report_id = '0'  # TODO: Update placeholder value.

service.delete_report(profile_id, report_id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfareporting'
service.authorization = nil

# The DFA profile ID.
profile_id = '0'  # TODO: Update placeholder value.

# The ID of the report.
report_id = '0'  # TODO: Update placeholder value.

# The ID of the report file.
file_id = '0'  # TODO: Update placeholder value.

# TODO: Specify destination to download media content, if desired. For more information, see
# https://github.com/google/google-api-ruby-client#basic-usage
# https://github.com/google/google-api-ruby-client#media

response = service.get_report_file(profile_id, report_id, file_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfareporting'
service.authorization = nil

# The DFA profile ID.
profile_id = '0'  # TODO: Update placeholder value.

# The ID of the parent report.
report_id = '0'  # TODO: Update placeholder value.

items = service.fetch_all do |token|
  service.list_report_files(profile_id, report_id, page_token: token)
end

items.each do |file|
  # TODO: Change code below to process each `file` resource:
  puts JSON.pretty_generate(file)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfareporting'
service.authorization = nil

# The DFA user profile ID.
profile_id = '0'  # TODO: Update placeholder value.

# The ID of the report.
report_id = '0'  # TODO: Update placeholder value.

response = service.get_report(profile_id, report_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfareporting'
service.authorization = nil

# The DFA user profile ID.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::Report.new

response = service.insert_report(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfareporting'
service.authorization = nil

# The DFA user profile ID.
profile_id = '0'  # TODO: Update placeholder value.

items = service.fetch_all do |token|
  service.list_reports(profile_id, page_token: token)
end

items.each do |report|
  # TODO: Change code below to process each `report` resource:
  puts JSON.pretty_generate(report)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfareporting'
service.authorization = nil

# The DFA user profile ID.
profile_id = '0'  # TODO: Update placeholder value.

# The ID of the report.
report_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::Report.new

response = service.patch_report(profile_id, report_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfareporting'
service.authorization = nil

# The DFA profile ID.
profile_id = '0'  # TODO: Update placeholder value.

# The ID of the report.
report_id = '0'  # TODO: Update placeholder value.

response = service.run_report(profile_id, report_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfareporting'
service.authorization = nil

# The DFA user profile ID.
profile_id = '0'  # TODO: Update placeholder value.

# The ID of the report.
report_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::Report.new

response = service.update_report(profile_id, report_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Site ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_site(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::Site.new

response = service.insert_site(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

sites = service.fetch_all(items: :sites) do |token|
  service.list_sites(profile_id, page_token: token)
end

sites.each do |site|
  # TODO: Change code below to process each `site` resource:
  puts JSON.pretty_generate(site)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Site ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::Site.new

response = service.patch_site(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::Site.new

response = service.update_site(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Size ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_size(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::Size.new

response = service.insert_size(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_sizes(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Subaccount ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_subaccount(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::Subaccount.new

response = service.insert_subaccount(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

subaccounts = service.fetch_all(items: :subaccounts) do |token|
  service.list_subaccounts(profile_id, page_token: token)
end

subaccounts.each do |subaccount|
  # TODO: Change code below to process each `subaccount` resource:
  puts JSON.pretty_generate(subaccount)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Subaccount ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::Subaccount.new

response = service.patch_subaccount(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::Subaccount.new

response = service.update_subaccount(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Remarketing list ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_targetable_remarketing_list(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Select only targetable remarketing lists targetable by these advertisers.
advertiser_id = '0'  # TODO: Update placeholder value.

targetable_remarketing_lists = service.fetch_all(items: :targetable_remarketing_lists) do |token|
  service.list_targetable_remarketing_lists(profile_id, advertiser_id, page_token: token)
end

targetable_remarketing_lists.each do |targetable_remarketing_list|
  # TODO: Change code below to process each `targetable_remarketing_list` resource:
  puts JSON.pretty_generate(targetable_remarketing_list)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Targeting template ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_targeting_template(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::TargetingTemplate.new

response = service.insert_targeting_template(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

targeting_templates = service.fetch_all(items: :targeting_templates) do |token|
  service.list_targeting_templates(profile_id, page_token: token)
end

targeting_templates.each do |targeting_template|
  # TODO: Change code below to process each `targeting_template` resource:
  puts JSON.pretty_generate(targeting_template)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# Targeting template ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::TargetingTemplate.new

response = service.patch_targeting_template(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::TargetingTemplate.new

response = service.update_targeting_template(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using one of the following scopes:
#   'https://www.googleapis.com/auth/dfareporting'
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# The user profile ID.
profile_id = '0'  # TODO: Update placeholder value.

response = service.get_user_profile(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using one of the following scopes:
#   'https://www.googleapis.com/auth/dfareporting'
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

response = service.list_user_profiles()

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# User role permission group ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_user_role_permission_group(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_user_role_permission_groups(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# User role permission ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_user_role_permission(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

response = service.list_user_role_permissions(profile_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# User role ID.
id = '0'  # TODO: Update placeholder value.

service.delete_user_role(profile_id, id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# User role ID.
id = '0'  # TODO: Update placeholder value.

response = service.get_user_role(profile_id, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DfareportingV2_6::UserRole.new

response = service.insert_user_role(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

user_roles = service.fetch_all(items: :user_roles) do |token|
  service.list_user_roles(profile_id, page_token: token)
end

user_roles.each do |user_role|
  # TODO: Change code below to process each `user_role` resource:
  puts JSON.pretty_generate(user_role)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# User role ID.
id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::DfareportingV2_6::UserRole.new

response = service.patch_user_role(profile_id, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the DCM/DFA Reporting And Trafficking API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dfareporting
# 2. Install the Ruby client library by running `gem install google-api-client`

require 'google/apis/dfareporting_v2_6'
require 'json'

service = Google::Apis::DfareportingV2_6::DfareportingService.new

# TODO: Change placeholder below to generate authentication credentials. See
# https://foo.com/bar
#
# Authorize using the following scope:
#   'https://www.googleapis.com/auth/dfatrafficking'
service.authorization = nil

# User profile ID associated with this request.
profile_id = '0'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DfareportingV2_6::UserRole.new

response = service.update_user_role(profile_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
