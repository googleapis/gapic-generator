============== file: library/library_service_api.py ==============
# Copyright 2016 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# EDITING INSTRUCTIONS
# This file was generated from the file
# https://github.com/google/googleapis/blob/master/library.proto,
# and updates to that file get reflected here through a refresh process.
# For the short term, the refresh process will only be runnable by Google engineers.
#
# The only allowed edits are to method and file documentation. A 3-way
# merge preserves those additions if the generated source changes.

"""Accesses the google.example.library.v1 LibraryService API."""

import json
import os
import pkg_resources
import platform

from google.gax import api_callable
from google.gax import config
from google.gax import path_template
import google.gax

from google.example.library.v1 import field_mask_pb2 as v1_field_mask_pb2
from google.example.library.v1 import library_pb2
from google.protobuf import field_mask_pb2 as protobuf_field_mask_pb2


_BundleDesc = google.gax.BundleDescriptor


_PageDesc = google.gax.PageDescriptor


class LibraryServiceApi(object):
    """
    This API represents a simple digital library.  It lets you manage Shelf
    resources and Book resources in the library. It defines the following
    resource model:

    - The API has a collection of ``Shelf``
      resources, named ``shelves/*``

    - Each Shelf has a collection of ``Book``
      resources, named ``shelves/*/books/*``

    Check out `cloud docs! <https://cloud.google.com/library/example/link>`_.
    This is `not a cloud link <http://www.google.com>`_.
    """

    SERVICE_ADDRESS = 'library-example.googleapis.com'
    """The default address of the service."""

    DEFAULT_SERVICE_PORT = 443
    """The default port of the service."""

    _CODE_GEN_NAME_VERSION = 'gapic/0.1.0'

    _GAX_VERSION = pkg_resources.get_distribution('google-gax').version

    _DEFAULT_TIMEOUT = 30

    _PAGE_DESCRIPTORS = {
        'list_shelves': _PageDesc(
            'page_token',
            'next_page_token',
            'shelves'
        ),
        'list_books': _PageDesc(
            'page_token',
            'next_page_token',
            'books'
        ),
        'list_strings': _PageDesc(
            'page_token',
            'next_page_token',
            'strings'
        )
    }

    _BUNDLE_DESCRIPTORS = {
        'publish_series': _BundleDesc(
            'books',
            [
                'edition',
                'shelf.name'
            ],
            subresponse_field='book_names',
        )
    }

    # The scopes needed to make gRPC calls to all of the methods defined in
    # this service
    _ALL_SCOPES = (
        'https://www.googleapis.com/auth/library',
        'https://www.googleapis.com/auth/cloud-platform',
    )

    _SHELF_PATH_TEMPLATE = path_template.PathTemplate(
        'shelves/{shelf}')
    _BOOK_PATH_TEMPLATE = path_template.PathTemplate(
        'shelves/{shelf}/books/{book}')

    @classmethod
    def shelf_path(cls, shelf):
        """Returns a fully-qualified shelf resource name string."""
        return cls._SHELF_PATH_TEMPLATE.render({
            'shelf': shelf,
        })

    @classmethod
    def book_path(cls, shelf, book):
        """Returns a fully-qualified book resource name string."""
        return cls._BOOK_PATH_TEMPLATE.render({
            'shelf': shelf,
            'book': book,
        })

    @classmethod
    def match_shelf_from_shelf_name(cls, shelf_name):
        """Parses the shelf from a shelf resource.

        Args:
          shelf_name (string): A fully-qualified path representing a shelf
            resource.

        Returns:
          A string representing the shelf.
        """
        return cls._SHELF_PATH_TEMPLATE.match(shelf_name).get('shelf')

    @classmethod
    def match_shelf_from_book_name(cls, book_name):
        """Parses the shelf from a book resource.

        Args:
          book_name (string): A fully-qualified path representing a book
            resource.

        Returns:
          A string representing the shelf.
        """
        return cls._BOOK_PATH_TEMPLATE.match(book_name).get('shelf')

    @classmethod
    def match_book_from_book_name(cls, book_name):
        """Parses the book from a book resource.

        Args:
          book_name (string): A fully-qualified path representing a book
            resource.

        Returns:
          A string representing the book.
        """
        return cls._BOOK_PATH_TEMPLATE.match(book_name).get('book')

    def __init__(
            self,
            service_path=SERVICE_ADDRESS,
            port=DEFAULT_SERVICE_PORT,
            channel=None,
            metadata_transformer=None,
            ssl_creds=None,
            scopes=None,
            client_config=None,
            timeout=_DEFAULT_TIMEOUT,
            app_name='gax',
            app_version=_GAX_VERSION):
        """Constructor.

        Args:
          service_path (string): The domain name of the API remote host.
          port (int): The port on which to connect to the remote host.
          channel (:class:`grpc.beta.implementations.Channel`): A ``Channel``
            object through which to make calls.
          ssl_creds (:class:`grpc.beta.implementations.ClientCredentials`):
            A `ClientCredentials` for use with an SSL-enabled channel.
          client_config (dict):
            A dictionary for call options for each method. See
            :func:`google.gax.construct_settings` for the structure of
            this data. Falls back to the default config if not specified
            or the specified config is missing data points.
          metadata_transformer (Callable[[], list]): A function that creates
             the metadata for requests.
          timeout (int): The default timeout, in seconds, for calls made
            through this client
          app_name (string): The codename of the calling service.
          app_version (string): The version of the calling service.

        Returns:
          A LibraryServiceApi object.
        """
        if scopes is None:
            scopes = self._ALL_SCOPES
        if client_config is None:
            client_config = {}
        default_client_config = json.loads(pkg_resources.resource_string(
            __name__, 'library_service_client_config.json'))
        self._defaults = api_callable.construct_settings(
            'google.example.library.v1.LibraryService',
            default_client_config,
            client_config,
            config.STATUS_CODE_NAMES,
            timeout,
            bundle_descriptors=self._BUNDLE_DESCRIPTORS,
            page_descriptors=self._PAGE_DESCRIPTORS)
        goog_api_client = '{}/{} {} gax/{} python/{}'.format(
            app_name,
            app_version,
            self._CODE_GEN_NAME_VERSION,
            self._GAX_VERSION,
            platform.python_version()
        )
        self._headers = [('x-goog-api-client', goog_api_client)]
        self.stub = config.create_stub(
            library_pb2.beta_create_LibraryService_stub,
            service_path,
            port,
            ssl_creds=ssl_creds,
            channel=channel,
            metadata_transformer=metadata_transformer,
            scopes=scopes)

    # Service calls
    def create_shelf(
            self,
            shelf,
            options=None):
        """
        Creates a shelf, and returns the new Shelf.

        Args:
          shelf (:class:`google.example.library.v1.library_pb2.Shelf`): The shelf to create.
          options (:class:`google.gax.CallOptions`): Overrides the default
            settings for this call, e.g, timeout, retries etc.

        Returns:
          A :class:`google.example.library.v1.library_pb2.Shelf` instance.

        Raises:
          :exc:`google.gax.errors.GaxError` if the RPC is aborted.
        """
        req = library_pb2.CreateShelfRequest(
            shelf=shelf)
        settings = self._defaults['create_shelf'].merge(options)
        api_call = api_callable.create_api_call(
            self.stub.CreateShelf, settings=settings)
        return api_call(req, metadata=self._headers)

    def get_shelf(
            self,
            name,
            message=None,
            string_builder=None,
            options=None):
        """
        Gets a shelf.

        Args:
          name (string): The name of the shelf to retrieve.
          message (:class:`google.example.library.v1.library_pb2.SomeMessage`): Field to verify that message-type query parameter gets flattened.
          string_builder (:class:`google.example.library.v1.library_pb2.StringBuilder`)
          options (:class:`google.gax.CallOptions`): Overrides the default
            settings for this call, e.g, timeout, retries etc.

        Returns:
          A :class:`google.example.library.v1.library_pb2.Shelf` instance.

        Raises:
          :exc:`google.gax.errors.GaxError` if the RPC is aborted.
        """
        if message is None:
            message = library_pb2.SomeMessage()
        if string_builder is None:
            string_builder = library_pb2.StringBuilder()
        req = library_pb2.GetShelfRequest(
            name=name,
            message=message,
            string_builder=string_builder)
        settings = self._defaults['get_shelf'].merge(options)
        api_call = api_callable.create_api_call(
            self.stub.GetShelf, settings=settings)
        return api_call(req, metadata=self._headers)

    def list_shelves(
            self,
            options=None):
        """
        Lists shelves.

        Args:
          options (:class:`google.gax.CallOptions`): Overrides the default
            settings for this call, e.g, timeout, retries etc.

        Returns:
          A :class:`google.gax.PageIterator` instance. By default, this
          is an iterable of :class:`google.example.library.v1.library_pb2.Shelf` instances.
          This object can also be configured to iterate over the pages
          of the response through the `CallOptions` parameter.

        Raises:
          :exc:`google.gax.errors.GaxError` if the RPC is aborted.
        """
        req = library_pb2.ListShelvesRequest()
        settings = self._defaults['list_shelves'].merge(options)
        api_call = api_callable.create_api_call(
            self.stub.ListShelves, settings=settings)
        return api_call(req, metadata=self._headers)

    def delete_shelf(
            self,
            name,
            options=None):
        """
        Deletes a shelf.

        Args:
          name (string): The name of the shelf to delete.
          options (:class:`google.gax.CallOptions`): Overrides the default
            settings for this call, e.g, timeout, retries etc.

        Raises:
          :exc:`google.gax.errors.GaxError` if the RPC is aborted.
        """
        req = library_pb2.DeleteShelfRequest(
            name=name)
        settings = self._defaults['delete_shelf'].merge(options)
        api_call = api_callable.create_api_call(
            self.stub.DeleteShelf, settings=settings)
        api_call(req, metadata=self._headers)

    def merge_shelves(
            self,
            name,
            other_shelf_name,
            options=None):
        """
        Merges two shelves by adding all books from the shelf named
        ``other_shelf_name`` to shelf ``name``, and deletes
        ``other_shelf_name``. Returns the updated shelf.

        Args:
          name (string): The name of the shelf we're adding books to.
          other_shelf_name (string): The name of the shelf we're removing books from and deleting.
          options (:class:`google.gax.CallOptions`): Overrides the default
            settings for this call, e.g, timeout, retries etc.

        Returns:
          A :class:`google.example.library.v1.library_pb2.Shelf` instance.

        Raises:
          :exc:`google.gax.errors.GaxError` if the RPC is aborted.
        """
        req = library_pb2.MergeShelvesRequest(
            name=name,
            other_shelf_name=other_shelf_name)
        settings = self._defaults['merge_shelves'].merge(options)
        api_call = api_callable.create_api_call(
            self.stub.MergeShelves, settings=settings)
        return api_call(req, metadata=self._headers)

    def create_book(
            self,
            name,
            book,
            options=None):
        """
        Creates a book.

        Args:
          name (string): The name of the shelf in which the book is created.
          book (:class:`google.example.library.v1.library_pb2.Book`): The book to create.
          options (:class:`google.gax.CallOptions`): Overrides the default
            settings for this call, e.g, timeout, retries etc.

        Returns:
          A :class:`google.example.library.v1.library_pb2.Book` instance.

        Raises:
          :exc:`google.gax.errors.GaxError` if the RPC is aborted.
        """
        req = library_pb2.CreateBookRequest(
            name=name,
            book=book)
        settings = self._defaults['create_book'].merge(options)
        api_call = api_callable.create_api_call(
            self.stub.CreateBook, settings=settings)
        return api_call(req, metadata=self._headers)

    def publish_series(
            self,
            shelf,
            books,
            edition=0,
            options=None):
        """
        Creates a series of books.

        Args:
          shelf (:class:`google.example.library.v1.library_pb2.Shelf`): The shelf in which the series is created.
          books (list[:class:`google.example.library.v1.library_pb2.Book`]): The books to publish in the series.
          edition (int): The edition of the series
          options (:class:`google.gax.CallOptions`): Overrides the default
            settings for this call, e.g, timeout, retries etc.

        Returns:
          A :class:`google.example.library.v1.library_pb2.PublishSeriesResponse` instance.

        Raises:
          :exc:`google.gax.errors.GaxError` if the RPC is aborted.
        """
        req = library_pb2.PublishSeriesRequest(
            shelf=shelf,
            books=books,
            edition=edition)
        settings = self._defaults['publish_series'].merge(options)
        api_call = api_callable.create_api_call(
            self.stub.PublishSeries, settings=settings)
        return api_call(req, metadata=self._headers)

    def get_book(
            self,
            name,
            options=None):
        """
        Gets a book.

        Args:
          name (string): The name of the book to retrieve.
          options (:class:`google.gax.CallOptions`): Overrides the default
            settings for this call, e.g, timeout, retries etc.

        Returns:
          A :class:`google.example.library.v1.library_pb2.Book` instance.

        Raises:
          :exc:`google.gax.errors.GaxError` if the RPC is aborted.
        """
        req = library_pb2.GetBookRequest(
            name=name)
        settings = self._defaults['get_book'].merge(options)
        api_call = api_callable.create_api_call(
            self.stub.GetBook, settings=settings)
        return api_call(req, metadata=self._headers)

    def list_books(
            self,
            name,
            page_size=0,
            filter_='',
            options=None):
        """
        Lists books in a shelf.

        Args:
          name (string): The name of the shelf whose books we'd like to list.
          page_size (int): The maximum number of resources contained in the
            underlying API response. If page streaming is performed per-
            resource, this parameter does not affect the return value. If page
            streaming is performed per-page, this determines the maximum number
            of resources in a page.
          filter (string): To test python built-in wrapping.
          options (:class:`google.gax.CallOptions`): Overrides the default
            settings for this call, e.g, timeout, retries etc.

        Returns:
          A :class:`google.gax.PageIterator` instance. By default, this
          is an iterable of :class:`google.example.library.v1.library_pb2.Book` instances.
          This object can also be configured to iterate over the pages
          of the response through the `CallOptions` parameter.

        Raises:
          :exc:`google.gax.errors.GaxError` if the RPC is aborted.
        """
        req = library_pb2.ListBooksRequest(
            name=name,
            page_size=page_size,
            filter=filter_)
        settings = self._defaults['list_books'].merge(options)
        api_call = api_callable.create_api_call(
            self.stub.ListBooks, settings=settings)
        return api_call(req, metadata=self._headers)

    def delete_book(
            self,
            name,
            options=None):
        """
        Deletes a book.

        Args:
          name (string): The name of the book to delete.
          options (:class:`google.gax.CallOptions`): Overrides the default
            settings for this call, e.g, timeout, retries etc.

        Raises:
          :exc:`google.gax.errors.GaxError` if the RPC is aborted.
        """
        req = library_pb2.DeleteBookRequest(
            name=name)
        settings = self._defaults['delete_book'].merge(options)
        api_call = api_callable.create_api_call(
            self.stub.DeleteBook, settings=settings)
        api_call(req, metadata=self._headers)

    def update_book(
            self,
            name,
            book,
            update_mask=None,
            physical_mask=None,
            options=None):
        """
        Updates a book.

        Args:
          name (string): The name of the book to update.
          book (:class:`google.example.library.v1.library_pb2.Book`): The book to update with.
          update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`): A field mask to apply, rendered as an HTTP parameter.
          physical_mask (:class:`google.example.library.v1.field_mask_pb2.FieldMask`): To test Python import clash resolution.
          options (:class:`google.gax.CallOptions`): Overrides the default
            settings for this call, e.g, timeout, retries etc.

        Returns:
          A :class:`google.example.library.v1.library_pb2.Book` instance.

        Raises:
          :exc:`google.gax.errors.GaxError` if the RPC is aborted.
        """
        if update_mask is None:
            update_mask = protobuf_field_mask_pb2.FieldMask()
        if physical_mask is None:
            physical_mask = v1_field_mask_pb2.FieldMask()
        req = library_pb2.UpdateBookRequest(
            name=name,
            book=book,
            update_mask=update_mask,
            physical_mask=physical_mask)
        settings = self._defaults['update_book'].merge(options)
        api_call = api_callable.create_api_call(
            self.stub.UpdateBook, settings=settings)
        return api_call(req, metadata=self._headers)

    def move_book(
            self,
            name,
            other_shelf_name,
            options=None):
        """
        Moves a book to another shelf, and returns the new book.

        Args:
          name (string): The name of the book to move.
          other_shelf_name (string): The name of the destination shelf.
          options (:class:`google.gax.CallOptions`): Overrides the default
            settings for this call, e.g, timeout, retries etc.

        Returns:
          A :class:`google.example.library.v1.library_pb2.Book` instance.

        Raises:
          :exc:`google.gax.errors.GaxError` if the RPC is aborted.
        """
        req = library_pb2.MoveBookRequest(
            name=name,
            other_shelf_name=other_shelf_name)
        settings = self._defaults['move_book'].merge(options)
        api_call = api_callable.create_api_call(
            self.stub.MoveBook, settings=settings)
        return api_call(req, metadata=self._headers)

    def list_strings(
            self,
            name='',
            page_size=0,
            options=None):
        """
        Lists a primitive resource. To test go page streaming.

        Args:
          name (string)
          page_size (int): The maximum number of resources contained in the
            underlying API response. If page streaming is performed per-
            resource, this parameter does not affect the return value. If page
            streaming is performed per-page, this determines the maximum number
            of resources in a page.
          options (:class:`google.gax.CallOptions`): Overrides the default
            settings for this call, e.g, timeout, retries etc.

        Returns:
          A :class:`google.gax.PageIterator` instance. By default, this
          is an iterable of string instances.
          This object can also be configured to iterate over the pages
          of the response through the `CallOptions` parameter.

        Raises:
          :exc:`google.gax.errors.GaxError` if the RPC is aborted.
        """
        req = library_pb2.ListStringsRequest(
            name=name,
            page_size=page_size)
        settings = self._defaults['list_strings'].merge(options)
        api_call = api_callable.create_api_call(
            self.stub.ListStrings, settings=settings)
        return api_call(req, metadata=self._headers)

    def add_comments(
            self,
            name,
            comments,
            options=None):
        """
        Adds comments to a book

        Args:
          name (string)
          comments (list[:class:`google.example.library.v1.library_pb2.Comment`])
          options (:class:`google.gax.CallOptions`): Overrides the default
            settings for this call, e.g, timeout, retries etc.

        Raises:
          :exc:`google.gax.errors.GaxError` if the RPC is aborted.
        """
        req = library_pb2.AddCommentsRequest(
            name=name,
            comments=comments)
        settings = self._defaults['add_comments'].merge(options)
        api_call = api_callable.create_api_call(
            self.stub.AddComments, settings=settings)
        api_call(req, metadata=self._headers)

============== file: field_mask_pb2.py ==============
# Copyright 2016 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


class FieldMask(object):
    """
    Attributes:
      materials (list[:class:`google.example.library.v1.field_mask_pb2.FieldMask.Material`])

    """
    pass

============== file: google/protobuf/any_pb2.py ==============
# Copyright 2016 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


class Any(object):
    """
    ``Any`` contains an arbitrary serialized message along with a URL
    that describes the type of the serialized message.


    # JSON

    The JSON representation of an ``Any`` value uses the regular
    representation of the deserialized, embedded message, with an
    additional field ``@type`` which contains the type URL. Example:

        package google.profile;
        message Person {
          string first_name = 1;
          string last_name = 2;
        }

        {
          "@type": "type.googleapis.com/google.profile.Person",
          "firstName": <string>,
          "lastName": <string>
        }

    If the embedded message type is well-known and has a custom JSON
    representation, that representation will be embedded adding a field
    ``value`` which holds the custom JSON in addition to the ``@type``
    field. Example (for message ``google.protobuf.Duration``):

        {
          "@type": "type.googleapis.com/google.protobuf.Duration",
          "value": "1.212s"
        }

    Attributes:
      type_url (string): A URL/resource name whose content describes the type of the
        serialized message.

        For URLs which use the schema ``http``, ``https``, or no schema, the
        following restrictions and interpretations apply:

        * If no schema is provided, ``https`` is assumed.
        * The last segment of the URL's path must represent the fully
          qualified name of the type (as in ``path/google.protobuf.Duration``).
        * An HTTP GET on the URL must yield a ``google.protobuf.Type``
          value in binary format, or produce an error.
        * Applications are allowed to cache lookup results based on the
          URL, or have them precompiled into a binary to avoid any
          lookup. Therefore, binary compatibility needs to be preserved
          on changes to types. (Use versioned type names to manage
          breaking changes.)

        Schemas other than ``http``, ``https`` (or the empty schema) might be
        used with implementation specific semantics.
      value (bytes): Must be valid serialized data of the above specified type.

    """
    pass

============== file: google/protobuf/duration_pb2.py ==============
# Copyright 2016 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


class Duration(object):
    """
    A Duration represents a signed, fixed-length span of time represented
    as a count of seconds and fractions of seconds at nanosecond
    resolution. It is independent of any calendar and concepts like "day"
    or "month". It is related to Timestamp in that the difference between
    two Timestamp values is a Duration and it can be added or subtracted
    from a Timestamp. Range is approximately +-10,000 years.

    Example 1: Compute Duration from two Timestamps in pseudo code.

        Timestamp start = ...;
        Timestamp end = ...;
        Duration duration = ...;

        duration.seconds = end.seconds - start.seconds;
        duration.nanos = end.nanos - start.nanos;

        if (duration.seconds < 0 && duration.nanos > 0) {
          duration.seconds += 1;
          duration.nanos -= 1000000000;
        } else if (durations.seconds > 0 && duration.nanos < 0) {
          duration.seconds -= 1;
          duration.nanos += 1000000000;
        }

    Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.

        Timestamp start = ...;
        Duration duration = ...;
        Timestamp end = ...;

        end.seconds = start.seconds + duration.seconds;
        end.nanos = start.nanos + duration.nanos;

        if (end.nanos < 0) {
          end.seconds -= 1;
          end.nanos += 1000000000;
        } else if (end.nanos >= 1000000000) {
          end.seconds += 1;
          end.nanos -= 1000000000;
        }

    Attributes:
      seconds (long): Signed seconds of the span of time. Must be from -315,576,000,000
        to +315,576,000,000 inclusive.
      nanos (int): Signed fractions of a second at nanosecond resolution of the span
        of time. Durations less than one second are represented with a 0
        ``seconds`` field and a positive or negative ``nanos`` field. For durations
        of one second or more, a non-zero value for the ``nanos`` field must be
        of the same sign as the ``seconds`` field. Must be from -999,999,999
        to +999,999,999 inclusive.

    """
    pass

============== file: google/protobuf/field_mask_pb2.py ==============
# Copyright 2016 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


class FieldMask(object):
    """
    ``FieldMask`` represents a set of symbolic field paths, for example:

        paths: "f.a"
        paths: "f.b.d"

    Here ``f`` represents a field in some root message, ``a`` and ``b``
    fields in the message found in ``f``, and ``d`` a field found in the
    message in ``f.b``.

    Field masks are used to specify a subset of fields that should be
    returned by a get operation or modified by an update operation.
    Field masks also have a custom JSON encoding (see below).

    # Field Masks in Projections

    When used in the context of a projection, a response message or
    sub-message is filtered by the API to only contain those fields as
    specified in the mask. For example, if the mask in the previous
    example is applied to a response message as follows:

        f {
          a : 22
          b {
            d : 1
            x : 2
          }
          y : 13
        }
        z: 8

    The result will not contain specific values for fields x,y and z
    (their value will be set to the default, and omitted in proto text
    output):


        f {
          a : 22
          b {
            d : 1
          }
        }

    A repeated field is not allowed except at the last position of a
    field mask.

    If a FieldMask object is not present in a get operation, the
    operation applies to all fields (as if a FieldMask of all fields
    had been specified).

    Note that a field mask does not necessarily applies to the
    top-level response message. In case of a REST get operation, the
    field mask applies directly to the response, but in case of a REST
    list operation, the mask instead applies to each individual message
    in the returned resource list. In case of a REST custom method,
    other definitions may be used. Where the mask applies will be
    clearly documented together with its declaration in the API.  In
    any case, the effect on the returned resource/resources is required
    behavior for APIs.

    # Field Masks in Update Operations

    A field mask in update operations specifies which fields of the
    targeted resource are going to be updated. The API is required
    to only change the values of the fields as specified in the mask
    and leave the others untouched. If a resource is passed in to
    describe the updated values, the API ignores the values of all
    fields not covered by the mask.

    In order to reset a field's value to the default, the field must
    be in the mask and set to the default value in the provided resource.
    Hence, in order to reset all fields of a resource, provide a default
    instance of the resource and set all fields in the mask, or do
    not provide a mask as described below.

    If a field mask is not present on update, the operation applies to
    all fields (as if a field mask of all fields has been specified).
    Note that in the presence of schema evolution, this may mean that
    fields the client does not know and has therefore not filled into
    the request will be reset to their default. If this is unwanted
    behavior, a specific service may require a client to always specify
    a field mask, producing an error if not.

    As with get operations, the location of the resource which
    describes the updated values in the request message depends on the
    operation kind. In any case, the effect of the field mask is
    required to be honored by the API.

    ## Considerations for HTTP REST

    The HTTP kind of an update operation which uses a field mask must
    be set to PATCH instead of PUT in order to satisfy HTTP semantics
    (PUT must only be used for full updates).

    # JSON Encoding of Field Masks

    In JSON, a field mask is encoded as a single string where paths are
    separated by a comma. Fields name in each path are converted
    to/from lower-camel naming conventions.

    As an example, consider the following message declarations:

        message Profile {
          User user = 1;
          Photo photo = 2;
        }
        message User {
          string display_name = 1;
          string address = 2;
        }

    In proto a field mask for ``Profile`` may look as such:

        mask {
          paths: "user.display_name"
          paths: "photo"
        }

    In JSON, the same mask is represented as below:

        {
          mask: "user.displayName,photo"
        }

    Attributes:
      paths (list[string]): The set of field mask paths.

    """
    pass

============== file: google/protobuf/timestamp_pb2.py ==============
# Copyright 2016 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


class Timestamp(object):
    """
    A Timestamp represents a point in time independent of any time zone
    or calendar, represented as seconds and fractions of seconds at
    nanosecond resolution in UTC Epoch time. It is encoded using the
    Proleptic Gregorian Calendar which extends the Gregorian calendar
    backwards to year one. It is encoded assuming all minutes are 60
    seconds long, i.e. leap seconds are "smeared" so that no leap second
    table is needed for interpretation. Range is from
    0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z.
    By restricting to that range, we ensure that we can convert to
    and from  RFC 3339 date strings.
    See `https://www.ietf.org/rfc/rfc3339.txt <https://www.ietf.org/rfc/rfc3339.txt>`_.

    Example 1: Compute Timestamp from POSIX ``time()``.

        Timestamp timestamp;
        timestamp.set_seconds(time(NULL));
        timestamp.set_nanos(0);

    Example 2: Compute Timestamp from POSIX ``gettimeofday()``.

        struct timeval tv;
        gettimeofday(&tv, NULL);

        Timestamp timestamp;
        timestamp.set_seconds(tv.tv_sec);
        timestamp.set_nanos(tv.tv_usec * 1000);

    Example 3: Compute Timestamp from Win32 ``GetSystemTimeAsFileTime()``.

        FILETIME ft;
        GetSystemTimeAsFileTime(&ft);
        UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

        // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
        // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
        Timestamp timestamp;
        timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
        timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

    Example 4: Compute Timestamp from Java ``System.currentTimeMillis()``.

        long millis = System.currentTimeMillis();

        Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
            .setNanos((int) ((millis % 1000) * 1000000)).build();


    Example 5: Compute Timestamp from current time in Python.

        now = time.time()
        seconds = int(now)
        nanos = int((now - seconds) * 10**9)
        timestamp = Timestamp(seconds=seconds, nanos=nanos)

    Attributes:
      seconds (long): Represents seconds of UTC time since Unix epoch
        1970-01-01T00:00:00Z. Must be from from 0001-01-01T00:00:00Z to
        9999-12-31T23:59:59Z inclusive.
      nanos (int): Non-negative fractions of a second at nanosecond resolution. Negative
        second values with fractions must still have non-negative nanos values
        that count forward in time. Must be from 0 to 999,999,999
        inclusive.

    """
    pass

============== file: google/protobuf/wrappers_pb2.py ==============
# Copyright 2016 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


class DoubleValue(object):
    """
    Wrapper message for ``double``.

    The JSON representation for ``DoubleValue`` is JSON number.

    Attributes:
      value (float): The double value.

    """
    pass


class FloatValue(object):
    """
    Wrapper message for ``float``.

    The JSON representation for ``FloatValue`` is JSON number.

    Attributes:
      value (float): The float value.

    """
    pass


class Int64Value(object):
    """
    Wrapper message for ``int64``.

    The JSON representation for ``Int64Value`` is JSON string.

    Attributes:
      value (long): The int64 value.

    """
    pass


class UInt64Value(object):
    """
    Wrapper message for ``uint64``.

    The JSON representation for ``UInt64Value`` is JSON string.

    Attributes:
      value (long): The uint64 value.

    """
    pass


class Int32Value(object):
    """
    Wrapper message for ``int32``.

    The JSON representation for ``Int32Value`` is JSON number.

    Attributes:
      value (int): The int32 value.

    """
    pass


class UInt32Value(object):
    """
    Wrapper message for ``uint32``.

    The JSON representation for ``UInt32Value`` is JSON number.

    Attributes:
      value (int): The uint32 value.

    """
    pass


class BoolValue(object):
    """
    Wrapper message for ``bool``.

    The JSON representation for ``BoolValue`` is JSON ``true`` and ``false``.

    Attributes:
      value (bool): The bool value.

    """
    pass


class StringValue(object):
    """
    Wrapper message for ``string``.

    The JSON representation for ``StringValue`` is JSON string.

    Attributes:
      value (string): The string value.

    """
    pass


class BytesValue(object):
    """
    Wrapper message for ``bytes``.

    The JSON representation for ``BytesValue`` is JSON string.

    Attributes:
      value (bytes): The bytes value.

    """
    pass

============== file: library_pb2.py ==============
# Copyright 2016 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from google.example.library.v1 import field_mask_pb2 as v1_field_mask_pb2
from google.protobuf import any_pb2
from google.protobuf import duration_pb2
from google.protobuf import field_mask_pb2 as protobuf_field_mask_pb2
from google.protobuf import struct_pb2
from google.protobuf import timestamp_pb2
from google.protobuf import wrappers_pb2


class Book(object):
    """
    A single book in the library.

    Attributes:
      name (string): The resource name of the book.
        Book names have the form ``shelves/{shelf_id}/books/{book_id}``.
      author (string): The name of the book author.
      title (string): The title of the book.
      read (bool): Value indicating whether the book has been read.
      rating (:class:`google.example.library.v1.library_pb2.Book.Rating`): For testing enums.
      any_value (:class:`google.protobuf.any_pb2.Any`): For testing all well-known types.
      struct_value (:class:`google.protobuf.struct_pb2.Struct`)
      value_value (:class:`google.protobuf.struct_pb2.Value`)
      list_value_value (:class:`google.protobuf.struct_pb2.ListValue`)
      map_list_value_value (dict[string -> :class:`google.example.library.v1.library_pb2.Book.MapListValueValueEntry`])
      time_value (:class:`google.protobuf.timestamp_pb2.Timestamp`)
      duration_value (:class:`google.protobuf.duration_pb2.Duration`)
      field_mask_value (:class:`google.protobuf.field_mask_pb2.FieldMask`)
      int32_value (:class:`google.protobuf.wrappers_pb2.Int32Value`)
      uint32_value (:class:`google.protobuf.wrappers_pb2.UInt32Value`)
      int64_value (:class:`google.protobuf.wrappers_pb2.Int64Value`)
      uint64_value (:class:`google.protobuf.wrappers_pb2.UInt64Value`)
      float_value (:class:`google.protobuf.wrappers_pb2.FloatValue`)
      double_value (:class:`google.protobuf.wrappers_pb2.DoubleValue`)
      string_value (:class:`google.protobuf.wrappers_pb2.StringValue`)
      bool_value (:class:`google.protobuf.wrappers_pb2.BoolValue`)
      bytes_value (:class:`google.protobuf.wrappers_pb2.BytesValue`)
      map_string_value (dict[int -> :class:`google.example.library.v1.library_pb2.Book.MapStringValueEntry`])
      map_message_value (dict[string -> :class:`google.example.library.v1.library_pb2.Book.MapMessageValueEntry`])

    """
    pass


class SomeMessage(object):
    """
    Attributes:
      field (int)
      field2 (:class:`google.example.library.v1.library_pb2.SomeMessage2`)

    """
    pass


class SomeMessage2(object):
    """
    Attributes:
      field1 (int)

    """
    pass


class Shelf(object):
    """
    A Shelf contains a collection of books with a theme.

    Attributes:
      name (string): The resource name of the shelf.
        Shelf names have the form ``shelves/{shelf_id}``.
      theme (string): The theme of the shelf
      internal_theme (string): Internal theme that is visible to trusted testers only.

    """
    pass


class CreateShelfRequest(object):
    """
    Request message for LibraryService.CreateShelf.

    Attributes:
      shelf (:class:`google.example.library.v1.library_pb2.Shelf`): The shelf to create.

    """
    pass


class GetShelfRequest(object):
    """
    Request message for LibraryService.GetShelf.

    Attributes:
      name (string): The name of the shelf to retrieve.
      message (:class:`google.example.library.v1.library_pb2.SomeMessage`): Field to verify that message-type query parameter gets flattened.
      string_builder (:class:`google.example.library.v1.library_pb2.StringBuilder`)

    """
    pass


class StringBuilder(object):
    """
    Creates a name conflict with java.lang type

    Attributes:
      name (string)

    """
    pass


class ListShelvesRequest(object):
    """
    Request message for LibraryService.ListShelves.

    Attributes:
      page_token (string): A token identifying a page of results the server should return.
        Typically, this is the value of
        ``ListShelvesResponse.next_page_token``
        returned from the previous call to ``ListShelves`` method.

    """
    pass


class ListShelvesResponse(object):
    """
    Request message for LibraryService.ListShelves.

    Attributes:
      shelves (list[:class:`google.example.library.v1.library_pb2.Shelf`]): The list of shelves.
      next_page_token (string): A token to retrieve next page of results.
        Pass this value in the
        ``ListShelvesRequest.page_token``
        field in the subsequent call to ``ListShelves`` method to retrieve the next
        page of results.

    """
    pass


class DeleteShelfRequest(object):
    """
    Request message for LibraryService.DeleteShelf.

    Attributes:
      name (string): The name of the shelf to delete.

    """
    pass


class MergeShelvesRequest(object):
    """
    Describes the shelf being removed (other_shelf_name) and updated
    (name) in this merge.

    Attributes:
      name (string): The name of the shelf we're adding books to.
      other_shelf_name (string): The name of the shelf we're removing books from and deleting.

    """
    pass


class CreateBookRequest(object):
    """
    Request message for LibraryService.CreateBook.

    Attributes:
      name (string): The name of the shelf in which the book is created.
      book (:class:`google.example.library.v1.library_pb2.Book`): The book to create.

    """
    pass


class PublishSeriesRequest(object):
    """
    Request message for LibraryService.PublishSeries.

    Attributes:
      shelf (:class:`google.example.library.v1.library_pb2.Shelf`): The shelf in which the series is created.
      books (list[:class:`google.example.library.v1.library_pb2.Book`]): The books to publish in the series.
      edition (int): The edition of the series

    """
    pass


class PublishSeriesResponse(object):
    """
    Response message for LibraryService.PublishSeries.

    Attributes:
      book_names (list[string]): The names of the books in the series that were published

    """
    pass


class GetBookRequest(object):
    """
    Request message for LibraryService.GetBook.

    Attributes:
      name (string): The name of the book to retrieve.

    """
    pass


class ListBooksRequest(object):
    """
    Request message for LibraryService.ListBooks.

    Attributes:
      name (string): The name of the shelf whose books we'd like to list.
      page_size (int): Requested page size. Server may return fewer books than requested.
        If unspecified, server will pick an appropriate default.
      page_token (string): A token identifying a page of results the server should return.
        Typically, this is the value of
        ``ListBooksResponse.next_page_token``.
        returned from the previous call to ``ListBooks`` method.
      filter (string): To test python built-in wrapping.

    """
    pass


class ListBooksResponse(object):
    """
    Response message for LibraryService.ListBooks.

    Attributes:
      books (list[:class:`google.example.library.v1.library_pb2.Book`]): The list of books.
      next_page_token (string): A token to retrieve next page of results.
        Pass this value in the
        ``ListBooksRequest.page_token``
        field in the subsequent call to ``ListBooks`` method to retrieve the next
        page of results.

    """
    pass


class UpdateBookRequest(object):
    """
    Request message for LibraryService.UpdateBook.

    Attributes:
      name (string): The name of the book to update.
      book (:class:`google.example.library.v1.library_pb2.Book`): The book to update with.
      update_mask (:class:`google.protobuf.field_mask_pb2.FieldMask`): A field mask to apply, rendered as an HTTP parameter.
      physical_mask (:class:`google.example.library.v1.field_mask_pb2.FieldMask`): To test Python import clash resolution.

    """
    pass


class DeleteBookRequest(object):
    """
    Request message for LibraryService.DeleteBook.

    Attributes:
      name (string): The name of the book to delete.

    """
    pass


class MoveBookRequest(object):
    """
    Describes what book to move (name) and what shelf we're moving it
    to (other_shelf_name).

    Attributes:
      name (string): The name of the book to move.
      other_shelf_name (string): The name of the destination shelf.

    """
    pass


class ListStringsRequest(object):
    """
    Attributes:
      name (string)
      page_size (int)
      page_token (string)

    """
    pass


class ListStringsResponse(object):
    """
    Attributes:
      strings (list[string])
      next_page_token (string)

    """
    pass


class AddCommentsRequest(object):
    """
    Attributes:
      name (string)
      comments (list[:class:`google.example.library.v1.library_pb2.Comment`])

    """
    pass


class Comment(object):
    """
    Attributes:
      user_name (string): won't be filled in by the sample generator
      comment (bytes): should be filled in by the sample generator

    """
    pass

============== file: library_service_client_config.json ==============
{
  "interfaces": {
    "google.example.library.v1.LibraryService": {
      "retry_codes": {
        "retry_codes_def": {
          "idempotent": [
            "DEADLINE_EXCEEDED",
            "UNAVAILABLE"
          ],
          "non_idempotent": []
        }
      },
      "retry_params": {
        "default": {
          "initial_retry_delay_millis": 100,
          "retry_delay_multiplier": 1.2,
          "max_retry_delay_millis": 1000,
          "initial_rpc_timeout_millis": 300,
          "rpc_timeout_multiplier": 1.3,
          "max_rpc_timeout_millis": 3000,
          "total_timeout_millis": 30000
        }
      },
      "methods": {
        "CreateShelf": {
          "retry_codes_name": "non_idempotent",
          "retry_params_name": "default"
        },
        "GetShelf": {
          "retry_codes_name": "idempotent",
          "retry_params_name": "default"
        },
        "ListShelves": {
          "retry_codes_name": "idempotent",
          "retry_params_name": "default"
        },
        "DeleteShelf": {
          "retry_codes_name": "idempotent",
          "retry_params_name": "default"
        },
        "MergeShelves": {
          "retry_codes_name": "non_idempotent",
          "retry_params_name": "default"
        },
        "CreateBook": {
          "retry_codes_name": "non_idempotent",
          "retry_params_name": "default"
        },
        "PublishSeries": {
          "retry_codes_name": "non_idempotent",
          "retry_params_name": "default",
          "bundling": {
            "element_count_threshold": 6,
            "element_count_limit": 7,
            "request_byte_threshold": 100000,
            "request_byte_limit": 150000,
            "delay_threshold_millis": 500
          }
        },
        "GetBook": {
          "retry_codes_name": "idempotent",
          "retry_params_name": "default"
        },
        "ListBooks": {
          "retry_codes_name": "idempotent",
          "retry_params_name": "default"
        },
        "DeleteBook": {
          "retry_codes_name": "idempotent",
          "retry_params_name": "default"
        },
        "UpdateBook": {
          "retry_codes_name": "idempotent",
          "retry_params_name": "default"
        },
        "MoveBook": {
          "retry_codes_name": "non_idempotent",
          "retry_params_name": "default"
        },
        "ListStrings": {
          "retry_codes_name": "idempotent",
          "retry_params_name": "default"
        },
        "AddComments": {
          "retry_codes_name": "non_idempotent",
          "retry_params_name": "default"
        }
      }
    }
  }
}

