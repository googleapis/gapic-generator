============== file: src/main/java/com/google/cloud/datastore/v1/AllocateIdsRequest.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.AllocateIdsRequest;
import com.google.datastore.v1.Key;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class AllocateIdsRequest implements Serializable {
  private final List<Key> keys;

  private AllocateIdsRequest(

    List<Key> keys
    ) {
    this.keys = keys;
  }

  public List<Key> getKeys() {
    return keys;
  }


  public static Builder newBuilder() {
    return new AllocateIdsRequest.Builder();
  }

  public static class Builder {
    private List<Key> keys;

    Builder() {}

    Builder(AllocateIdsRequest source) {
      this.keys = source.keys;
    }

    public List<Key> getKeys() {
      return keys;
    }

    public Builder setKeys(List<Key> keys) {
      this.keys = keys;
      return this;
    }


    public AllocateIdsRequest build() {
      return new AllocateIdsRequest(

        keys
      );
    }
  }

  @Override
  public String toString() {
    return "AllocateIdsRequest{"

    + "keys=" + keys
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof AllocateIdsRequest) {
      AllocateIdsRequest that = (AllocateIdsRequest) o;
      return

      this.keys.equals(that.getKeys())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.keys.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/AllocateIdsResponse.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.AllocateIdsResponse;
import com.google.datastore.v1.Key;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class AllocateIdsResponse implements Serializable {
  private final List<Key> keys;

  private AllocateIdsResponse(

    List<Key> keys
    ) {
    this.keys = keys;
  }

  public List<Key> getKeys() {
    return keys;
  }


  public static Builder newBuilder() {
    return new AllocateIdsResponse.Builder();
  }

  public static class Builder {
    private List<Key> keys;

    Builder() {}

    Builder(AllocateIdsResponse source) {
      this.keys = source.keys;
    }

    public List<Key> getKeys() {
      return keys;
    }

    public Builder setKeys(List<Key> keys) {
      this.keys = keys;
      return this;
    }


    public AllocateIdsResponse build() {
      return new AllocateIdsResponse(

        keys
      );
    }
  }

  @Override
  public String toString() {
    return "AllocateIdsResponse{"

    + "keys=" + keys
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof AllocateIdsResponse) {
      AllocateIdsResponse that = (AllocateIdsResponse) o;
      return

      this.keys.equals(that.getKeys())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.keys.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/ArrayValue.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.ArrayValue;
import com.google.datastore.v1.Value;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class ArrayValue implements Serializable {
  private final List<Value> values;

  private ArrayValue(

    List<Value> values
    ) {
    this.values = values;
  }

  public List<Value> getValues() {
    return values;
  }


  public static Builder newBuilder() {
    return new ArrayValue.Builder();
  }

  public static class Builder {
    private List<Value> values;

    Builder() {}

    Builder(ArrayValue source) {
      this.values = source.values;
    }

    public List<Value> getValues() {
      return values;
    }

    public Builder setValues(List<Value> values) {
      this.values = values;
      return this;
    }


    public ArrayValue build() {
      return new ArrayValue(

        values
      );
    }
  }

  @Override
  public String toString() {
    return "ArrayValue{"

    + "values=" + values
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof ArrayValue) {
      ArrayValue that = (ArrayValue) o;
      return

      this.values.equals(that.getValues())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.values.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/BeginTransactionRequest.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.BeginTransactionRequest;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class BeginTransactionRequest implements Serializable {


  private BeginTransactionRequest(
    ) {
  }



  public static Builder newBuilder() {
    return new BeginTransactionRequest.Builder();
  }

  public static class Builder {

    Builder() {}

    Builder(BeginTransactionRequest source) {
    }


    public BeginTransactionRequest build() {
      return new BeginTransactionRequest(
      );
    }
  }

  @Override
  public String toString() {
    return "BeginTransactionRequest{"
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof BeginTransactionRequest) {
      BeginTransactionRequest that = (BeginTransactionRequest) o;
      return
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/BeginTransactionResponse.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.BeginTransactionResponse;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class BeginTransactionResponse implements Serializable {
  private final String transaction;

  private BeginTransactionResponse(

    String transaction
    ) {
    this.transaction = transaction;
  }

  public String getTransaction() {
    return transaction;
  }


  public static Builder newBuilder() {
    return new BeginTransactionResponse.Builder();
  }

  public static class Builder {
    private String transaction;

    Builder() {}

    Builder(BeginTransactionResponse source) {
      this.transaction = source.transaction;
    }

    public String getTransaction() {
      return transaction;
    }

    public Builder setTransaction(String transaction) {
      this.transaction = transaction;
      return this;
    }


    public BeginTransactionResponse build() {
      return new BeginTransactionResponse(

        transaction
      );
    }
  }

  @Override
  public String toString() {
    return "BeginTransactionResponse{"

    + "transaction=" + transaction
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof BeginTransactionResponse) {
      BeginTransactionResponse that = (BeginTransactionResponse) o;
      return

      this.transaction.equals(that.getTransaction())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.transaction.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/CommitRequest.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.CommitRequest;
import com.google.datastore.v1.Mutation;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class CommitRequest implements Serializable {
  private final String mode;
  private final List<Mutation> mutations;
  private final String transaction;

  private CommitRequest(

    String mode,
    List<Mutation> mutations,
    String transaction
    ) {
    this.mode = mode;
    this.mutations = mutations;
    this.transaction = transaction;
  }

  public String getMode() {
    return mode;
  }

  public List<Mutation> getMutations() {
    return mutations;
  }

  public String getTransaction() {
    return transaction;
  }




  public static Builder newBuilder() {
    return new CommitRequest.Builder();
  }

  public static class Builder {
    private String mode;
    private List<Mutation> mutations;
    private String transaction;

    Builder() {}

    Builder(CommitRequest source) {
      this.mode = source.mode;
      this.mutations = source.mutations;
      this.transaction = source.transaction;
    }

    public String getMode() {
      return mode;
    }

    public Builder setMode(String mode) {
      this.mode = mode;
      return this;
    }

    public List<Mutation> getMutations() {
      return mutations;
    }

    public Builder setMutations(List<Mutation> mutations) {
      this.mutations = mutations;
      return this;
    }

    public String getTransaction() {
      return transaction;
    }

    public Builder setTransaction(String transaction) {
      this.transaction = transaction;
      return this;
    }


    public CommitRequest build() {
      return new CommitRequest(

        mode,
        mutations,
        transaction
      );
    }
  }

  @Override
  public String toString() {
    return "CommitRequest{"

    + "mode=" + mode + ", "
    + "mutations=" + mutations + ", "
    + "transaction=" + transaction
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof CommitRequest) {
      CommitRequest that = (CommitRequest) o;
      return

      this.mode.equals(that.getMode())&&
      this.mutations.equals(that.getMutations())&&
      this.transaction.equals(that.getTransaction())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.mode.hashCode();
    h *= 1000003;
    h ^= this.mutations.hashCode();
    h *= 1000003;
    h ^= this.transaction.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/CommitResponse.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.CommitResponse;
import com.google.datastore.v1.MutationResult;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class CommitResponse implements Serializable {
  private final Integer indexUpdates;
  private final List<MutationResult> mutationResults;

  private CommitResponse(

    Integer indexUpdates,
    List<MutationResult> mutationResults
    ) {
    this.indexUpdates = indexUpdates;
    this.mutationResults = mutationResults;
  }

  public Integer getIndexUpdates() {
    return indexUpdates;
  }

  public List<MutationResult> getMutationResults() {
    return mutationResults;
  }



  public static Builder newBuilder() {
    return new CommitResponse.Builder();
  }

  public static class Builder {
    private Integer indexUpdates;
    private List<MutationResult> mutationResults;

    Builder() {}

    Builder(CommitResponse source) {
      this.indexUpdates = source.indexUpdates;
      this.mutationResults = source.mutationResults;
    }

    public Integer getIndexUpdates() {
      return indexUpdates;
    }

    public Builder setIndexUpdates(Integer indexUpdates) {
      this.indexUpdates = indexUpdates;
      return this;
    }

    public List<MutationResult> getMutationResults() {
      return mutationResults;
    }

    public Builder setMutationResults(List<MutationResult> mutationResults) {
      this.mutationResults = mutationResults;
      return this;
    }


    public CommitResponse build() {
      return new CommitResponse(

        indexUpdates,
        mutationResults
      );
    }
  }

  @Override
  public String toString() {
    return "CommitResponse{"

    + "indexUpdates=" + indexUpdates + ", "
    + "mutationResults=" + mutationResults
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof CommitResponse) {
      CommitResponse that = (CommitResponse) o;
      return

      this.indexUpdates.equals(that.getIndexUpdates())&&
      this.mutationResults.equals(that.getMutationResults())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.indexUpdates.hashCode();
    h *= 1000003;
    h ^= this.mutationResults.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/CompositeFilter.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.CompositeFilter;
import com.google.datastore.v1.Filter;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class CompositeFilter implements Serializable {
  private final List<Filter> filters;
  private final String op;

  private CompositeFilter(

    List<Filter> filters,
    String op
    ) {
    this.filters = filters;
    this.op = op;
  }

  public List<Filter> getFilters() {
    return filters;
  }

  public String getOp() {
    return op;
  }



  public static Builder newBuilder() {
    return new CompositeFilter.Builder();
  }

  public static class Builder {
    private List<Filter> filters;
    private String op;

    Builder() {}

    Builder(CompositeFilter source) {
      this.filters = source.filters;
      this.op = source.op;
    }

    public List<Filter> getFilters() {
      return filters;
    }

    public Builder setFilters(List<Filter> filters) {
      this.filters = filters;
      return this;
    }

    public String getOp() {
      return op;
    }

    public Builder setOp(String op) {
      this.op = op;
      return this;
    }


    public CompositeFilter build() {
      return new CompositeFilter(

        filters,
        op
      );
    }
  }

  @Override
  public String toString() {
    return "CompositeFilter{"

    + "filters=" + filters + ", "
    + "op=" + op
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof CompositeFilter) {
      CompositeFilter that = (CompositeFilter) o;
      return

      this.filters.equals(that.getFilters())&&
      this.op.equals(that.getOp())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.filters.hashCode();
    h *= 1000003;
    h ^= this.op.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/DatastoreClient.java ==============
/*
 *
 */
package com.google.compute.v1;

import com.google.api.core.BetaApi;
import com.google.api.gax.grpc.ChannelAndExecutor;
import com.google.api.gax.grpc.UnaryCallable;
import com.google.api.pathtemplate.PathTemplate;
import io.grpc.ManagedChannel;
import java.io.Closeable;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ScheduledExecutorService;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public class DatastoreClient implements AutoCloseable {
  private final DatastoreSettings settings;
  private final ScheduledExecutorService executor;
  private final ManagedChannel channel;
  private final List<AutoCloseable> closeables = new ArrayList<>();




  /**
   * Constructs an instance of DatastoreClient with default settings.
   */
  public static final DatastoreClient create() throws IOException {
    return create(DatastoreSettings.defaultBuilder().build());
  }

  /**
   * Constructs an instance of DatastoreClient, using the given settings.
   * The channels are created based on the settings passed in, or defaults for any
   * settings that are not set.
   */
  public static final DatastoreClient create(DatastoreSettings settings) throws IOException {
    return new DatastoreClient(settings);
  }

  /**
   * Constructs an instance of DatastoreClient, using the given settings.
   * This is protected so that it easy to make a subclass, but otherwise, the static
   * factory methods should be preferred.
   */
  protected DatastoreClient(DatastoreSettings settings) throws IOException {
    this.settings = settings;
    ChannelAndExecutor channelAndExecutor = settings.getChannelAndExecutor();
    this.executor = channelAndExecutor.getExecutor();
    this.channel = channelAndExecutor.getChannel();



    if (settings.getChannelProvider().shouldAutoClose()) {
      closeables.add(
        new Closeable() {
          @Override
          public void close() throws IOException {
            channel.shutdown();
          }
        });
    }
    if (settings.getExecutorProvider().shouldAutoClose()) {
      closeables.add(
        new Closeable() {
          @Override
          public void close() throws IOException {
            executor.shutdown();
          }
        });
    }
  }

  public final DatastoreSettings getSettings() {
    return settings;
  }



  /**
   * Initiates an orderly shutdown in which preexisting calls continue but new calls are immediately
   * cancelled.
   */
  @Override
  public final void close() throws Exception {
    for (AutoCloseable closeable : closeables) {
      closeable.close();
    }
  }

}
============== file: src/main/java/com/google/cloud/datastore/v1/Entity.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.Entity;
import com.google.datastore.v1.Key;
import com.google.datastore.v1.Value;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class Entity implements Serializable {
  private final Key key;
  private final Value properties;

  private Entity(

    Key key,
    Value properties
    ) {
    this.key = key;
    this.properties = properties;
  }

  public Key getKey() {
    return key;
  }

  public Value getProperties() {
    return properties;
  }



  public static Builder newBuilder() {
    return new Entity.Builder();
  }

  public static class Builder {
    private Key key;
    private Value properties;

    Builder() {}

    Builder(Entity source) {
      this.key = source.key;
      this.properties = source.properties;
    }

    public Key getKey() {
      return key;
    }

    public Builder setKey(Key key) {
      this.key = key;
      return this;
    }

    public Value getProperties() {
      return properties;
    }

    public Builder setProperties(Value properties) {
      this.properties = properties;
      return this;
    }


    public Entity build() {
      return new Entity(

        key,
        properties
      );
    }
  }

  @Override
  public String toString() {
    return "Entity{"

    + "key=" + key + ", "
    + "properties=" + properties
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof Entity) {
      Entity that = (Entity) o;
      return

      this.key.equals(that.getKey())&&
      this.properties.equals(that.getProperties())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.key.hashCode();
    h *= 1000003;
    h ^= this.properties.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/EntityResult.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.Entity;
import com.google.datastore.v1.EntityResult;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class EntityResult implements Serializable {
  private final String cursor;
  private final Entity entity;
  private final String version;

  private EntityResult(

    String cursor,
    Entity entity,
    String version
    ) {
    this.cursor = cursor;
    this.entity = entity;
    this.version = version;
  }

  public String getCursor() {
    return cursor;
  }

  public Entity getEntity() {
    return entity;
  }

  public String getVersion() {
    return version;
  }




  public static Builder newBuilder() {
    return new EntityResult.Builder();
  }

  public static class Builder {
    private String cursor;
    private Entity entity;
    private String version;

    Builder() {}

    Builder(EntityResult source) {
      this.cursor = source.cursor;
      this.entity = source.entity;
      this.version = source.version;
    }

    public String getCursor() {
      return cursor;
    }

    public Builder setCursor(String cursor) {
      this.cursor = cursor;
      return this;
    }

    public Entity getEntity() {
      return entity;
    }

    public Builder setEntity(Entity entity) {
      this.entity = entity;
      return this;
    }

    public String getVersion() {
      return version;
    }

    public Builder setVersion(String version) {
      this.version = version;
      return this;
    }


    public EntityResult build() {
      return new EntityResult(

        cursor,
        entity,
        version
      );
    }
  }

  @Override
  public String toString() {
    return "EntityResult{"

    + "cursor=" + cursor + ", "
    + "entity=" + entity + ", "
    + "version=" + version
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof EntityResult) {
      EntityResult that = (EntityResult) o;
      return

      this.cursor.equals(that.getCursor())&&
      this.entity.equals(that.getEntity())&&
      this.version.equals(that.getVersion())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.cursor.hashCode();
    h *= 1000003;
    h ^= this.entity.hashCode();
    h *= 1000003;
    h ^= this.version.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/Filter.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.CompositeFilter;
import com.google.datastore.v1.Filter;
import com.google.datastore.v1.PropertyFilter;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class Filter implements Serializable {
  private final CompositeFilter compositeFilter;
  private final PropertyFilter propertyFilter;

  private Filter(

    CompositeFilter compositeFilter,
    PropertyFilter propertyFilter
    ) {
    this.compositeFilter = compositeFilter;
    this.propertyFilter = propertyFilter;
  }

  public CompositeFilter getCompositeFilter() {
    return compositeFilter;
  }

  public PropertyFilter getPropertyFilter() {
    return propertyFilter;
  }



  public static Builder newBuilder() {
    return new Filter.Builder();
  }

  public static class Builder {
    private CompositeFilter compositeFilter;
    private PropertyFilter propertyFilter;

    Builder() {}

    Builder(Filter source) {
      this.compositeFilter = source.compositeFilter;
      this.propertyFilter = source.propertyFilter;
    }

    public CompositeFilter getCompositeFilter() {
      return compositeFilter;
    }

    public Builder setCompositeFilter(CompositeFilter compositeFilter) {
      this.compositeFilter = compositeFilter;
      return this;
    }

    public PropertyFilter getPropertyFilter() {
      return propertyFilter;
    }

    public Builder setPropertyFilter(PropertyFilter propertyFilter) {
      this.propertyFilter = propertyFilter;
      return this;
    }


    public Filter build() {
      return new Filter(

        compositeFilter,
        propertyFilter
      );
    }
  }

  @Override
  public String toString() {
    return "Filter{"

    + "compositeFilter=" + compositeFilter + ", "
    + "propertyFilter=" + propertyFilter
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof Filter) {
      Filter that = (Filter) o;
      return

      this.compositeFilter.equals(that.getCompositeFilter())&&
      this.propertyFilter.equals(that.getPropertyFilter())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.compositeFilter.hashCode();
    h *= 1000003;
    h ^= this.propertyFilter.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/GqlQuery.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.GqlQuery;
import com.google.datastore.v1.GqlQueryParameter;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class GqlQuery implements Serializable {
  private final Boolean allowLiterals;
  private final GqlQueryParameter namedBindings;
  private final List<GqlQueryParameter> positionalBindings;
  private final String queryString;

  private GqlQuery(

    Boolean allowLiterals,
    GqlQueryParameter namedBindings,
    List<GqlQueryParameter> positionalBindings,
    String queryString
    ) {
    this.allowLiterals = allowLiterals;
    this.namedBindings = namedBindings;
    this.positionalBindings = positionalBindings;
    this.queryString = queryString;
  }

  public Boolean getAllowLiterals() {
    return allowLiterals;
  }

  public GqlQueryParameter getNamedBindings() {
    return namedBindings;
  }

  public List<GqlQueryParameter> getPositionalBindings() {
    return positionalBindings;
  }

  public String getQueryString() {
    return queryString;
  }





  public static Builder newBuilder() {
    return new GqlQuery.Builder();
  }

  public static class Builder {
    private Boolean allowLiterals;
    private GqlQueryParameter namedBindings;
    private List<GqlQueryParameter> positionalBindings;
    private String queryString;

    Builder() {}

    Builder(GqlQuery source) {
      this.allowLiterals = source.allowLiterals;
      this.namedBindings = source.namedBindings;
      this.positionalBindings = source.positionalBindings;
      this.queryString = source.queryString;
    }

    public Boolean getAllowLiterals() {
      return allowLiterals;
    }

    public Builder setAllowLiterals(Boolean allowLiterals) {
      this.allowLiterals = allowLiterals;
      return this;
    }

    public GqlQueryParameter getNamedBindings() {
      return namedBindings;
    }

    public Builder setNamedBindings(GqlQueryParameter namedBindings) {
      this.namedBindings = namedBindings;
      return this;
    }

    public List<GqlQueryParameter> getPositionalBindings() {
      return positionalBindings;
    }

    public Builder setPositionalBindings(List<GqlQueryParameter> positionalBindings) {
      this.positionalBindings = positionalBindings;
      return this;
    }

    public String getQueryString() {
      return queryString;
    }

    public Builder setQueryString(String queryString) {
      this.queryString = queryString;
      return this;
    }


    public GqlQuery build() {
      return new GqlQuery(

        allowLiterals,
        namedBindings,
        positionalBindings,
        queryString
      );
    }
  }

  @Override
  public String toString() {
    return "GqlQuery{"

    + "allowLiterals=" + allowLiterals + ", "
    + "namedBindings=" + namedBindings + ", "
    + "positionalBindings=" + positionalBindings + ", "
    + "queryString=" + queryString
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof GqlQuery) {
      GqlQuery that = (GqlQuery) o;
      return

      this.allowLiterals.equals(that.getAllowLiterals())&&
      this.namedBindings.equals(that.getNamedBindings())&&
      this.positionalBindings.equals(that.getPositionalBindings())&&
      this.queryString.equals(that.getQueryString())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.allowLiterals.hashCode();
    h *= 1000003;
    h ^= this.namedBindings.hashCode();
    h *= 1000003;
    h ^= this.positionalBindings.hashCode();
    h *= 1000003;
    h ^= this.queryString.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/GqlQueryParameter.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.GqlQueryParameter;
import com.google.datastore.v1.Value;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class GqlQueryParameter implements Serializable {
  private final String cursor;
  private final Value value;

  private GqlQueryParameter(

    String cursor,
    Value value
    ) {
    this.cursor = cursor;
    this.value = value;
  }

  public String getCursor() {
    return cursor;
  }

  public Value getValue() {
    return value;
  }



  public static Builder newBuilder() {
    return new GqlQueryParameter.Builder();
  }

  public static class Builder {
    private String cursor;
    private Value value;

    Builder() {}

    Builder(GqlQueryParameter source) {
      this.cursor = source.cursor;
      this.value = source.value;
    }

    public String getCursor() {
      return cursor;
    }

    public Builder setCursor(String cursor) {
      this.cursor = cursor;
      return this;
    }

    public Value getValue() {
      return value;
    }

    public Builder setValue(Value value) {
      this.value = value;
      return this;
    }


    public GqlQueryParameter build() {
      return new GqlQueryParameter(

        cursor,
        value
      );
    }
  }

  @Override
  public String toString() {
    return "GqlQueryParameter{"

    + "cursor=" + cursor + ", "
    + "value=" + value
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof GqlQueryParameter) {
      GqlQueryParameter that = (GqlQueryParameter) o;
      return

      this.cursor.equals(that.getCursor())&&
      this.value.equals(that.getValue())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.cursor.hashCode();
    h *= 1000003;
    h ^= this.value.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/Key.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.Key;
import com.google.datastore.v1.PartitionId;
import com.google.datastore.v1.PathElement;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class Key implements Serializable {
  private final PartitionId partitionId;
  private final List<PathElement> path;

  private Key(

    PartitionId partitionId,
    List<PathElement> path
    ) {
    this.partitionId = partitionId;
    this.path = path;
  }

  public PartitionId getPartitionId() {
    return partitionId;
  }

  public List<PathElement> getPath() {
    return path;
  }



  public static Builder newBuilder() {
    return new Key.Builder();
  }

  public static class Builder {
    private PartitionId partitionId;
    private List<PathElement> path;

    Builder() {}

    Builder(Key source) {
      this.partitionId = source.partitionId;
      this.path = source.path;
    }

    public PartitionId getPartitionId() {
      return partitionId;
    }

    public Builder setPartitionId(PartitionId partitionId) {
      this.partitionId = partitionId;
      return this;
    }

    public List<PathElement> getPath() {
      return path;
    }

    public Builder setPath(List<PathElement> path) {
      this.path = path;
      return this;
    }


    public Key build() {
      return new Key(

        partitionId,
        path
      );
    }
  }

  @Override
  public String toString() {
    return "Key{"

    + "partitionId=" + partitionId + ", "
    + "path=" + path
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof Key) {
      Key that = (Key) o;
      return

      this.partitionId.equals(that.getPartitionId())&&
      this.path.equals(that.getPath())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.partitionId.hashCode();
    h *= 1000003;
    h ^= this.path.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/KindExpression.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.KindExpression;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class KindExpression implements Serializable {
  private final String name;

  private KindExpression(

    String name
    ) {
    this.name = name;
  }

  public String getName() {
    return name;
  }


  public static Builder newBuilder() {
    return new KindExpression.Builder();
  }

  public static class Builder {
    private String name;

    Builder() {}

    Builder(KindExpression source) {
      this.name = source.name;
    }

    public String getName() {
      return name;
    }

    public Builder setName(String name) {
      this.name = name;
      return this;
    }


    public KindExpression build() {
      return new KindExpression(

        name
      );
    }
  }

  @Override
  public String toString() {
    return "KindExpression{"

    + "name=" + name
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof KindExpression) {
      KindExpression that = (KindExpression) o;
      return

      this.name.equals(that.getName())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.name.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/LatLng.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.LatLng;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class LatLng implements Serializable {
  private final Double latitude;
  private final Double longitude;

  private LatLng(

    Double latitude,
    Double longitude
    ) {
    this.latitude = latitude;
    this.longitude = longitude;
  }

  public Double getLatitude() {
    return latitude;
  }

  public Double getLongitude() {
    return longitude;
  }



  public static Builder newBuilder() {
    return new LatLng.Builder();
  }

  public static class Builder {
    private Double latitude;
    private Double longitude;

    Builder() {}

    Builder(LatLng source) {
      this.latitude = source.latitude;
      this.longitude = source.longitude;
    }

    public Double getLatitude() {
      return latitude;
    }

    public Builder setLatitude(Double latitude) {
      this.latitude = latitude;
      return this;
    }

    public Double getLongitude() {
      return longitude;
    }

    public Builder setLongitude(Double longitude) {
      this.longitude = longitude;
      return this;
    }


    public LatLng build() {
      return new LatLng(

        latitude,
        longitude
      );
    }
  }

  @Override
  public String toString() {
    return "LatLng{"

    + "latitude=" + latitude + ", "
    + "longitude=" + longitude
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof LatLng) {
      LatLng that = (LatLng) o;
      return

      this.latitude.equals(that.getLatitude())&&
      this.longitude.equals(that.getLongitude())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.latitude.hashCode();
    h *= 1000003;
    h ^= this.longitude.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/LookupRequest.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.Key;
import com.google.datastore.v1.LookupRequest;
import com.google.datastore.v1.ReadOptions;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class LookupRequest implements Serializable {
  private final List<Key> keys;
  private final ReadOptions readOptions;

  private LookupRequest(

    List<Key> keys,
    ReadOptions readOptions
    ) {
    this.keys = keys;
    this.readOptions = readOptions;
  }

  public List<Key> getKeys() {
    return keys;
  }

  public ReadOptions getReadOptions() {
    return readOptions;
  }



  public static Builder newBuilder() {
    return new LookupRequest.Builder();
  }

  public static class Builder {
    private List<Key> keys;
    private ReadOptions readOptions;

    Builder() {}

    Builder(LookupRequest source) {
      this.keys = source.keys;
      this.readOptions = source.readOptions;
    }

    public List<Key> getKeys() {
      return keys;
    }

    public Builder setKeys(List<Key> keys) {
      this.keys = keys;
      return this;
    }

    public ReadOptions getReadOptions() {
      return readOptions;
    }

    public Builder setReadOptions(ReadOptions readOptions) {
      this.readOptions = readOptions;
      return this;
    }


    public LookupRequest build() {
      return new LookupRequest(

        keys,
        readOptions
      );
    }
  }

  @Override
  public String toString() {
    return "LookupRequest{"

    + "keys=" + keys + ", "
    + "readOptions=" + readOptions
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof LookupRequest) {
      LookupRequest that = (LookupRequest) o;
      return

      this.keys.equals(that.getKeys())&&
      this.readOptions.equals(that.getReadOptions())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.keys.hashCode();
    h *= 1000003;
    h ^= this.readOptions.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/LookupResponse.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.EntityResult;
import com.google.datastore.v1.Key;
import com.google.datastore.v1.LookupResponse;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class LookupResponse implements Serializable {
  private final List<Key> deferred;
  private final List<EntityResult> found;
  private final List<EntityResult> missing;

  private LookupResponse(

    List<Key> deferred,
    List<EntityResult> found,
    List<EntityResult> missing
    ) {
    this.deferred = deferred;
    this.found = found;
    this.missing = missing;
  }

  public List<Key> getDeferred() {
    return deferred;
  }

  public List<EntityResult> getFound() {
    return found;
  }

  public List<EntityResult> getMissing() {
    return missing;
  }




  public static Builder newBuilder() {
    return new LookupResponse.Builder();
  }

  public static class Builder {
    private List<Key> deferred;
    private List<EntityResult> found;
    private List<EntityResult> missing;

    Builder() {}

    Builder(LookupResponse source) {
      this.deferred = source.deferred;
      this.found = source.found;
      this.missing = source.missing;
    }

    public List<Key> getDeferred() {
      return deferred;
    }

    public Builder setDeferred(List<Key> deferred) {
      this.deferred = deferred;
      return this;
    }

    public List<EntityResult> getFound() {
      return found;
    }

    public Builder setFound(List<EntityResult> found) {
      this.found = found;
      return this;
    }

    public List<EntityResult> getMissing() {
      return missing;
    }

    public Builder setMissing(List<EntityResult> missing) {
      this.missing = missing;
      return this;
    }


    public LookupResponse build() {
      return new LookupResponse(

        deferred,
        found,
        missing
      );
    }
  }

  @Override
  public String toString() {
    return "LookupResponse{"

    + "deferred=" + deferred + ", "
    + "found=" + found + ", "
    + "missing=" + missing
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof LookupResponse) {
      LookupResponse that = (LookupResponse) o;
      return

      this.deferred.equals(that.getDeferred())&&
      this.found.equals(that.getFound())&&
      this.missing.equals(that.getMissing())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.deferred.hashCode();
    h *= 1000003;
    h ^= this.found.hashCode();
    h *= 1000003;
    h ^= this.missing.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/Mutation.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.Entity;
import com.google.datastore.v1.Key;
import com.google.datastore.v1.Mutation;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class Mutation implements Serializable {
  private final String baseVersion;
  private final Key delete;
  private final Entity insert;
  private final Entity update;
  private final Entity upsert;

  private Mutation(

    String baseVersion,
    Key delete,
    Entity insert,
    Entity update,
    Entity upsert
    ) {
    this.baseVersion = baseVersion;
    this.delete = delete;
    this.insert = insert;
    this.update = update;
    this.upsert = upsert;
  }

  public String getBaseVersion() {
    return baseVersion;
  }

  public Key getDelete() {
    return delete;
  }

  public Entity getInsert() {
    return insert;
  }

  public Entity getUpdate() {
    return update;
  }

  public Entity getUpsert() {
    return upsert;
  }






  public static Builder newBuilder() {
    return new Mutation.Builder();
  }

  public static class Builder {
    private String baseVersion;
    private Key delete;
    private Entity insert;
    private Entity update;
    private Entity upsert;

    Builder() {}

    Builder(Mutation source) {
      this.baseVersion = source.baseVersion;
      this.delete = source.delete;
      this.insert = source.insert;
      this.update = source.update;
      this.upsert = source.upsert;
    }

    public String getBaseVersion() {
      return baseVersion;
    }

    public Builder setBaseVersion(String baseVersion) {
      this.baseVersion = baseVersion;
      return this;
    }

    public Key getDelete() {
      return delete;
    }

    public Builder setDelete(Key delete) {
      this.delete = delete;
      return this;
    }

    public Entity getInsert() {
      return insert;
    }

    public Builder setInsert(Entity insert) {
      this.insert = insert;
      return this;
    }

    public Entity getUpdate() {
      return update;
    }

    public Builder setUpdate(Entity update) {
      this.update = update;
      return this;
    }

    public Entity getUpsert() {
      return upsert;
    }

    public Builder setUpsert(Entity upsert) {
      this.upsert = upsert;
      return this;
    }


    public Mutation build() {
      return new Mutation(

        baseVersion,
        delete,
        insert,
        update,
        upsert
      );
    }
  }

  @Override
  public String toString() {
    return "Mutation{"

    + "baseVersion=" + baseVersion + ", "
    + "delete=" + delete + ", "
    + "insert=" + insert + ", "
    + "update=" + update + ", "
    + "upsert=" + upsert
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof Mutation) {
      Mutation that = (Mutation) o;
      return

      this.baseVersion.equals(that.getBaseVersion())&&
      this.delete.equals(that.getDelete())&&
      this.insert.equals(that.getInsert())&&
      this.update.equals(that.getUpdate())&&
      this.upsert.equals(that.getUpsert())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.baseVersion.hashCode();
    h *= 1000003;
    h ^= this.delete.hashCode();
    h *= 1000003;
    h ^= this.insert.hashCode();
    h *= 1000003;
    h ^= this.update.hashCode();
    h *= 1000003;
    h ^= this.upsert.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/MutationResult.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.Key;
import com.google.datastore.v1.MutationResult;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class MutationResult implements Serializable {
  private final Boolean conflictDetected;
  private final Key key;
  private final String version;

  private MutationResult(

    Boolean conflictDetected,
    Key key,
    String version
    ) {
    this.conflictDetected = conflictDetected;
    this.key = key;
    this.version = version;
  }

  public Boolean getConflictDetected() {
    return conflictDetected;
  }

  public Key getKey() {
    return key;
  }

  public String getVersion() {
    return version;
  }




  public static Builder newBuilder() {
    return new MutationResult.Builder();
  }

  public static class Builder {
    private Boolean conflictDetected;
    private Key key;
    private String version;

    Builder() {}

    Builder(MutationResult source) {
      this.conflictDetected = source.conflictDetected;
      this.key = source.key;
      this.version = source.version;
    }

    public Boolean getConflictDetected() {
      return conflictDetected;
    }

    public Builder setConflictDetected(Boolean conflictDetected) {
      this.conflictDetected = conflictDetected;
      return this;
    }

    public Key getKey() {
      return key;
    }

    public Builder setKey(Key key) {
      this.key = key;
      return this;
    }

    public String getVersion() {
      return version;
    }

    public Builder setVersion(String version) {
      this.version = version;
      return this;
    }


    public MutationResult build() {
      return new MutationResult(

        conflictDetected,
        key,
        version
      );
    }
  }

  @Override
  public String toString() {
    return "MutationResult{"

    + "conflictDetected=" + conflictDetected + ", "
    + "key=" + key + ", "
    + "version=" + version
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof MutationResult) {
      MutationResult that = (MutationResult) o;
      return

      this.conflictDetected.equals(that.getConflictDetected())&&
      this.key.equals(that.getKey())&&
      this.version.equals(that.getVersion())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.conflictDetected.hashCode();
    h *= 1000003;
    h ^= this.key.hashCode();
    h *= 1000003;
    h ^= this.version.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/PartitionId.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.PartitionId;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class PartitionId implements Serializable {
  private final String namespaceId;
  private final String projectId;

  private PartitionId(

    String namespaceId,
    String projectId
    ) {
    this.namespaceId = namespaceId;
    this.projectId = projectId;
  }

  public String getNamespaceId() {
    return namespaceId;
  }

  public String getProjectId() {
    return projectId;
  }



  public static Builder newBuilder() {
    return new PartitionId.Builder();
  }

  public static class Builder {
    private String namespaceId;
    private String projectId;

    Builder() {}

    Builder(PartitionId source) {
      this.namespaceId = source.namespaceId;
      this.projectId = source.projectId;
    }

    public String getNamespaceId() {
      return namespaceId;
    }

    public Builder setNamespaceId(String namespaceId) {
      this.namespaceId = namespaceId;
      return this;
    }

    public String getProjectId() {
      return projectId;
    }

    public Builder setProjectId(String projectId) {
      this.projectId = projectId;
      return this;
    }


    public PartitionId build() {
      return new PartitionId(

        namespaceId,
        projectId
      );
    }
  }

  @Override
  public String toString() {
    return "PartitionId{"

    + "namespaceId=" + namespaceId + ", "
    + "projectId=" + projectId
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof PartitionId) {
      PartitionId that = (PartitionId) o;
      return

      this.namespaceId.equals(that.getNamespaceId())&&
      this.projectId.equals(that.getProjectId())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.namespaceId.hashCode();
    h *= 1000003;
    h ^= this.projectId.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/PathElement.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.PathElement;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class PathElement implements Serializable {
  private final String id;
  private final String kind;
  private final String name;

  private PathElement(

    String id,
    String kind,
    String name
    ) {
    this.id = id;
    this.kind = kind;
    this.name = name;
  }

  public String getId() {
    return id;
  }

  public String getKind() {
    return kind;
  }

  public String getName() {
    return name;
  }




  public static Builder newBuilder() {
    return new PathElement.Builder();
  }

  public static class Builder {
    private String id;
    private String kind;
    private String name;

    Builder() {}

    Builder(PathElement source) {
      this.id = source.id;
      this.kind = source.kind;
      this.name = source.name;
    }

    public String getId() {
      return id;
    }

    public Builder setId(String id) {
      this.id = id;
      return this;
    }

    public String getKind() {
      return kind;
    }

    public Builder setKind(String kind) {
      this.kind = kind;
      return this;
    }

    public String getName() {
      return name;
    }

    public Builder setName(String name) {
      this.name = name;
      return this;
    }


    public PathElement build() {
      return new PathElement(

        id,
        kind,
        name
      );
    }
  }

  @Override
  public String toString() {
    return "PathElement{"

    + "id=" + id + ", "
    + "kind=" + kind + ", "
    + "name=" + name
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof PathElement) {
      PathElement that = (PathElement) o;
      return

      this.id.equals(that.getId())&&
      this.kind.equals(that.getKind())&&
      this.name.equals(that.getName())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.id.hashCode();
    h *= 1000003;
    h ^= this.kind.hashCode();
    h *= 1000003;
    h ^= this.name.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/Projection.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.Projection;
import com.google.datastore.v1.PropertyReference;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class Projection implements Serializable {
  private final PropertyReference property;

  private Projection(

    PropertyReference property
    ) {
    this.property = property;
  }

  public PropertyReference getProperty() {
    return property;
  }


  public static Builder newBuilder() {
    return new Projection.Builder();
  }

  public static class Builder {
    private PropertyReference property;

    Builder() {}

    Builder(Projection source) {
      this.property = source.property;
    }

    public PropertyReference getProperty() {
      return property;
    }

    public Builder setProperty(PropertyReference property) {
      this.property = property;
      return this;
    }


    public Projection build() {
      return new Projection(

        property
      );
    }
  }

  @Override
  public String toString() {
    return "Projection{"

    + "property=" + property
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof Projection) {
      Projection that = (Projection) o;
      return

      this.property.equals(that.getProperty())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.property.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/PropertyFilter.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.PropertyFilter;
import com.google.datastore.v1.PropertyReference;
import com.google.datastore.v1.Value;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class PropertyFilter implements Serializable {
  private final String op;
  private final PropertyReference property;
  private final Value value;

  private PropertyFilter(

    String op,
    PropertyReference property,
    Value value
    ) {
    this.op = op;
    this.property = property;
    this.value = value;
  }

  public String getOp() {
    return op;
  }

  public PropertyReference getProperty() {
    return property;
  }

  public Value getValue() {
    return value;
  }




  public static Builder newBuilder() {
    return new PropertyFilter.Builder();
  }

  public static class Builder {
    private String op;
    private PropertyReference property;
    private Value value;

    Builder() {}

    Builder(PropertyFilter source) {
      this.op = source.op;
      this.property = source.property;
      this.value = source.value;
    }

    public String getOp() {
      return op;
    }

    public Builder setOp(String op) {
      this.op = op;
      return this;
    }

    public PropertyReference getProperty() {
      return property;
    }

    public Builder setProperty(PropertyReference property) {
      this.property = property;
      return this;
    }

    public Value getValue() {
      return value;
    }

    public Builder setValue(Value value) {
      this.value = value;
      return this;
    }


    public PropertyFilter build() {
      return new PropertyFilter(

        op,
        property,
        value
      );
    }
  }

  @Override
  public String toString() {
    return "PropertyFilter{"

    + "op=" + op + ", "
    + "property=" + property + ", "
    + "value=" + value
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof PropertyFilter) {
      PropertyFilter that = (PropertyFilter) o;
      return

      this.op.equals(that.getOp())&&
      this.property.equals(that.getProperty())&&
      this.value.equals(that.getValue())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.op.hashCode();
    h *= 1000003;
    h ^= this.property.hashCode();
    h *= 1000003;
    h ^= this.value.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/PropertyOrder.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.PropertyOrder;
import com.google.datastore.v1.PropertyReference;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class PropertyOrder implements Serializable {
  private final String direction;
  private final PropertyReference property;

  private PropertyOrder(

    String direction,
    PropertyReference property
    ) {
    this.direction = direction;
    this.property = property;
  }

  public String getDirection() {
    return direction;
  }

  public PropertyReference getProperty() {
    return property;
  }



  public static Builder newBuilder() {
    return new PropertyOrder.Builder();
  }

  public static class Builder {
    private String direction;
    private PropertyReference property;

    Builder() {}

    Builder(PropertyOrder source) {
      this.direction = source.direction;
      this.property = source.property;
    }

    public String getDirection() {
      return direction;
    }

    public Builder setDirection(String direction) {
      this.direction = direction;
      return this;
    }

    public PropertyReference getProperty() {
      return property;
    }

    public Builder setProperty(PropertyReference property) {
      this.property = property;
      return this;
    }


    public PropertyOrder build() {
      return new PropertyOrder(

        direction,
        property
      );
    }
  }

  @Override
  public String toString() {
    return "PropertyOrder{"

    + "direction=" + direction + ", "
    + "property=" + property
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof PropertyOrder) {
      PropertyOrder that = (PropertyOrder) o;
      return

      this.direction.equals(that.getDirection())&&
      this.property.equals(that.getProperty())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.direction.hashCode();
    h *= 1000003;
    h ^= this.property.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/PropertyReference.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.PropertyReference;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class PropertyReference implements Serializable {
  private final String name;

  private PropertyReference(

    String name
    ) {
    this.name = name;
  }

  public String getName() {
    return name;
  }


  public static Builder newBuilder() {
    return new PropertyReference.Builder();
  }

  public static class Builder {
    private String name;

    Builder() {}

    Builder(PropertyReference source) {
      this.name = source.name;
    }

    public String getName() {
      return name;
    }

    public Builder setName(String name) {
      this.name = name;
      return this;
    }


    public PropertyReference build() {
      return new PropertyReference(

        name
      );
    }
  }

  @Override
  public String toString() {
    return "PropertyReference{"

    + "name=" + name
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof PropertyReference) {
      PropertyReference that = (PropertyReference) o;
      return

      this.name.equals(that.getName())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.name.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/Query.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.Filter;
import com.google.datastore.v1.KindExpression;
import com.google.datastore.v1.Projection;
import com.google.datastore.v1.PropertyOrder;
import com.google.datastore.v1.PropertyReference;
import com.google.datastore.v1.Query;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class Query implements Serializable {
  private final List<PropertyReference> distinctOn;
  private final String endCursor;
  private final Filter filter;
  private final List<KindExpression> kind;
  private final Integer limit;
  private final Integer offset;
  private final List<PropertyOrder> order;
  private final List<Projection> projection;
  private final String startCursor;

  private Query(

    List<PropertyReference> distinctOn,
    String endCursor,
    Filter filter,
    List<KindExpression> kind,
    Integer limit,
    Integer offset,
    List<PropertyOrder> order,
    List<Projection> projection,
    String startCursor
    ) {
    this.distinctOn = distinctOn;
    this.endCursor = endCursor;
    this.filter = filter;
    this.kind = kind;
    this.limit = limit;
    this.offset = offset;
    this.order = order;
    this.projection = projection;
    this.startCursor = startCursor;
  }

  public List<PropertyReference> getDistinctOn() {
    return distinctOn;
  }

  public String getEndCursor() {
    return endCursor;
  }

  public Filter getFilter() {
    return filter;
  }

  public List<KindExpression> getKind() {
    return kind;
  }

  public Integer getLimit() {
    return limit;
  }

  public Integer getOffset() {
    return offset;
  }

  public List<PropertyOrder> getOrder() {
    return order;
  }

  public List<Projection> getProjection() {
    return projection;
  }

  public String getStartCursor() {
    return startCursor;
  }










  public static Builder newBuilder() {
    return new Query.Builder();
  }

  public static class Builder {
    private List<PropertyReference> distinctOn;
    private String endCursor;
    private Filter filter;
    private List<KindExpression> kind;
    private Integer limit;
    private Integer offset;
    private List<PropertyOrder> order;
    private List<Projection> projection;
    private String startCursor;

    Builder() {}

    Builder(Query source) {
      this.distinctOn = source.distinctOn;
      this.endCursor = source.endCursor;
      this.filter = source.filter;
      this.kind = source.kind;
      this.limit = source.limit;
      this.offset = source.offset;
      this.order = source.order;
      this.projection = source.projection;
      this.startCursor = source.startCursor;
    }

    public List<PropertyReference> getDistinctOn() {
      return distinctOn;
    }

    public Builder setDistinctOn(List<PropertyReference> distinctOn) {
      this.distinctOn = distinctOn;
      return this;
    }

    public String getEndCursor() {
      return endCursor;
    }

    public Builder setEndCursor(String endCursor) {
      this.endCursor = endCursor;
      return this;
    }

    public Filter getFilter() {
      return filter;
    }

    public Builder setFilter(Filter filter) {
      this.filter = filter;
      return this;
    }

    public List<KindExpression> getKind() {
      return kind;
    }

    public Builder setKind(List<KindExpression> kind) {
      this.kind = kind;
      return this;
    }

    public Integer getLimit() {
      return limit;
    }

    public Builder setLimit(Integer limit) {
      this.limit = limit;
      return this;
    }

    public Integer getOffset() {
      return offset;
    }

    public Builder setOffset(Integer offset) {
      this.offset = offset;
      return this;
    }

    public List<PropertyOrder> getOrder() {
      return order;
    }

    public Builder setOrder(List<PropertyOrder> order) {
      this.order = order;
      return this;
    }

    public List<Projection> getProjection() {
      return projection;
    }

    public Builder setProjection(List<Projection> projection) {
      this.projection = projection;
      return this;
    }

    public String getStartCursor() {
      return startCursor;
    }

    public Builder setStartCursor(String startCursor) {
      this.startCursor = startCursor;
      return this;
    }


    public Query build() {
      return new Query(

        distinctOn,
        endCursor,
        filter,
        kind,
        limit,
        offset,
        order,
        projection,
        startCursor
      );
    }
  }

  @Override
  public String toString() {
    return "Query{"

    + "distinctOn=" + distinctOn + ", "
    + "endCursor=" + endCursor + ", "
    + "filter=" + filter + ", "
    + "kind=" + kind + ", "
    + "limit=" + limit + ", "
    + "offset=" + offset + ", "
    + "order=" + order + ", "
    + "projection=" + projection + ", "
    + "startCursor=" + startCursor
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof Query) {
      Query that = (Query) o;
      return

      this.distinctOn.equals(that.getDistinctOn())&&
      this.endCursor.equals(that.getEndCursor())&&
      this.filter.equals(that.getFilter())&&
      this.kind.equals(that.getKind())&&
      this.limit.equals(that.getLimit())&&
      this.offset.equals(that.getOffset())&&
      this.order.equals(that.getOrder())&&
      this.projection.equals(that.getProjection())&&
      this.startCursor.equals(that.getStartCursor())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.distinctOn.hashCode();
    h *= 1000003;
    h ^= this.endCursor.hashCode();
    h *= 1000003;
    h ^= this.filter.hashCode();
    h *= 1000003;
    h ^= this.kind.hashCode();
    h *= 1000003;
    h ^= this.limit.hashCode();
    h *= 1000003;
    h ^= this.offset.hashCode();
    h *= 1000003;
    h ^= this.order.hashCode();
    h *= 1000003;
    h ^= this.projection.hashCode();
    h *= 1000003;
    h ^= this.startCursor.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/QueryResultBatch.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.EntityResult;
import com.google.datastore.v1.QueryResultBatch;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class QueryResultBatch implements Serializable {
  private final String endCursor;
  private final List<EntityResult> entityResults;
  private final String entityResultType;
  private final String moreResults;
  private final String skippedCursor;
  private final Integer skippedResults;
  private final String snapshotVersion;

  private QueryResultBatch(

    String endCursor,
    List<EntityResult> entityResults,
    String entityResultType,
    String moreResults,
    String skippedCursor,
    Integer skippedResults,
    String snapshotVersion
    ) {
    this.endCursor = endCursor;
    this.entityResults = entityResults;
    this.entityResultType = entityResultType;
    this.moreResults = moreResults;
    this.skippedCursor = skippedCursor;
    this.skippedResults = skippedResults;
    this.snapshotVersion = snapshotVersion;
  }

  public String getEndCursor() {
    return endCursor;
  }

  public List<EntityResult> getEntityResults() {
    return entityResults;
  }

  public String getEntityResultType() {
    return entityResultType;
  }

  public String getMoreResults() {
    return moreResults;
  }

  public String getSkippedCursor() {
    return skippedCursor;
  }

  public Integer getSkippedResults() {
    return skippedResults;
  }

  public String getSnapshotVersion() {
    return snapshotVersion;
  }








  public static Builder newBuilder() {
    return new QueryResultBatch.Builder();
  }

  public static class Builder {
    private String endCursor;
    private List<EntityResult> entityResults;
    private String entityResultType;
    private String moreResults;
    private String skippedCursor;
    private Integer skippedResults;
    private String snapshotVersion;

    Builder() {}

    Builder(QueryResultBatch source) {
      this.endCursor = source.endCursor;
      this.entityResults = source.entityResults;
      this.entityResultType = source.entityResultType;
      this.moreResults = source.moreResults;
      this.skippedCursor = source.skippedCursor;
      this.skippedResults = source.skippedResults;
      this.snapshotVersion = source.snapshotVersion;
    }

    public String getEndCursor() {
      return endCursor;
    }

    public Builder setEndCursor(String endCursor) {
      this.endCursor = endCursor;
      return this;
    }

    public List<EntityResult> getEntityResults() {
      return entityResults;
    }

    public Builder setEntityResults(List<EntityResult> entityResults) {
      this.entityResults = entityResults;
      return this;
    }

    public String getEntityResultType() {
      return entityResultType;
    }

    public Builder setEntityResultType(String entityResultType) {
      this.entityResultType = entityResultType;
      return this;
    }

    public String getMoreResults() {
      return moreResults;
    }

    public Builder setMoreResults(String moreResults) {
      this.moreResults = moreResults;
      return this;
    }

    public String getSkippedCursor() {
      return skippedCursor;
    }

    public Builder setSkippedCursor(String skippedCursor) {
      this.skippedCursor = skippedCursor;
      return this;
    }

    public Integer getSkippedResults() {
      return skippedResults;
    }

    public Builder setSkippedResults(Integer skippedResults) {
      this.skippedResults = skippedResults;
      return this;
    }

    public String getSnapshotVersion() {
      return snapshotVersion;
    }

    public Builder setSnapshotVersion(String snapshotVersion) {
      this.snapshotVersion = snapshotVersion;
      return this;
    }


    public QueryResultBatch build() {
      return new QueryResultBatch(

        endCursor,
        entityResults,
        entityResultType,
        moreResults,
        skippedCursor,
        skippedResults,
        snapshotVersion
      );
    }
  }

  @Override
  public String toString() {
    return "QueryResultBatch{"

    + "endCursor=" + endCursor + ", "
    + "entityResults=" + entityResults + ", "
    + "entityResultType=" + entityResultType + ", "
    + "moreResults=" + moreResults + ", "
    + "skippedCursor=" + skippedCursor + ", "
    + "skippedResults=" + skippedResults + ", "
    + "snapshotVersion=" + snapshotVersion
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof QueryResultBatch) {
      QueryResultBatch that = (QueryResultBatch) o;
      return

      this.endCursor.equals(that.getEndCursor())&&
      this.entityResults.equals(that.getEntityResults())&&
      this.entityResultType.equals(that.getEntityResultType())&&
      this.moreResults.equals(that.getMoreResults())&&
      this.skippedCursor.equals(that.getSkippedCursor())&&
      this.skippedResults.equals(that.getSkippedResults())&&
      this.snapshotVersion.equals(that.getSnapshotVersion())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.endCursor.hashCode();
    h *= 1000003;
    h ^= this.entityResults.hashCode();
    h *= 1000003;
    h ^= this.entityResultType.hashCode();
    h *= 1000003;
    h ^= this.moreResults.hashCode();
    h *= 1000003;
    h ^= this.skippedCursor.hashCode();
    h *= 1000003;
    h ^= this.skippedResults.hashCode();
    h *= 1000003;
    h ^= this.snapshotVersion.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/ReadOptions.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.ReadOptions;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class ReadOptions implements Serializable {
  private final String readConsistency;
  private final String transaction;

  private ReadOptions(

    String readConsistency,
    String transaction
    ) {
    this.readConsistency = readConsistency;
    this.transaction = transaction;
  }

  public String getReadConsistency() {
    return readConsistency;
  }

  public String getTransaction() {
    return transaction;
  }



  public static Builder newBuilder() {
    return new ReadOptions.Builder();
  }

  public static class Builder {
    private String readConsistency;
    private String transaction;

    Builder() {}

    Builder(ReadOptions source) {
      this.readConsistency = source.readConsistency;
      this.transaction = source.transaction;
    }

    public String getReadConsistency() {
      return readConsistency;
    }

    public Builder setReadConsistency(String readConsistency) {
      this.readConsistency = readConsistency;
      return this;
    }

    public String getTransaction() {
      return transaction;
    }

    public Builder setTransaction(String transaction) {
      this.transaction = transaction;
      return this;
    }


    public ReadOptions build() {
      return new ReadOptions(

        readConsistency,
        transaction
      );
    }
  }

  @Override
  public String toString() {
    return "ReadOptions{"

    + "readConsistency=" + readConsistency + ", "
    + "transaction=" + transaction
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof ReadOptions) {
      ReadOptions that = (ReadOptions) o;
      return

      this.readConsistency.equals(that.getReadConsistency())&&
      this.transaction.equals(that.getTransaction())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.readConsistency.hashCode();
    h *= 1000003;
    h ^= this.transaction.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/RollbackRequest.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.RollbackRequest;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class RollbackRequest implements Serializable {
  private final String transaction;

  private RollbackRequest(

    String transaction
    ) {
    this.transaction = transaction;
  }

  public String getTransaction() {
    return transaction;
  }


  public static Builder newBuilder() {
    return new RollbackRequest.Builder();
  }

  public static class Builder {
    private String transaction;

    Builder() {}

    Builder(RollbackRequest source) {
      this.transaction = source.transaction;
    }

    public String getTransaction() {
      return transaction;
    }

    public Builder setTransaction(String transaction) {
      this.transaction = transaction;
      return this;
    }


    public RollbackRequest build() {
      return new RollbackRequest(

        transaction
      );
    }
  }

  @Override
  public String toString() {
    return "RollbackRequest{"

    + "transaction=" + transaction
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof RollbackRequest) {
      RollbackRequest that = (RollbackRequest) o;
      return

      this.transaction.equals(that.getTransaction())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.transaction.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/RollbackResponse.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.RollbackResponse;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class RollbackResponse implements Serializable {


  private RollbackResponse(
    ) {
  }



  public static Builder newBuilder() {
    return new RollbackResponse.Builder();
  }

  public static class Builder {

    Builder() {}

    Builder(RollbackResponse source) {
    }


    public RollbackResponse build() {
      return new RollbackResponse(
      );
    }
  }

  @Override
  public String toString() {
    return "RollbackResponse{"
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof RollbackResponse) {
      RollbackResponse that = (RollbackResponse) o;
      return
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/RunQueryRequest.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.GqlQuery;
import com.google.datastore.v1.PartitionId;
import com.google.datastore.v1.Query;
import com.google.datastore.v1.ReadOptions;
import com.google.datastore.v1.RunQueryRequest;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class RunQueryRequest implements Serializable {
  private final GqlQuery gqlQuery;
  private final PartitionId partitionId;
  private final Query query;
  private final ReadOptions readOptions;

  private RunQueryRequest(

    GqlQuery gqlQuery,
    PartitionId partitionId,
    Query query,
    ReadOptions readOptions
    ) {
    this.gqlQuery = gqlQuery;
    this.partitionId = partitionId;
    this.query = query;
    this.readOptions = readOptions;
  }

  public GqlQuery getGqlQuery() {
    return gqlQuery;
  }

  public PartitionId getPartitionId() {
    return partitionId;
  }

  public Query getQuery() {
    return query;
  }

  public ReadOptions getReadOptions() {
    return readOptions;
  }





  public static Builder newBuilder() {
    return new RunQueryRequest.Builder();
  }

  public static class Builder {
    private GqlQuery gqlQuery;
    private PartitionId partitionId;
    private Query query;
    private ReadOptions readOptions;

    Builder() {}

    Builder(RunQueryRequest source) {
      this.gqlQuery = source.gqlQuery;
      this.partitionId = source.partitionId;
      this.query = source.query;
      this.readOptions = source.readOptions;
    }

    public GqlQuery getGqlQuery() {
      return gqlQuery;
    }

    public Builder setGqlQuery(GqlQuery gqlQuery) {
      this.gqlQuery = gqlQuery;
      return this;
    }

    public PartitionId getPartitionId() {
      return partitionId;
    }

    public Builder setPartitionId(PartitionId partitionId) {
      this.partitionId = partitionId;
      return this;
    }

    public Query getQuery() {
      return query;
    }

    public Builder setQuery(Query query) {
      this.query = query;
      return this;
    }

    public ReadOptions getReadOptions() {
      return readOptions;
    }

    public Builder setReadOptions(ReadOptions readOptions) {
      this.readOptions = readOptions;
      return this;
    }


    public RunQueryRequest build() {
      return new RunQueryRequest(

        gqlQuery,
        partitionId,
        query,
        readOptions
      );
    }
  }

  @Override
  public String toString() {
    return "RunQueryRequest{"

    + "gqlQuery=" + gqlQuery + ", "
    + "partitionId=" + partitionId + ", "
    + "query=" + query + ", "
    + "readOptions=" + readOptions
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof RunQueryRequest) {
      RunQueryRequest that = (RunQueryRequest) o;
      return

      this.gqlQuery.equals(that.getGqlQuery())&&
      this.partitionId.equals(that.getPartitionId())&&
      this.query.equals(that.getQuery())&&
      this.readOptions.equals(that.getReadOptions())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.gqlQuery.hashCode();
    h *= 1000003;
    h ^= this.partitionId.hashCode();
    h *= 1000003;
    h ^= this.query.hashCode();
    h *= 1000003;
    h ^= this.readOptions.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/RunQueryResponse.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.Query;
import com.google.datastore.v1.QueryResultBatch;
import com.google.datastore.v1.RunQueryResponse;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class RunQueryResponse implements Serializable {
  private final QueryResultBatch batch;
  private final Query query;

  private RunQueryResponse(

    QueryResultBatch batch,
    Query query
    ) {
    this.batch = batch;
    this.query = query;
  }

  public QueryResultBatch getBatch() {
    return batch;
  }

  public Query getQuery() {
    return query;
  }



  public static Builder newBuilder() {
    return new RunQueryResponse.Builder();
  }

  public static class Builder {
    private QueryResultBatch batch;
    private Query query;

    Builder() {}

    Builder(RunQueryResponse source) {
      this.batch = source.batch;
      this.query = source.query;
    }

    public QueryResultBatch getBatch() {
      return batch;
    }

    public Builder setBatch(QueryResultBatch batch) {
      this.batch = batch;
      return this;
    }

    public Query getQuery() {
      return query;
    }

    public Builder setQuery(Query query) {
      this.query = query;
      return this;
    }


    public RunQueryResponse build() {
      return new RunQueryResponse(

        batch,
        query
      );
    }
  }

  @Override
  public String toString() {
    return "RunQueryResponse{"

    + "batch=" + batch + ", "
    + "query=" + query
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof RunQueryResponse) {
      RunQueryResponse that = (RunQueryResponse) o;
      return

      this.batch.equals(that.getBatch())&&
      this.query.equals(that.getQuery())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.batch.hashCode();
    h *= 1000003;
    h ^= this.query.hashCode();
    return h;
  }
}
============== file: src/main/java/com/google/cloud/datastore/v1/Value.java ==============
/*
 *
 */
package com.google.cloud.datastore.v1;

import com.google.api.core.BetaApi;
import com.google.datastore.v1.ArrayValue;
import com.google.datastore.v1.Entity;
import com.google.datastore.v1.Key;
import com.google.datastore.v1.LatLng;
import com.google.datastore.v1.Value;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Generated;

@Generated("by GAPIC")
@BetaApi
public final class Value implements Serializable {
  private final ArrayValue arrayValue;
  private final String blobValue;
  private final Boolean booleanValue;
  private final Double doubleValue;
  private final Entity entityValue;
  private final Boolean excludeFromIndexes;
  private final LatLng geoPointValue;
  private final String integerValue;
  private final Key keyValue;
  private final Integer meaning;
  private final String nullValue;
  private final String stringValue;
  private final String timestampValue;

  private Value(

    ArrayValue arrayValue,
    String blobValue,
    Boolean booleanValue,
    Double doubleValue,
    Entity entityValue,
    Boolean excludeFromIndexes,
    LatLng geoPointValue,
    String integerValue,
    Key keyValue,
    Integer meaning,
    String nullValue,
    String stringValue,
    String timestampValue
    ) {
    this.arrayValue = arrayValue;
    this.blobValue = blobValue;
    this.booleanValue = booleanValue;
    this.doubleValue = doubleValue;
    this.entityValue = entityValue;
    this.excludeFromIndexes = excludeFromIndexes;
    this.geoPointValue = geoPointValue;
    this.integerValue = integerValue;
    this.keyValue = keyValue;
    this.meaning = meaning;
    this.nullValue = nullValue;
    this.stringValue = stringValue;
    this.timestampValue = timestampValue;
  }

  public ArrayValue getArrayValue() {
    return arrayValue;
  }

  public String getBlobValue() {
    return blobValue;
  }

  public Boolean getBooleanValue() {
    return booleanValue;
  }

  public Double getDoubleValue() {
    return doubleValue;
  }

  public Entity getEntityValue() {
    return entityValue;
  }

  public Boolean getExcludeFromIndexes() {
    return excludeFromIndexes;
  }

  public LatLng getGeoPointValue() {
    return geoPointValue;
  }

  public String getIntegerValue() {
    return integerValue;
  }

  public Key getKeyValue() {
    return keyValue;
  }

  public Integer getMeaning() {
    return meaning;
  }

  public String getNullValue() {
    return nullValue;
  }

  public String getStringValue() {
    return stringValue;
  }

  public String getTimestampValue() {
    return timestampValue;
  }














  public static Builder newBuilder() {
    return new Value.Builder();
  }

  public static class Builder {
    private ArrayValue arrayValue;
    private String blobValue;
    private Boolean booleanValue;
    private Double doubleValue;
    private Entity entityValue;
    private Boolean excludeFromIndexes;
    private LatLng geoPointValue;
    private String integerValue;
    private Key keyValue;
    private Integer meaning;
    private String nullValue;
    private String stringValue;
    private String timestampValue;

    Builder() {}

    Builder(Value source) {
      this.arrayValue = source.arrayValue;
      this.blobValue = source.blobValue;
      this.booleanValue = source.booleanValue;
      this.doubleValue = source.doubleValue;
      this.entityValue = source.entityValue;
      this.excludeFromIndexes = source.excludeFromIndexes;
      this.geoPointValue = source.geoPointValue;
      this.integerValue = source.integerValue;
      this.keyValue = source.keyValue;
      this.meaning = source.meaning;
      this.nullValue = source.nullValue;
      this.stringValue = source.stringValue;
      this.timestampValue = source.timestampValue;
    }

    public ArrayValue getArrayValue() {
      return arrayValue;
    }

    public Builder setArrayValue(ArrayValue arrayValue) {
      this.arrayValue = arrayValue;
      return this;
    }

    public String getBlobValue() {
      return blobValue;
    }

    public Builder setBlobValue(String blobValue) {
      this.blobValue = blobValue;
      return this;
    }

    public Boolean getBooleanValue() {
      return booleanValue;
    }

    public Builder setBooleanValue(Boolean booleanValue) {
      this.booleanValue = booleanValue;
      return this;
    }

    public Double getDoubleValue() {
      return doubleValue;
    }

    public Builder setDoubleValue(Double doubleValue) {
      this.doubleValue = doubleValue;
      return this;
    }

    public Entity getEntityValue() {
      return entityValue;
    }

    public Builder setEntityValue(Entity entityValue) {
      this.entityValue = entityValue;
      return this;
    }

    public Boolean getExcludeFromIndexes() {
      return excludeFromIndexes;
    }

    public Builder setExcludeFromIndexes(Boolean excludeFromIndexes) {
      this.excludeFromIndexes = excludeFromIndexes;
      return this;
    }

    public LatLng getGeoPointValue() {
      return geoPointValue;
    }

    public Builder setGeoPointValue(LatLng geoPointValue) {
      this.geoPointValue = geoPointValue;
      return this;
    }

    public String getIntegerValue() {
      return integerValue;
    }

    public Builder setIntegerValue(String integerValue) {
      this.integerValue = integerValue;
      return this;
    }

    public Key getKeyValue() {
      return keyValue;
    }

    public Builder setKeyValue(Key keyValue) {
      this.keyValue = keyValue;
      return this;
    }

    public Integer getMeaning() {
      return meaning;
    }

    public Builder setMeaning(Integer meaning) {
      this.meaning = meaning;
      return this;
    }

    public String getNullValue() {
      return nullValue;
    }

    public Builder setNullValue(String nullValue) {
      this.nullValue = nullValue;
      return this;
    }

    public String getStringValue() {
      return stringValue;
    }

    public Builder setStringValue(String stringValue) {
      this.stringValue = stringValue;
      return this;
    }

    public String getTimestampValue() {
      return timestampValue;
    }

    public Builder setTimestampValue(String timestampValue) {
      this.timestampValue = timestampValue;
      return this;
    }


    public Value build() {
      return new Value(

        arrayValue,
        blobValue,
        booleanValue,
        doubleValue,
        entityValue,
        excludeFromIndexes,
        geoPointValue,
        integerValue,
        keyValue,
        meaning,
        nullValue,
        stringValue,
        timestampValue
      );
    }
  }

  @Override
  public String toString() {
    return "Value{"

    + "arrayValue=" + arrayValue + ", "
    + "blobValue=" + blobValue + ", "
    + "booleanValue=" + booleanValue + ", "
    + "doubleValue=" + doubleValue + ", "
    + "entityValue=" + entityValue + ", "
    + "excludeFromIndexes=" + excludeFromIndexes + ", "
    + "geoPointValue=" + geoPointValue + ", "
    + "integerValue=" + integerValue + ", "
    + "keyValue=" + keyValue + ", "
    + "meaning=" + meaning + ", "
    + "nullValue=" + nullValue + ", "
    + "stringValue=" + stringValue + ", "
    + "timestampValue=" + timestampValue
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof Value) {
      Value that = (Value) o;
      return

      this.arrayValue.equals(that.getArrayValue())&&
      this.blobValue.equals(that.getBlobValue())&&
      this.booleanValue.equals(that.getBooleanValue())&&
      this.doubleValue.equals(that.getDoubleValue())&&
      this.entityValue.equals(that.getEntityValue())&&
      this.excludeFromIndexes.equals(that.getExcludeFromIndexes())&&
      this.geoPointValue.equals(that.getGeoPointValue())&&
      this.integerValue.equals(that.getIntegerValue())&&
      this.keyValue.equals(that.getKeyValue())&&
      this.meaning.equals(that.getMeaning())&&
      this.nullValue.equals(that.getNullValue())&&
      this.stringValue.equals(that.getStringValue())&&
      this.timestampValue.equals(that.getTimestampValue())
      ;
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h = 1;
    h *= 1000003;
    h ^= this.arrayValue.hashCode();
    h *= 1000003;
    h ^= this.blobValue.hashCode();
    h *= 1000003;
    h ^= this.booleanValue.hashCode();
    h *= 1000003;
    h ^= this.doubleValue.hashCode();
    h *= 1000003;
    h ^= this.entityValue.hashCode();
    h *= 1000003;
    h ^= this.excludeFromIndexes.hashCode();
    h *= 1000003;
    h ^= this.geoPointValue.hashCode();
    h *= 1000003;
    h ^= this.integerValue.hashCode();
    h *= 1000003;
    h ^= this.keyValue.hashCode();
    h *= 1000003;
    h ^= this.meaning.hashCode();
    h *= 1000003;
    h ^= this.nullValue.hashCode();
    h *= 1000003;
    h ^= this.stringValue.hashCode();
    h *= 1000003;
    h ^= this.timestampValue.hashCode();
    return h;
  }
}
