
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Translate API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/translate
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the translate service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('translate', 'v2', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'list' method:

# * The text to detect
q = ''

request = service.detections().list(q=q)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Translate API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/translate
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the translate service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('translate', 'v2', credentials=credentials)



request = service.languages().list()
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Translate API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/translate
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the translate service object (version v2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('translate', 'v2', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'list' method:

# * The text to translate
q = ''

# * The target language into which the text should be translated
target = ''

request = service.translations().list(q=q, target=target)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
