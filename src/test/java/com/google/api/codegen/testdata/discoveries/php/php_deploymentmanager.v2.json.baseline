
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';  // TODO: Update placeholder value.

// The name of the deployment for this request.
$deployment = '';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_DeploymentManager_DeploymentsCancelPreviewRequest();

$response = $service->deployments->cancelPreview($project, $deployment, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';  // TODO: Update placeholder value.

// The name of the deployment for this request.
$deployment = '';  // TODO: Update placeholder value.

$response = $service->deployments->delete($project, $deployment);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';  // TODO: Update placeholder value.

// The name of the deployment for this request.
$deployment = '';  // TODO: Update placeholder value.

$response = $service->deployments->get($project, $deployment);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// Project ID for this request.
$project = '';  // TODO: Update placeholder value.

// Name of the resource for this request.
$resource = '';  // TODO: Update placeholder value.

$response = $service->deployments->getIamPolicy($project, $resource);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_DeploymentManager_Deployment();

$response = $service->deployments->insert($project, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';  // TODO: Update placeholder value.

$optParams = [];
do {
  $response = $service->deployments->listDeployments($project, $optParams);

  foreach ($response['deployments'] as $deployment) {
    // TODO: Change code below to process each `deployment` resource:
    echo '<pre>', var_export($deployment, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';  // TODO: Update placeholder value.

// The name of the deployment for this request.
$deployment = '';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`. Only assigned
// properties will be changed:
$requestBody = new Google_Service_DeploymentManager_Deployment();

$response = $service->deployments->patch($project, $deployment, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// Project ID for this request.
$project = '';  // TODO: Update placeholder value.

// Name of the resource for this request.
$resource = '';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_DeploymentManager_Policy();

$response = $service->deployments->setIamPolicy($project, $resource, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';  // TODO: Update placeholder value.

// The name of the deployment for this request.
$deployment = '';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_DeploymentManager_DeploymentsStopRequest();

$response = $service->deployments->stop($project, $deployment, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// Project ID for this request.
$project = '';  // TODO: Update placeholder value.

// Name of the resource for this request.
$resource = '';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_DeploymentManager_TestPermissionsRequest();

$response = $service->deployments->testIamPermissions($project, $resource, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';  // TODO: Update placeholder value.

// The name of the deployment for this request.
$deployment = '';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_DeploymentManager_Deployment();

$response = $service->deployments->update($project, $deployment, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';  // TODO: Update placeholder value.

// The name of the deployment for this request.
$deployment = '';  // TODO: Update placeholder value.

// The name of the manifest for this request.
$manifest = '';  // TODO: Update placeholder value.

$response = $service->manifests->get($project, $deployment, $manifest);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';  // TODO: Update placeholder value.

// The name of the deployment for this request.
$deployment = '';  // TODO: Update placeholder value.

$optParams = [];
do {
  $response = $service->manifests->listManifests($project, $deployment, $optParams);

  foreach ($response['manifests'] as $manifest) {
    // TODO: Change code below to process each `manifest` resource:
    echo '<pre>', var_export($manifest, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';  // TODO: Update placeholder value.

// The name of the operation for this request.
$operation = '';  // TODO: Update placeholder value.

$response = $service->operations->get($project, $operation);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';  // TODO: Update placeholder value.

$optParams = [];
do {
  $response = $service->operations->listOperations($project, $optParams);

  foreach ($response['operations'] as $operation) {
    // TODO: Change code below to process each `operation` resource:
    echo '<pre>', var_export($operation, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';  // TODO: Update placeholder value.

// The name of the deployment for this request.
$deployment = '';  // TODO: Update placeholder value.

// The name of the resource for this request.
$resource = '';  // TODO: Update placeholder value.

$response = $service->resources->get($project, $deployment, $resource);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';  // TODO: Update placeholder value.

// The name of the deployment for this request.
$deployment = '';  // TODO: Update placeholder value.

$optParams = [];
do {
  $response = $service->resources->listResources($project, $deployment, $optParams);

  foreach ($response['resources'] as $resource) {
    // TODO: Change code below to process each `resource` resource:
    echo '<pre>', var_export($resource, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`
 *    For more information, see:
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-DeploymentManagerSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';  // TODO: Update placeholder value.

$optParams = [];
do {
  $response = $service->types->listTypes($project, $optParams);

  foreach ($response['types'] as $type) {
    // TODO: Change code below to process each `type` resource:
    echo '<pre>', var_export($type, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
?>
