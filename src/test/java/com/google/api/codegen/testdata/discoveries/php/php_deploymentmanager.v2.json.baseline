
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service.
$service = new Google_Service_DeploymentManager($client);

// * The project ID for this request.
$project = '{MY-PROJECT}';

// * The name of the deployment for this request.
$deployment = '{MY-DEPLOYMENT}';

$postBody = new Google_Service_DeploymentManager_DeploymentsCancelPreviewRequest($client);

$response = $service->deployments->cancelPreview($project, $deployment, $postBody);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service.
$service = new Google_Service_DeploymentManager($client);

// * The project ID for this request.
$project = '{MY-PROJECT}';

// * The name of the deployment for this request.
$deployment = '{MY-DEPLOYMENT}';

$response = $service->deployments->delete($project, $deployment);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service.
$service = new Google_Service_DeploymentManager($client);

// * The project ID for this request.
$project = '{MY-PROJECT}';

// * The name of the deployment for this request.
$deployment = '{MY-DEPLOYMENT}';

$response = $service->deployments->get($project, $deployment);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service.
$service = new Google_Service_DeploymentManager($client);

// * The project ID for this request.
$project = '{MY-PROJECT}';

$postBody = new Google_Service_DeploymentManager_Deployment($client);

$response = $service->deployments->insert($project, $postBody);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service.
$service = new Google_Service_DeploymentManager($client);

// * The project ID for this request.
$project = '{MY-PROJECT}';

$response = $service->deployments->listDeployments($project);

foreach ($response['deployments'] as $element) {
  // TODO: Add code here to process the element.
}

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service.
$service = new Google_Service_DeploymentManager($client);

// * The project ID for this request.
$project = '{MY-PROJECT}';

// * The name of the deployment for this request.
$deployment = '{MY-DEPLOYMENT}';

$postBody = new Google_Service_DeploymentManager_Deployment($client);

$response = $service->deployments->patch($project, $deployment, $postBody);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service.
$service = new Google_Service_DeploymentManager($client);

// * The project ID for this request.
$project = '{MY-PROJECT}';

// * The name of the deployment for this request.
$deployment = '{MY-DEPLOYMENT}';

$postBody = new Google_Service_DeploymentManager_DeploymentsStopRequest($client);

$response = $service->deployments->stop($project, $deployment, $postBody);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service.
$service = new Google_Service_DeploymentManager($client);

// * The project ID for this request.
$project = '{MY-PROJECT}';

// * The name of the deployment for this request.
$deployment = '{MY-DEPLOYMENT}';

$postBody = new Google_Service_DeploymentManager_Deployment($client);

$response = $service->deployments->update($project, $deployment, $postBody);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service.
$service = new Google_Service_DeploymentManager($client);

// * The project ID for this request.
$project = '{MY-PROJECT}';

// * The name of the deployment for this request.
$deployment = '{MY-DEPLOYMENT}';

// * The name of the manifest for this request.
$manifest = '{MY-MANIFEST}';

$response = $service->manifests->get($project, $deployment, $manifest);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service.
$service = new Google_Service_DeploymentManager($client);

// * The project ID for this request.
$project = '{MY-PROJECT}';

// * The name of the deployment for this request.
$deployment = '{MY-DEPLOYMENT}';

$response = $service->manifests->listManifests($project, $deployment);

foreach ($response['manifests'] as $element) {
  // TODO: Add code here to process the element.
}

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service.
$service = new Google_Service_DeploymentManager($client);

// * The project ID for this request.
$project = '{MY-PROJECT}';

// * The name of the operation for this request.
$operation = '{MY-OPERATION}';

$response = $service->operations->get($project, $operation);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service.
$service = new Google_Service_DeploymentManager($client);

// * The project ID for this request.
$project = '{MY-PROJECT}';

$response = $service->operations->listOperations($project);

foreach ($response['operations'] as $element) {
  // TODO: Add code here to process the element.
}

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service.
$service = new Google_Service_DeploymentManager($client);

// * The project ID for this request.
$project = '{MY-PROJECT}';

// * The name of the deployment for this request.
$deployment = '{MY-DEPLOYMENT}';

// * The name of the resource for this request.
$resource = '{MY-RESOURCE}';

$response = $service->resources->get($project, $deployment, $resource);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service.
$service = new Google_Service_DeploymentManager($client);

// * The project ID for this request.
$project = '{MY-PROJECT}';

// * The name of the deployment for this request.
$deployment = '{MY-DEPLOYMENT}';

$response = $service->resources->listResources($project, $deployment);

foreach ($response['resources'] as $element) {
  // TODO: Add code here to process the element.
}

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service.
$service = new Google_Service_DeploymentManager($client);

// * The project ID for this request.
$project = '{MY-PROJECT}';

$response = $service->types->listTypes($project);

foreach ($response['types'] as $element) {
  // TODO: Add code here to process the element.
}

