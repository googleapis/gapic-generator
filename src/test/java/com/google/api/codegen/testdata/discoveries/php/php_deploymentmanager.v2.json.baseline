
<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service
$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';
// The name of the deployment for this request.
$deployment = '';

$response = $service->deployments->cancelPreviewDeployments($project, $deployment);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service
$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';
// The name of the deployment for this request.
$deployment = '';

$response = $service->deployments->deleteDeployments($project, $deployment);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service
$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';
// The name of the deployment for this request.
$deployment = '';

$response = $service->deployments->getDeployments($project, $deployment);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service
$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';

$response = $service->deployments->insertDeployments($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service
$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';

$response = $service->deployments->listDeployments($project);

foreach ($response['deployments'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service
$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';
// The name of the deployment for this request.
$deployment = '';

$response = $service->deployments->patchDeployments($project, $deployment);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service
$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';
// The name of the deployment for this request.
$deployment = '';

$response = $service->deployments->stopDeployments($project, $deployment);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service
$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';
// The name of the deployment for this request.
$deployment = '';

$response = $service->deployments->updateDeployments($project, $deployment);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service
$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';
// The name of the deployment for this request.
$deployment = '';
// The name of the manifest for this request.
$manifest = '';

$response = $service->manifests->getManifests($project, $deployment, $manifest);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service
$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';
// The name of the deployment for this request.
$deployment = '';

$response = $service->manifests->listManifests($project, $deployment);

foreach ($response['manifests'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service
$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';
// The name of the operation for this request.
$operation = '';

$response = $service->operations->getOperations($project, $operation);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service
$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';

$response = $service->operations->listOperations($project);

foreach ($response['operations'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service
$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';
// The name of the deployment for this request.
$deployment = '';
// The name of the resource for this request.
$resource = '';

$response = $service->resources->getResources($project, $deployment, $resource);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service
$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';
// The name of the deployment for this request.
$deployment = '';

$response = $service->resources->listResources($project, $deployment);

foreach ($response['resources'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Deployment Manager API and check quota for your project at
 *    https://console.developers.google.com/apis/api/deploymentmanager_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new DeploymentManager service
$service = new Google_Service_DeploymentManager($client);

// The project ID for this request.
$project = '';

$response = $service->types->listTypes($project);

foreach ($response['types'] as $element) {
  // TODO: Add code here to process the elements.
}

