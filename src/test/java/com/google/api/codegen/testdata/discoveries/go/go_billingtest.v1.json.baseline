
package main

// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Cloud Billing Test API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/billingtest
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run
//    `gcloud beta auth application-default login`.
//    For more information, see
//    https://developers.google.com/identity/protocols/application-default-credentials
// 3. Install and update the Go dependencies by running `go get -u` in the
//    project directory.

import (
  "fmt"
  "log"

  "golang.org/x/net/context"
  "golang.org/x/oauth2/google"
  "google.golang.org/api/billingtest/v1"
)

func main() {
  ctx := context.Background()

  c, err := google.DefaultClient(ctx, billingtest.CloudPlatformScope)
  if err != nil {
    log.Fatal(err)
  }

  billingtestService, err := billingtest.New(c)
  if err != nil {
    log.Fatal(err)
  }

  // The resource name of the billing account to retrieve. For example,
  // `billingAccounts/012345-567890-ABCDEF`.
  name := "billingAccounts/my-billing-account"  // TODO: Update placeholder value.

  resp, err := billingtestService.BillingAccounts.Get(name).Context(ctx).Do()
  if err != nil {
    log.Fatal(err)
  }

  // TODO: Change code below to process the `resp` object:
  fmt.Printf("%#v\n", resp)
}
package main

// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Cloud Billing Test API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/billingtest
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run
//    `gcloud beta auth application-default login`.
//    For more information, see
//    https://developers.google.com/identity/protocols/application-default-credentials
// 3. Install and update the Go dependencies by running `go get -u` in the
//    project directory.

import (
  "fmt"
  "log"

  "golang.org/x/net/context"
  "golang.org/x/oauth2/google"
  "google.golang.org/api/billingtest/v1"
)

func main() {
  ctx := context.Background()

  c, err := google.DefaultClient(ctx, billingtest.CloudPlatformScope)
  if err != nil {
    log.Fatal(err)
  }

  billingtestService, err := billingtest.New(c)
  if err != nil {
    log.Fatal(err)
  }

  req := billingtestService.BillingAccounts.List()
  if err := req.Pages(ctx, func(page *billingtest.ListBillingAccountsResponse) error {
    for _, billingAccount := range page.BillingAccounts {
      // TODO: Change code below to process each `billingAccount` resource:
      fmt.Printf("%#v\n", billingAccount)
    }
    return nil
  }); err != nil {
    log.Fatal(err)
  }
}
package main

// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Cloud Billing Test API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/billingtest
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run
//    `gcloud beta auth application-default login`.
//    For more information, see
//    https://developers.google.com/identity/protocols/application-default-credentials
// 3. Install and update the Go dependencies by running `go get -u` in the
//    project directory.

import (
  "fmt"
  "log"

  "golang.org/x/net/context"
  "golang.org/x/oauth2/google"
  "google.golang.org/api/billingtest/v1"
)

func main() {
  ctx := context.Background()

  c, err := google.DefaultClient(ctx, billingtest.CloudPlatformScope)
  if err != nil {
    log.Fatal(err)
  }

  billingtestService, err := billingtest.New(c)
  if err != nil {
    log.Fatal(err)
  }

  // The resource name of the billing account associated with the projects that
  // you want to list. For example, `billingAccounts/012345-567890-ABCDEF`.
  name := "billingAccounts/my-billing-account"  // TODO: Update placeholder value.

  req := billingtestService.BillingAccounts.Projects.List(name)
  if err := req.Pages(ctx, func(page *billingtest.ListProjectBillingInfoResponse) error {
    for _, projectBillingInfo := range page.ProjectBillingInfo {
      // TODO: Change code below to process each `projectBillingInfo` resource:
      fmt.Printf("%#v\n", projectBillingInfo)
    }
    return nil
  }); err != nil {
    log.Fatal(err)
  }
}
package main

// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Cloud Billing Test API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/billingtest
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run
//    `gcloud beta auth application-default login`.
//    For more information, see
//    https://developers.google.com/identity/protocols/application-default-credentials
// 3. Install and update the Go dependencies by running `go get -u` in the
//    project directory.

import (
  "fmt"
  "log"

  "golang.org/x/net/context"
  "golang.org/x/oauth2/google"
  "google.golang.org/api/billingtest/v1"
)

func main() {
  ctx := context.Background()

  c, err := google.DefaultClient(ctx, billingtest.CloudPlatformScope)
  if err != nil {
    log.Fatal(err)
  }

  billingtestService, err := billingtest.New(c)
  if err != nil {
    log.Fatal(err)
  }

  // The resource name of the project for which billing information is
  // retrieved. For example, `projects/tokyo-rain-123`.
  name := "projects/my-project"  // TODO: Update placeholder value.

  resp, err := billingtestService.Projects.GetBillingInfo(name).Context(ctx).Do()
  if err != nil {
    log.Fatal(err)
  }

  // TODO: Change code below to process the `resp` object:
  fmt.Printf("%#v\n", resp)
}
package main

// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Cloud Billing Test API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/billingtest
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run
//    `gcloud beta auth application-default login`.
//    For more information, see
//    https://developers.google.com/identity/protocols/application-default-credentials
// 3. Install and update the Go dependencies by running `go get -u` in the
//    project directory.

import (
  "fmt"
  "log"

  "golang.org/x/net/context"
  "golang.org/x/oauth2/google"
  "google.golang.org/api/billingtest/v1"
)

func main() {
  ctx := context.Background()

  c, err := google.DefaultClient(ctx, billingtest.CloudPlatformScope)
  if err != nil {
    log.Fatal(err)
  }

  billingtestService, err := billingtest.New(c)
  if err != nil {
    log.Fatal(err)
  }

  // The resource name of the project associated with the billing information
  // that you want to update. For example, `projects/tokyo-rain-123`.
  name := "projects/my-project"  // TODO: Update placeholder value.

  rb := &billingtest.ProjectBillingInfo{
    // TODO: Add desired fields of the request body. All existing fields
    // will be replaced.
  }

  resp, err := billingtestService.Projects.UpdateBillingInfo(name, rb).Context(ctx).Do()
  if err != nil {
    log.Fatal(err)
  }

  // TODO: Change code below to process the `resp` object:
  fmt.Printf("%#v\n", resp)
}
