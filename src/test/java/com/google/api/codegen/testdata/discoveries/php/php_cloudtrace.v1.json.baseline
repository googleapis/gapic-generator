
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Trace API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/cloudtrace
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudTrace service.
$service = new Google_Service_CloudTrace($client);

// * ID of the Cloud project where the trace data is stored.
$projectId = '{MY-PROJECT-ID}';

$postBody = new Google_Service_CloudTrace_Traces($client);

$response = $service->projects->patchTraces($projectId, $postBody);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Trace API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/cloudtrace
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudTrace service.
$service = new Google_Service_CloudTrace($client);

// * ID of the Cloud project where the trace data is stored.
$projectId = '{MY-PROJECT-ID}';

// * ID of the trace to return.
$traceId = '{MY-TRACE-ID}';

$response = $service->projects_traces->get($projectId, $traceId);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Trace API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/cloudtrace
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new CloudTrace service.
$service = new Google_Service_CloudTrace($client);

// * ID of the Cloud project where the trace data is stored.
$projectId = '{MY-PROJECT-ID}';

$response = $service->projects_traces->listProjectsTraces($projectId);

foreach ($response['traces'] as $element) {
  // TODO: Add code here to process the element.
}

