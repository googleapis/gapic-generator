
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Trace API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/cloudtrace
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudTraceSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudTrace($client);

// ID of the Cloud project where the trace data is stored.
$projectId = '';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`. Only assigned
// properties will be changed:
$requestBody = new Google_Service_CloudTrace_Traces();

$service->projects->patchTraces($projectId, $requestBody);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Trace API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/cloudtrace
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudTraceSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudTrace($client);

// ID of the Cloud project where the trace data is stored.
$projectId = '';  // TODO: Update placeholder value.

// ID of the trace to return.
$traceId = '';  // TODO: Update placeholder value.

$response = $service->projects_traces->get($projectId, $traceId);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Cloud Trace API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/cloudtrace
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudTraceSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudTrace($client);

// ID of the Cloud project where the trace data is stored.
$projectId = '';  // TODO: Update placeholder value.

$optParams = [];
do {
  $response = $service->projects_traces->listProjectsTraces($projectId, $optParams);

  foreach ($response['traces'] as $trace) {
    // TODO: Change code below to process each `trace` resource:
    echo '<pre>', var_export($trace, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
?>
