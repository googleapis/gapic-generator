
package main

// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the TaskQueue API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/taskqueue
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run
//    'gcloud beta auth application-default login'
// 3. Install and update the Go dependencies by running 'go get -u' in the
//    project directory.

import (
  "golang.org/x/net/context"
  "golang.org/x/oauth2/google"

  "google.golang.org/api/taskqueue/v1beta2"
)

func main() {
  ctx := context.Background()
  hc, err := google.DefaultClient(ctx, taskqueue.TaskqueueScope)
  if err != nil {
    // TODO: Handle error.
  }
  c, err := taskqueue.New(hc)
  if err != nil {
    // TODO: Handle error.
  }

  // The project under which the queue lies.
  // TODO: Update placeholder value.
  project := "{MY-PROJECT}"

  // The id of the taskqueue to get the properties of.
  // TODO: Update placeholder value.
  taskqueue2 := "{MY-TASKQUEUE}"

  resp, err := c.Taskqueues.Get(project, taskqueue2).Context(ctx).Do()
  if err != nil {
    // TODO: Handle error.
  }
  // TODO: Use resp.
  _ = resp
}
package main

// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the TaskQueue API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/taskqueue
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run
//    'gcloud beta auth application-default login'
// 3. Install and update the Go dependencies by running 'go get -u' in the
//    project directory.

import (
  "golang.org/x/net/context"
  "golang.org/x/oauth2/google"

  "google.golang.org/api/taskqueue/v1beta2"
)

func main() {
  ctx := context.Background()
  hc, err := google.DefaultClient(ctx, taskqueue.TaskqueueScope)
  if err != nil {
    // TODO: Handle error.
  }
  c, err := taskqueue.New(hc)
  if err != nil {
    // TODO: Handle error.
  }

  // The project under which the queue lies.
  // TODO: Update placeholder value.
  project := "{MY-PROJECT}"

  // The taskqueue to delete a task from.
  // TODO: Update placeholder value.
  taskqueue2 := "{MY-TASKQUEUE}"

  // The id of the task to delete.
  // TODO: Update placeholder value.
  task := "{MY-TASK}"

  if err := c.Tasks.Delete(project, taskqueue2, task).Context(ctx).Do(); err != nil {
    // TODO: Handle error.
  }
}
package main

// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the TaskQueue API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/taskqueue
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run
//    'gcloud beta auth application-default login'
// 3. Install and update the Go dependencies by running 'go get -u' in the
//    project directory.

import (
  "golang.org/x/net/context"
  "golang.org/x/oauth2/google"

  "google.golang.org/api/taskqueue/v1beta2"
)

func main() {
  ctx := context.Background()
  hc, err := google.DefaultClient(ctx, taskqueue.TaskqueueScope)
  if err != nil {
    // TODO: Handle error.
  }
  c, err := taskqueue.New(hc)
  if err != nil {
    // TODO: Handle error.
  }

  // The project under which the queue lies.
  // TODO: Update placeholder value.
  project := "{MY-PROJECT}"

  // The taskqueue in which the task belongs.
  // TODO: Update placeholder value.
  taskqueue2 := "{MY-TASKQUEUE}"

  // The task to get properties of.
  // TODO: Update placeholder value.
  task := "{MY-TASK}"

  resp, err := c.Tasks.Get(project, taskqueue2, task).Context(ctx).Do()
  if err != nil {
    // TODO: Handle error.
  }
  // TODO: Use resp.
  _ = resp
}
package main

// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the TaskQueue API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/taskqueue
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run
//    'gcloud beta auth application-default login'
// 3. Install and update the Go dependencies by running 'go get -u' in the
//    project directory.

import (
  "golang.org/x/net/context"
  "golang.org/x/oauth2/google"

  "google.golang.org/api/taskqueue/v1beta2"
)

func main() {
  ctx := context.Background()
  hc, err := google.DefaultClient(ctx, taskqueue.TaskqueueScope)
  if err != nil {
    // TODO: Handle error.
  }
  c, err := taskqueue.New(hc)
  if err != nil {
    // TODO: Handle error.
  }

  // The project under which the queue lies
  // TODO: Update placeholder value.
  project := "{MY-PROJECT}"

  // The taskqueue to insert the task into
  // TODO: Update placeholder value.
  taskqueue2 := "{MY-TASKQUEUE}"

  resp, err := c.Tasks.Insert(project, taskqueue2, &taskqueue.Task{
                                // TODO: Fill required fields.
                              }).Context(ctx).Do()
  if err != nil {
    // TODO: Handle error.
  }
  // TODO: Use resp.
  _ = resp
}
package main

// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the TaskQueue API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/taskqueue
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run
//    'gcloud beta auth application-default login'
// 3. Install and update the Go dependencies by running 'go get -u' in the
//    project directory.

import (
  "golang.org/x/net/context"
  "golang.org/x/oauth2/google"

  "google.golang.org/api/taskqueue/v1beta2"
)

func main() {
  ctx := context.Background()
  hc, err := google.DefaultClient(ctx, taskqueue.TaskqueueScope)
  if err != nil {
    // TODO: Handle error.
  }
  c, err := taskqueue.New(hc)
  if err != nil {
    // TODO: Handle error.
  }

  // The project under which the queue lies.
  // TODO: Update placeholder value.
  project := "{MY-PROJECT}"

  // The taskqueue to lease a task from.
  // TODO: Update placeholder value.
  taskqueue2 := "{MY-TASKQUEUE}"

  // The number of tasks to lease.
  // TODO: Update placeholder value.
  numTasks := int64(0)

  // The lease in seconds.
  // TODO: Update placeholder value.
  leaseSecs := int64(0)

  resp, err := c.Tasks.Lease(project, taskqueue2, numTasks, leaseSecs).Context(ctx).Do()
  if err != nil {
    // TODO: Handle error.
  }
  // TODO: Use resp.
  _ = resp
}
package main

// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the TaskQueue API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/taskqueue
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run
//    'gcloud beta auth application-default login'
// 3. Install and update the Go dependencies by running 'go get -u' in the
//    project directory.

import (
  "golang.org/x/net/context"
  "golang.org/x/oauth2/google"

  "google.golang.org/api/taskqueue/v1beta2"
)

func main() {
  ctx := context.Background()
  hc, err := google.DefaultClient(ctx, taskqueue.TaskqueueScope)
  if err != nil {
    // TODO: Handle error.
  }
  c, err := taskqueue.New(hc)
  if err != nil {
    // TODO: Handle error.
  }

  // The project under which the queue lies.
  // TODO: Update placeholder value.
  project := "{MY-PROJECT}"

  // The id of the taskqueue to list tasks from.
  // TODO: Update placeholder value.
  taskqueue2 := "{MY-TASKQUEUE}"

  resp, err := c.Tasks.List(project, taskqueue2).Context(ctx).Do()
  if err != nil {
    // TODO: Handle error.
  }
  // TODO: Use resp.
  _ = resp
}
package main

// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the TaskQueue API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/taskqueue
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run
//    'gcloud beta auth application-default login'
// 3. Install and update the Go dependencies by running 'go get -u' in the
//    project directory.

import (
  "golang.org/x/net/context"
  "golang.org/x/oauth2/google"

  "google.golang.org/api/taskqueue/v1beta2"
)

func main() {
  ctx := context.Background()
  hc, err := google.DefaultClient(ctx, taskqueue.TaskqueueScope)
  if err != nil {
    // TODO: Handle error.
  }
  c, err := taskqueue.New(hc)
  if err != nil {
    // TODO: Handle error.
  }

  // The project under which the queue lies.
  // TODO: Update placeholder value.
  project := "{MY-PROJECT}"


  // TODO: Update placeholder value.
  taskqueue2 := "{MY-TASKQUEUE}"


  // TODO: Update placeholder value.
  task := "{MY-TASK}"

  // The new lease in seconds.
  // TODO: Update placeholder value.
  newLeaseSeconds := int64(0)

  resp, err := c.Tasks.Patch(project, taskqueue2, task, newLeaseSeconds, &taskqueue.Task{
                               // TODO: Fill required fields.
                             }).Context(ctx).Do()
  if err != nil {
    // TODO: Handle error.
  }
  // TODO: Use resp.
  _ = resp
}
package main

// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the TaskQueue API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/taskqueue
// 2. This sample uses Application Default Credentials for authentication.
//    If not already done, install the gcloud CLI from
//    https://cloud.google.com/sdk/ and run
//    'gcloud beta auth application-default login'
// 3. Install and update the Go dependencies by running 'go get -u' in the
//    project directory.

import (
  "golang.org/x/net/context"
  "golang.org/x/oauth2/google"

  "google.golang.org/api/taskqueue/v1beta2"
)

func main() {
  ctx := context.Background()
  hc, err := google.DefaultClient(ctx, taskqueue.TaskqueueScope)
  if err != nil {
    // TODO: Handle error.
  }
  c, err := taskqueue.New(hc)
  if err != nil {
    // TODO: Handle error.
  }

  // The project under which the queue lies.
  // TODO: Update placeholder value.
  project := "{MY-PROJECT}"


  // TODO: Update placeholder value.
  taskqueue2 := "{MY-TASKQUEUE}"


  // TODO: Update placeholder value.
  task := "{MY-TASK}"

  // The new lease in seconds.
  // TODO: Update placeholder value.
  newLeaseSeconds := int64(0)

  resp, err := c.Tasks.Update(project, taskqueue2, task, newLeaseSeconds, &taskqueue.Task{
                                // TODO: Fill required fields.
                              }).Context(ctx).Do()
  if err != nil {
    // TODO: Handle error.
  }
  // TODO: Use resp.
  _ = resp
}
