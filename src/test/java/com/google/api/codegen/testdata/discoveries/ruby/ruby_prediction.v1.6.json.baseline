
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Prediction API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/prediction
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/prediction_v1_6'
require 'json'

service = Google::Apis::PredictionV1_6::PredictionService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project associated with the model.
project = ''  # TODO: Update placeholder value.

# The name of a hosted model.
hosted_model_name = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::PredictionV1_6::Input.new

response = service.predict_hosted_model(project, hosted_model_name, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Prediction API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/prediction
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/prediction_v1_6'
require 'json'

service = Google::Apis::PredictionV1_6::PredictionService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project associated with the model.
project = ''  # TODO: Update placeholder value.

# The unique name for the predictive model.
id = ''  # TODO: Update placeholder value.

response = service.analyze_trained_model(project, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Prediction API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/prediction
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/prediction_v1_6'

service = Google::Apis::PredictionV1_6::PredictionService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project associated with the model.
project = ''  # TODO: Update placeholder value.

# The unique name for the predictive model.
id = ''  # TODO: Update placeholder value.

service.delete_trained_model(project, id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Prediction API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/prediction
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/prediction_v1_6'
require 'json'

service = Google::Apis::PredictionV1_6::PredictionService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project associated with the model.
project = ''  # TODO: Update placeholder value.

# The unique name for the predictive model.
id = ''  # TODO: Update placeholder value.

response = service.get_trained_model(project, id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Prediction API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/prediction
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/prediction_v1_6'
require 'json'

service = Google::Apis::PredictionV1_6::PredictionService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project associated with the model.
project = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::PredictionV1_6::Insert.new

response = service.insert_trained_model(project, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Prediction API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/prediction
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/prediction_v1_6'
require 'json'

service = Google::Apis::PredictionV1_6::PredictionService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project associated with the model.
project = ''  # TODO: Update placeholder value.

items = service.fetch_all(items: :items) do |token|
  service.list_trained_models(project, page_token: token)
end

items.each do |insert2|
  # TODO: Change code below to process each `insert2` resource:
  puts JSON.pretty_generate(insert2)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Prediction API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/prediction
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/prediction_v1_6'
require 'json'

service = Google::Apis::PredictionV1_6::PredictionService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project associated with the model.
project = ''  # TODO: Update placeholder value.

# The unique name for the predictive model.
id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::PredictionV1_6::Input.new

response = service.predict_trained_model(project, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Prediction API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/prediction
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/prediction_v1_6'
require 'json'

service = Google::Apis::PredictionV1_6::PredictionService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project associated with the model.
project = ''  # TODO: Update placeholder value.

# The unique name for the predictive model.
id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::PredictionV1_6::Update.new

response = service.update_trained_model(project, id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
