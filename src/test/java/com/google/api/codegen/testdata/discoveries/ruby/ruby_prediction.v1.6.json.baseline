
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Prediction API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/prediction
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/prediction_v1_6'
require 'json'

service = Google::Apis::PredictionV1_6::PredictionService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project associated with the model.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The name of a hosted model.
hosted_model_name = '{MY-HOSTED-MODEL-NAME}'  # TODO: Update placeholder value(s).

# TODO: Assign values to the desired members.
input_body = Google::Apis::PredictionV1_6::Input.new

# Perform the call
response = service.predict_hosted_model(project, hosted_model_name, input_body)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Prediction API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/prediction
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/prediction_v1_6'
require 'json'

service = Google::Apis::PredictionV1_6::PredictionService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project associated with the model.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The unique name for the predictive model.
id = '{MY-ID}'  # TODO: Update placeholder value(s).

# Perform the call
response = service.analyze_trained_model(project, id)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Prediction API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/prediction
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/prediction_v1_6'
require 'json'

service = Google::Apis::PredictionV1_6::PredictionService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project associated with the model.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The unique name for the predictive model.
id = '{MY-ID}'  # TODO: Update placeholder value(s).

# Perform the call
service.delete_trained_model(project, id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Prediction API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/prediction
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/prediction_v1_6'
require 'json'

service = Google::Apis::PredictionV1_6::PredictionService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project associated with the model.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The unique name for the predictive model.
id = '{MY-ID}'  # TODO: Update placeholder value(s).

# Perform the call
response = service.get_trained_model(project, id)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Prediction API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/prediction
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/prediction_v1_6'
require 'json'

service = Google::Apis::PredictionV1_6::PredictionService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project associated with the model.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# TODO: Assign values to the desired members.
insert_body = Google::Apis::PredictionV1_6::Insert.new

# Perform the call
response = service.insert_trained_model(project, insert_body)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Prediction API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/prediction
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/prediction_v1_6'
require 'json'

service = Google::Apis::PredictionV1_6::PredictionService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project associated with the model.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# Perform the call
items = service.fetch_all(items: :items) do |token|
  service.list_trained_models(project, page_token: token)
end

items.each do |insert2|
  # TODO: Use insert2
  puts JSON.pretty_generate(insert2)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Prediction API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/prediction
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/prediction_v1_6'
require 'json'

service = Google::Apis::PredictionV1_6::PredictionService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project associated with the model.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The unique name for the predictive model.
id = '{MY-ID}'  # TODO: Update placeholder value(s).

# TODO: Assign values to the desired members.
input_body = Google::Apis::PredictionV1_6::Input.new

# Perform the call
response = service.predict_trained_model(project, id, input_body)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Prediction API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/prediction
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/prediction_v1_6'
require 'json'

service = Google::Apis::PredictionV1_6::PredictionService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project associated with the model.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The unique name for the predictive model.
id = '{MY-ID}'  # TODO: Update placeholder value(s).

# TODO: Assign values to the desired members.
update_body = Google::Apis::PredictionV1_6::Update.new

# Perform the call
response = service.update_trained_model(project, id, update_body)

# TODO: Use response
puts JSON.pretty_generate(response)
