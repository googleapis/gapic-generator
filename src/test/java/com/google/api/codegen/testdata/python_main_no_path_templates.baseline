============== file: example/no_templates_api_service_client.py ==============
# Copyright 2016 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# EDITING INSTRUCTIONS
# This file was generated from the file
# https://github.com/google/googleapis/blob/master/no_path_templates.proto,
# and updates to that file get reflected here through a refresh process.
# For the short term, the refresh process will only be runnable by Google engineers.
#
# The only allowed edits are to method and file documentation. A 3-way
# merge preserves those additions if the generated source changes.

"""Accesses the google.cloud.example.v1 NoTemplatesAPIService API."""

import json
import os
import pkg_resources
import platform

from google.gax import api_callable
from google.gax import config
from google.gax import path_template
import google.gax

from google.cloud.grpc.example.v1 import no_path_templates_pb2


class NoTemplatesAPIServiceClient(object):
    SERVICE_ADDRESS = 'no-path-templates.googleapis.com'
    """The default address of the service."""

    DEFAULT_SERVICE_PORT = 443
    """The default port of the service."""

    _CODE_GEN_NAME_VERSION = 'gapic/0.1.0'

    _GAX_VERSION = pkg_resources.get_distribution('google-gax').version

    # The scopes needed to make gRPC calls to all of the methods defined in
    # this service
    _ALL_SCOPES = (
    )

    def __init__(
            self,
            service_path=SERVICE_ADDRESS,
            port=DEFAULT_SERVICE_PORT,
            channel=None,
            credentials=None,
            ssl_credentials=None,
            scopes=None,
            client_config=None,
            app_name='gax',
            app_version=_GAX_VERSION):
        """Constructor.

        Args:
          service_path (string): The domain name of the API remote host.
          port (int): The port on which to connect to the remote host.
          channel (:class:`grpc.Channel`): A ``Channel`` instance through
            which to make calls.
          credentials (object): The authorization credentials to attach to
            requests. These credentials identify this application to the
            service.
          ssl_credentials (:class:`grpc.ChannelCredentials`): A
            ``ChannelCredentials`` instance for use with an SSL-enabled
            channel.
          scopes (list[string]): A list of OAuth2 scopes to attach to requests.
          client_config (dict):
            A dictionary for call options for each method. See
            :func:`google.gax.construct_settings` for the structure of
            this data. Falls back to the default config if not specified
            or the specified config is missing data points.
          app_name (string): The codename of the calling service.
          app_version (string): The version of the calling service.

        Returns:
          A NoTemplatesAPIServiceClient object.
        """
        if scopes is None:
            scopes = self._ALL_SCOPES
        if client_config is None:
            client_config = {}
        goog_api_client = '{}/{} {} gax/{} python/{}'.format(
            app_name,
            app_version,
            self._CODE_GEN_NAME_VERSION,
            self._GAX_VERSION,
            platform.python_version()
        )
        metadata = [('x-goog-api-client', goog_api_client)]
        default_client_config = json.loads(pkg_resources.resource_string(
            __name__, 'no_templates_api_service_client_config.json').decode())
        defaults = api_callable.construct_settings(
            'google.cloud.example.v1.NoTemplatesAPIService',
            default_client_config,
            client_config,
            config.STATUS_CODE_NAMES,
            kwargs={'metadata': metadata})
        self.no_templates_api_service_stub = config.create_stub(
            no_path_templates_pb2.NoTemplatesAPIServiceStub,
            channel=channel,
            service_path=service_path,
            service_port=port,
            credentials=credentials,
            scopes=scopes,
            ssl_credentials=ssl_credentials)

        self._increment = api_callable.create_api_call(
            self.no_templates_api_service_stub.Increment,
            settings=defaults['increment'])

    # Service calls
    def increment(
            self,
            options=None):
        """
        Increments something.
        Sometimes the comments are indented, but Sphinx doesn't like that. So
        in Python we trim all
        leading
        and trailing
        whitespace.

        Example:
          >>> from example import no_templates_api_service_client
          >>> api = no_templates_api_service_client.NoTemplatesAPIServiceClient()
          >>> api.increment()

        Args:
          options (:class:`google.gax.CallOptions`): Overrides the default
            settings for this call, e.g, timeout, retries etc.

        Raises:
          :exc:`google.gax.errors.GaxError` if the RPC is aborted.
        """
        request = no_path_templates_pb2.IncrementRequest()
        self._increment(request, options)

