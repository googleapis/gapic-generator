
<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API and check quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service
$service = new Google_Service_Replicapoolupdater($client);

// The Google Developers Console project name.
$project = '';
// The name of the zone in which the update's target resides.
$zone = '';
// The name of the update.
$rollingUpdate = '';

$response = $service->rollingUpdates->cancelRollingUpdates($project, $zone, $rollingUpdate);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API and check quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service
$service = new Google_Service_Replicapoolupdater($client);

// The Google Developers Console project name.
$project = '';
// The name of the zone in which the update's target resides.
$zone = '';
// The name of the update.
$rollingUpdate = '';

$response = $service->rollingUpdates->getRollingUpdates($project, $zone, $rollingUpdate);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API and check quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service
$service = new Google_Service_Replicapoolupdater($client);

// The Google Developers Console project name.
$project = '';
// The name of the zone in which the update's target resides.
$zone = '';

$response = $service->rollingUpdates->insertRollingUpdates($project, $zone);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API and check quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service
$service = new Google_Service_Replicapoolupdater($client);

// The Google Developers Console project name.
$project = '';
// The name of the zone in which the update's target resides.
$zone = '';

$response = $service->rollingUpdates->listRollingUpdates($project, $zone);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API and check quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service
$service = new Google_Service_Replicapoolupdater($client);

// The Google Developers Console project name.
$project = '';
// The name of the zone in which the update's target resides.
$zone = '';
// The name of the update.
$rollingUpdate = '';

$response = $service->rollingUpdates->listInstanceUpdatesRollingUpdates($project, $zone, $rollingUpdate);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API and check quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service
$service = new Google_Service_Replicapoolupdater($client);

// The Google Developers Console project name.
$project = '';
// The name of the zone in which the update's target resides.
$zone = '';
// The name of the update.
$rollingUpdate = '';

$response = $service->rollingUpdates->pauseRollingUpdates($project, $zone, $rollingUpdate);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API and check quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service
$service = new Google_Service_Replicapoolupdater($client);

// The Google Developers Console project name.
$project = '';
// The name of the zone in which the update's target resides.
$zone = '';
// The name of the update.
$rollingUpdate = '';

$response = $service->rollingUpdates->resumeRollingUpdates($project, $zone, $rollingUpdate);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API and check quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service
$service = new Google_Service_Replicapoolupdater($client);

// The Google Developers Console project name.
$project = '';
// The name of the zone in which the update's target resides.
$zone = '';
// The name of the update.
$rollingUpdate = '';

$response = $service->rollingUpdates->rollbackRollingUpdates($project, $zone, $rollingUpdate);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API and check quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service
$service = new Google_Service_Replicapoolupdater($client);

// Name of the project scoping this request.
$project = '';
// Name of the zone scoping this request.
$zone = '';
// Name of the operation resource to return.
$operation = '';

$response = $service->zoneOperations->getZoneOperations($project, $zone, $operation);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API and check quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service
$service = new Google_Service_Replicapoolupdater($client);

// Name of the project scoping this request.
$project = '';
// Name of the zone scoping this request.
$zone = '';

$response = $service->zoneOperations->listZoneOperations($project, $zone);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

