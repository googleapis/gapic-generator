
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service.
$service = new Google_Service_Replicapoolupdater($client);

// * The Google Developers Console project name.
$project = '{MY-PROJECT}';

// * The name of the zone in which the update's target resides.
$zone = '{MY-ZONE}';

// * The name of the update.
$rollingUpdate = '{MY-ROLLING-UPDATE}';

$response = $service->rollingUpdates->cancel($project, $zone, $rollingUpdate);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service.
$service = new Google_Service_Replicapoolupdater($client);

// * The Google Developers Console project name.
$project = '{MY-PROJECT}';

// * The name of the zone in which the update's target resides.
$zone = '{MY-ZONE}';

// * The name of the update.
$rollingUpdate = '{MY-ROLLING-UPDATE}';

$response = $service->rollingUpdates->get($project, $zone, $rollingUpdate);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service.
$service = new Google_Service_Replicapoolupdater($client);

// * The Google Developers Console project name.
$project = '{MY-PROJECT}';

// * The name of the zone in which the update's target resides.
$zone = '{MY-ZONE}';

$postBody = new Google_Service_Replicapoolupdater_RollingUpdate($client);

$response = $service->rollingUpdates->insert($project, $zone, $postBody);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service.
$service = new Google_Service_Replicapoolupdater($client);

// * The Google Developers Console project name.
$project = '{MY-PROJECT}';

// * The name of the zone in which the update's target resides.
$zone = '{MY-ZONE}';

$response = $service->rollingUpdates->listRollingUpdates($project, $zone);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the element.
}

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service.
$service = new Google_Service_Replicapoolupdater($client);

// * The Google Developers Console project name.
$project = '{MY-PROJECT}';

// * The name of the zone in which the update's target resides.
$zone = '{MY-ZONE}';

// * The name of the update.
$rollingUpdate = '{MY-ROLLING-UPDATE}';

$response = $service->rollingUpdates->listInstanceUpdates($project, $zone, $rollingUpdate);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the element.
}

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service.
$service = new Google_Service_Replicapoolupdater($client);

// * The Google Developers Console project name.
$project = '{MY-PROJECT}';

// * The name of the zone in which the update's target resides.
$zone = '{MY-ZONE}';

// * The name of the update.
$rollingUpdate = '{MY-ROLLING-UPDATE}';

$response = $service->rollingUpdates->pause($project, $zone, $rollingUpdate);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service.
$service = new Google_Service_Replicapoolupdater($client);

// * The Google Developers Console project name.
$project = '{MY-PROJECT}';

// * The name of the zone in which the update's target resides.
$zone = '{MY-ZONE}';

// * The name of the update.
$rollingUpdate = '{MY-ROLLING-UPDATE}';

$response = $service->rollingUpdates->resume($project, $zone, $rollingUpdate);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service.
$service = new Google_Service_Replicapoolupdater($client);

// * The Google Developers Console project name.
$project = '{MY-PROJECT}';

// * The name of the zone in which the update's target resides.
$zone = '{MY-ZONE}';

// * The name of the update.
$rollingUpdate = '{MY-ROLLING-UPDATE}';

$response = $service->rollingUpdates->rollback($project, $zone, $rollingUpdate);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service.
$service = new Google_Service_Replicapoolupdater($client);

// * Name of the project scoping this request.
$project = '{MY-PROJECT}';

// * Name of the zone scoping this request.
$zone = '{MY-ZONE}';

// * Name of the operation resource to return.
$operation = '{MY-OPERATION}';

$response = $service->zoneOperations->get($project, $zone, $operation);

<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google Compute Engine Instance Group Updater API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/replicapoolupdater
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    'gcloud beta auth application-default login'
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Replicapoolupdater service.
$service = new Google_Service_Replicapoolupdater($client);

// * Name of the project scoping this request.
$project = '{MY-PROJECT}';

// * Name of the zone scoping this request.
$zone = '{MY-ZONE}';

$response = $service->zoneOperations->listZoneOperations($project, $zone);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the element.
}

