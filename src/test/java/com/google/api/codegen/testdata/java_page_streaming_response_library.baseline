============== file: src/main/java/com/google/gcloud/pubsub/spi/PagedResponseWrappers.java ==============
/*
 * Copyright 2016, Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.google.gcloud.pubsub.spi;

import com.google.api.gax.grpc.CallContext;
import com.google.api.gax.grpc.PagedListDescriptor;
import com.google.api.gax.grpc.PagedListResponseImpl;
import com.google.api.gax.grpc.UnaryCallable;
import com.google.example.library.v1.Book;
import com.google.example.library.v1.BookName;
import com.google.example.library.v1.FindRelatedBooksRequest;
import com.google.example.library.v1.FindRelatedBooksResponse;
import com.google.example.library.v1.ListBooksRequest;
import com.google.example.library.v1.ListBooksResponse;
import com.google.example.library.v1.ListShelvesRequest;
import com.google.example.library.v1.ListShelvesResponse;
import com.google.example.library.v1.ListStringsRequest;
import com.google.example.library.v1.ListStringsResponse;
import com.google.example.library.v1.Shelf;

// AUTO-GENERATED DOCUMENTATION AND CLASS
/**
 * Wrapper class to contain paged response types for page streaming methods.
 * Each static class inside this wrapper class is used as the return type of
 * one of an API method that implements the page streaming pattern.
 */
@javax.annotation.Generated("by GAPIC")
public class PagedResponseWrappers {

  public static class ListShelvesPagedResponse extends PagedListResponseImpl<ListShelvesRequest, ListShelvesResponse, Shelf> {

    public ListShelvesPagedResponse(
        UnaryCallable<ListShelvesRequest, ListShelvesResponse> callable,
        PagedListDescriptor<ListShelvesRequest, ListShelvesResponse, Shelf> pageDescriptor,
        ListShelvesRequest request,
        CallContext context) {
      super(callable, pageDescriptor, request, context);
    }


  }

  public static class ListBooksPagedResponse extends PagedListResponseImpl<ListBooksRequest, ListBooksResponse, Book> {

    public ListBooksPagedResponse(
        UnaryCallable<ListBooksRequest, ListBooksResponse> callable,
        PagedListDescriptor<ListBooksRequest, ListBooksResponse, Book> pageDescriptor,
        ListBooksRequest request,
        CallContext context) {
      super(callable, pageDescriptor, request, context);
    }


  }

  public static class ListStringsPagedResponse extends PagedListResponseImpl<ListStringsRequest, ListStringsResponse, String> {

    public ListStringsPagedResponse(
        UnaryCallable<ListStringsRequest, ListStringsResponse> callable,
        PagedListDescriptor<ListStringsRequest, ListStringsResponse, String> pageDescriptor,
        ListStringsRequest request,
        CallContext context) {
      super(callable, pageDescriptor, request, context);
    }


  }

  public static class FindRelatedBooksPagedResponse extends PagedListResponseImpl<FindRelatedBooksRequest, FindRelatedBooksResponse, String> {

    public FindRelatedBooksPagedResponse(
        UnaryCallable<FindRelatedBooksRequest, FindRelatedBooksResponse> callable,
        PagedListDescriptor<FindRelatedBooksRequest, FindRelatedBooksResponse, String> pageDescriptor,
        FindRelatedBooksRequest request,
        CallContext context) {
      super(callable, pageDescriptor, request, context);
    }
    public Iterable<BookName> iterateAllAsBookName() {
      return Iterables.transform(iterateAllElements(), new Function<String, BookName>() {
          @Override
          public BookName apply(String arg0) {
            return BookName.parse(arg0);
          }
        }
      );
    }

  }

}
