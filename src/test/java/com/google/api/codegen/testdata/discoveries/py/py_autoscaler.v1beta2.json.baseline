
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Autoscaler API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/autoscaler
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('autoscaler', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `delete` method:

# Project ID of Autoscaler resource.
project = '{MY-PROJECT}'

# Zone name of Autoscaler resource.
zone = '{MY-ZONE}'

# Name of the Autoscaler resource.
autoscaler = '{MY-AUTOSCALER}'


request = service.autoscalers().delete(project=project, zone=zone, autoscaler=autoscaler)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Autoscaler API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/autoscaler
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('autoscaler', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `get` method:

# Project ID of Autoscaler resource.
project = '{MY-PROJECT}'

# Zone name of Autoscaler resource.
zone = '{MY-ZONE}'

# Name of the Autoscaler resource.
autoscaler = '{MY-AUTOSCALER}'


request = service.autoscalers().get(project=project, zone=zone, autoscaler=autoscaler)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Autoscaler API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/autoscaler
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('autoscaler', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `insert` method:

# Project ID of Autoscaler resource.
project = '{MY-PROJECT}'

# Zone name of Autoscaler resource.
zone = '{MY-ZONE}'


autoscaler_body = {
    # TODO: Add desired entries of the request body.
}


request = service.autoscalers().insert(project=project, zone=zone, body=autoscaler_body)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Autoscaler API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/autoscaler
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('autoscaler', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `list` method:

# Project ID of Autoscaler resource.
project = '{MY-PROJECT}'

# Zone name of Autoscaler resource.
zone = '{MY-ZONE}'


autoscalers = service.autoscalers()
request = autoscalers.list(project=project, zone=zone)
while request is not None:
    response = request.execute()

    for autoscaler in response['items']:
        # TODO: Change code below to process each `autoscaler` resource:
        pprint(autoscaler)

    request = autoscalers.list_next(previous_request=request, previous_response=response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Autoscaler API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/autoscaler
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('autoscaler', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `patch` method:

# Project ID of Autoscaler resource.
project = '{MY-PROJECT}'

# Zone name of Autoscaler resource.
zone = '{MY-ZONE}'

# Name of the Autoscaler resource.
autoscaler = '{MY-AUTOSCALER}'


autoscaler_body = {
    # TODO: Add desired entries of the request body to be changed.
}


request = service.autoscalers().patch(project=project, zone=zone, autoscaler=autoscaler, body=autoscaler_body)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Autoscaler API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/autoscaler
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('autoscaler', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `update` method:

# Project ID of Autoscaler resource.
project = '{MY-PROJECT}'

# Zone name of Autoscaler resource.
zone = '{MY-ZONE}'

# Name of the Autoscaler resource.
autoscaler = '{MY-AUTOSCALER}'


autoscaler_body = {
    # TODO: Add desired entries of the request body.
}


request = service.autoscalers().update(project=project, zone=zone, autoscaler=autoscaler, body=autoscaler_body)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Autoscaler API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/autoscaler
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('autoscaler', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `delete` method:

# project
project = '{MY-PROJECT}'

# zone
zone = '{MY-ZONE}'  # ex: 'us-central1-f'

<<<<<<< e199ef123dc787d193bdd6e13ee92dc514de6f48
# operation
=======
zone = '{MY-ZONE}'


>>>>>>> Add Go 3LO and API key auth support (#453)
operation = '{MY-OPERATION}'


request = service.zoneOperations().delete(project=project, zone=zone, operation=operation)
request.execute()
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Autoscaler API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/autoscaler
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('autoscaler', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `get` method:

# project
project = '{MY-PROJECT}'

# zone
zone = '{MY-ZONE}'  # ex: 'us-central1-f'

<<<<<<< e199ef123dc787d193bdd6e13ee92dc514de6f48
# operation
=======
zone = '{MY-ZONE}'


>>>>>>> Add Go 3LO and API key auth support (#453)
operation = '{MY-OPERATION}'


request = service.zoneOperations().get(project=project, zone=zone, operation=operation)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Autoscaler API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/autoscaler
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('autoscaler', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `list` method:

# project
project = '{MY-PROJECT}'

# zone
zone = '{MY-ZONE}'  # ex: 'us-central1-f'

<<<<<<< e199ef123dc787d193bdd6e13ee92dc514de6f48
=======
zone = '{MY-ZONE}'
>>>>>>> Add Go 3LO and API key auth support (#453)

zoneOperations = service.zoneOperations()
request = zoneOperations.list(project=project, zone=zone)
while request is not None:
    response = request.execute()

    for operation in response['items']:
        # TODO: Change code below to process each `operation` resource:
        pprint(operation)

    request = zoneOperations.list_next(previous_request=request, previous_response=response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Compute Engine Autoscaler API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/autoscaler
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('autoscaler', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `list` method:

# project
project = '{MY-PROJECT}'


zones = service.zones()
request = zones.list(project=project)
while request is not None:
    response = request.execute()

    for zone in response['items']:
        # TODO: Change code below to process each `zone` resource:
        pprint(zone)

    request = zones.list_next(previous_request=request, previous_response=response)
