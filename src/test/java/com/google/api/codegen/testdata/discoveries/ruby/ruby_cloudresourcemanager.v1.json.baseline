
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Resource Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudresourcemanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/cloudresourcemanager_v1'

service = Google::Apis::CloudresourcemanagerV1::CloudResourceManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the operation resource.
name = 'operations/my-operation'  # TODO: Update placeholder value.

response = service.get_operation(name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Resource Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudresourcemanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/cloudresourcemanager_v1'

service = Google::Apis::CloudresourcemanagerV1::CloudResourceManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The resource name of the Organization to fetch, e.g. "organizations/1234".
name = 'organizations/my-organization'  # TODO: Update placeholder value.

response = service.get_organization(name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Resource Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudresourcemanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/cloudresourcemanager_v1'

service = Google::Apis::CloudresourcemanagerV1::CloudResourceManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being requested.
# `resource` is usually specified as a path. For example, a Project
# resource is specified as `projects/{project}`.
resource = 'organizations/my-organization'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::CloudresourcemanagerV1::GetIamPolicyRequest.new

response = service.get_organization_iam_policy(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Resource Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudresourcemanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/cloudresourcemanager_v1'

service = Google::Apis::CloudresourcemanagerV1::CloudResourceManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::CloudresourcemanagerV1::SearchOrganizationsRequest.new

organizations = service.fetch_all(items: :organizations) do |token|
  request_body.page_token = token
  service.search_organizations(request_body)
end

organizations.each do |organization|
  # TODO: Change code below to process each `organization` resource:
  puts organization.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Resource Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudresourcemanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/cloudresourcemanager_v1'

service = Google::Apis::CloudresourcemanagerV1::CloudResourceManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being specified.
# `resource` is usually specified as a path. For example, a Project
# resource is specified as `projects/{project}`.
resource = 'organizations/my-organization'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::CloudresourcemanagerV1::SetIamPolicyRequest.new

response = service.set_organization_iam_policy(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Resource Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudresourcemanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/cloudresourcemanager_v1'

service = Google::Apis::CloudresourcemanagerV1::CloudResourceManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy detail is being requested.
# `resource` is usually specified as a path. For example, a Project
# resource is specified as `projects/{project}`.
resource = 'organizations/my-organization'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::CloudresourcemanagerV1::TestIamPermissionsRequest.new

response = service.test_organization_iam_permissions(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Resource Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudresourcemanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/cloudresourcemanager_v1'

service = Google::Apis::CloudresourcemanagerV1::CloudResourceManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::CloudresourcemanagerV1::Project.new

response = service.create_project(request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Resource Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudresourcemanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/cloudresourcemanager_v1'

service = Google::Apis::CloudresourcemanagerV1::CloudResourceManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The Project ID (for example, `foo-bar-123`).
# Required.
project_id = 'my-project-id'  # TODO: Update placeholder value.

service.delete_project(project_id)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Resource Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudresourcemanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/cloudresourcemanager_v1'

service = Google::Apis::CloudresourcemanagerV1::CloudResourceManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The Project ID (for example, `my-project-123`).
# Required.
project_id = 'my-project-id'  # TODO: Update placeholder value.

response = service.get_project(project_id)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Resource Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudresourcemanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/cloudresourcemanager_v1'

service = Google::Apis::CloudresourcemanagerV1::CloudResourceManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The Project ID (for example, `my-project-123`).
# Required.
project_id = 'my-project-id'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::CloudresourcemanagerV1::GetAncestryRequest.new

response = service.get_project_ancestry(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Resource Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudresourcemanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/cloudresourcemanager_v1'

service = Google::Apis::CloudresourcemanagerV1::CloudResourceManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being requested.
# `resource` is usually specified as a path. For example, a Project
# resource is specified as `projects/{project}`.
resource = 'my-resource'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::CloudresourcemanagerV1::GetIamPolicyRequest.new

response = service.get_project_iam_policy(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Resource Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudresourcemanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/cloudresourcemanager_v1'

service = Google::Apis::CloudresourcemanagerV1::CloudResourceManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

projects = service.fetch_all(items: :projects) do |token|
  service.list_projects(page_token: token)
end

projects.each do |project|
  # TODO: Change code below to process each `project` resource:
  puts project.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Resource Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudresourcemanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/cloudresourcemanager_v1'

service = Google::Apis::CloudresourcemanagerV1::CloudResourceManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being specified.
# `resource` is usually specified as a path. For example, a Project
# resource is specified as `projects/{project}`.
resource = 'my-resource'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::CloudresourcemanagerV1::SetIamPolicyRequest.new

response = service.set_project_iam_policy(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Resource Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudresourcemanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/cloudresourcemanager_v1'

service = Google::Apis::CloudresourcemanagerV1::CloudResourceManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy detail is being requested.
# `resource` is usually specified as a path. For example, a Project
# resource is specified as `projects/{project}`.
resource = 'my-resource'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::CloudresourcemanagerV1::TestIamPermissionsRequest.new

response = service.test_project_iam_permissions(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Resource Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudresourcemanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/cloudresourcemanager_v1'

service = Google::Apis::CloudresourcemanagerV1::CloudResourceManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID (for example, `foo-bar-123`).
# Required.
project_id = 'my-project-id'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::CloudresourcemanagerV1::UndeleteProjectRequest.new

service.undelete_project(project_id, request_body)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Resource Manager API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/cloudresourcemanager
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/cloudresourcemanager_v1'

service = Google::Apis::CloudresourcemanagerV1::CloudResourceManagerService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project ID (for example, `my-project-123`).
# Required.
project_id = 'my-project-id'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::CloudresourcemanagerV1::Project.new

response = service.update_project(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
