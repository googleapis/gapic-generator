
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the TaskQueue API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/taskqueue
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the taskqueue service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('taskqueue', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'get' method:

# * The project under which the queue lies.
project = ''

# * The id of the taskqueue to get the properties of.
taskqueue = ''

request = service.taskqueues().get(project=project, taskqueue=taskqueue)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the TaskQueue API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/taskqueue
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the taskqueue service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('taskqueue', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'delete' method:

# * The project under which the queue lies.
project = ''

# * The taskqueue to delete a task from.
taskqueue = ''

# * The id of the task to delete.
task = ''

request = service.tasks().delete(project=project, taskqueue=taskqueue, task=task)
request.execute()
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the TaskQueue API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/taskqueue
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the taskqueue service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('taskqueue', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'get' method:

# * The project under which the queue lies.
project = ''

# * The taskqueue in which the task belongs.
taskqueue = ''

# * The task to get properties of.
task = ''

request = service.tasks().get(project=project, taskqueue=taskqueue, task=task)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the TaskQueue API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/taskqueue
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the taskqueue service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('taskqueue', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'insert' method:

# * The project under which the queue lies
project = ''

# * The taskqueue to insert the task into
taskqueue = ''

task_body = {
# TODO: Add desired entries of the 'task_body' dict
}

request = service.tasks().insert(project=project, taskqueue=taskqueue, body=task_body)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the TaskQueue API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/taskqueue
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the taskqueue service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('taskqueue', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'lease' method:

# * The project under which the queue lies.
project = ''

# * The taskqueue to lease a task from.
taskqueue = ''

# * The number of tasks to lease.
numTasks = 0

# * The lease in seconds.
leaseSecs = 0

request = service.tasks().lease(project=project, taskqueue=taskqueue, numTasks=numTasks, leaseSecs=leaseSecs)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the TaskQueue API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/taskqueue
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the taskqueue service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('taskqueue', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'list' method:

# * The project under which the queue lies.
project = ''

# * The id of the taskqueue to list tasks from.
taskqueue = ''

request = service.tasks().list(project=project, taskqueue=taskqueue)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the TaskQueue API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/taskqueue
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the taskqueue service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('taskqueue', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'patch' method:

# * The project under which the queue lies.
project = ''


taskqueue = ''


task = ''

# * The new lease in seconds.
newLeaseSeconds = 0

task_body = {
# TODO: Add desired entries of the 'task_body' dict to be changed
}

request = service.tasks().patch(project=project, taskqueue=taskqueue, task=task, newLeaseSeconds=newLeaseSeconds, body=task_body)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the TaskQueue API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/taskqueue
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the taskqueue service object (version v1beta2) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('taskqueue', 'v1beta2', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'update' method:

# * The project under which the queue lies.
project = ''


taskqueue = ''


task = ''

# * The new lease in seconds.
newLeaseSeconds = 0

task_body = {
# TODO: Add desired entries of the 'task_body' dict
}

request = service.tasks().update(project=project, taskqueue=taskqueue, task=task, newLeaseSeconds=newLeaseSeconds, body=task_body)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
pprint(response)
