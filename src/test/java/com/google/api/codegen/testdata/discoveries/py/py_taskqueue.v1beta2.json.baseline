
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the TaskQueue API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/taskqueue
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('taskqueue', 'v1beta2', credentials=credentials)

# The project under which the queue lies.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The id of the taskqueue to get the properties of.
taskqueue = '{MY-TASKQUEUE}'  # TODO: Update placeholder value(s).

request = service.taskqueues().get(project=project, taskqueue=taskqueue)
response = request.execute()

# TODO: Use response
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the TaskQueue API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/taskqueue
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('taskqueue', 'v1beta2', credentials=credentials)

# The project under which the queue lies.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The taskqueue to delete a task from.
taskqueue = '{MY-TASKQUEUE}'  # TODO: Update placeholder value(s).

# The id of the task to delete.
task = '{MY-TASK}'  # TODO: Update placeholder value(s).

request = service.tasks().delete(project=project, taskqueue=taskqueue, task=task)
request.execute()
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the TaskQueue API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/taskqueue
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('taskqueue', 'v1beta2', credentials=credentials)

# The project under which the queue lies.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The taskqueue in which the task belongs.
taskqueue = '{MY-TASKQUEUE}'  # TODO: Update placeholder value(s).

# The task to get properties of.
task = '{MY-TASK}'  # TODO: Update placeholder value(s).

request = service.tasks().get(project=project, taskqueue=taskqueue, task=task)
response = request.execute()

# TODO: Use response
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the TaskQueue API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/taskqueue
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('taskqueue', 'v1beta2', credentials=credentials)

# The project under which the queue lies
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The taskqueue to insert the task into
taskqueue = '{MY-TASKQUEUE}'  # TODO: Update placeholder value(s).

task_body = {
    # TODO: Add the desired entries.
}


request = service.tasks().insert(project=project, taskqueue=taskqueue, body=task_body)
response = request.execute()

# TODO: Use response
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the TaskQueue API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/taskqueue
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('taskqueue', 'v1beta2', credentials=credentials)

# The project under which the queue lies.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The taskqueue to lease a task from.
taskqueue = '{MY-TASKQUEUE}'  # TODO: Update placeholder value(s).

# The number of tasks to lease.
numTasks = 0  # TODO: Update placeholder value(s).

# The lease in seconds.
leaseSecs = 0  # TODO: Update placeholder value(s).

request = service.tasks().lease(project=project, taskqueue=taskqueue, numTasks=numTasks, leaseSecs=leaseSecs)
response = request.execute()

# TODO: Use response
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the TaskQueue API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/taskqueue
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('taskqueue', 'v1beta2', credentials=credentials)

# The project under which the queue lies.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The id of the taskqueue to list tasks from.
taskqueue = '{MY-TASKQUEUE}'  # TODO: Update placeholder value(s).

request = service.tasks().list(project=project, taskqueue=taskqueue)
response = request.execute()

# TODO: Use response
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the TaskQueue API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/taskqueue
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('taskqueue', 'v1beta2', credentials=credentials)

# The project under which the queue lies.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).


taskqueue = '{MY-TASKQUEUE}'  # TODO: Update placeholder value(s).


task = '{MY-TASK}'  # TODO: Update placeholder value(s).

# The new lease in seconds.
newLeaseSeconds = 0  # TODO: Update placeholder value(s).

task_body = {
    # TODO: Add the desired entries to be changed.
}


request = service.tasks().patch(project=project, taskqueue=taskqueue, task=task, newLeaseSeconds=newLeaseSeconds, body=task_body)
response = request.execute()

# TODO: Use response
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the TaskQueue API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/taskqueue
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('taskqueue', 'v1beta2', credentials=credentials)

# The project under which the queue lies.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).


taskqueue = '{MY-TASKQUEUE}'  # TODO: Update placeholder value(s).


task = '{MY-TASK}'  # TODO: Update placeholder value(s).

# The new lease in seconds.
newLeaseSeconds = 0  # TODO: Update placeholder value(s).

task_body = {
    # TODO: Add the desired entries.
}


request = service.tasks().update(project=project, taskqueue=taskqueue, task=task, newLeaseSeconds=newLeaseSeconds, body=task_body)
response = request.execute()

# TODO: Use response
pprint(response)
