
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Stackdriver Debugger API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/clouddebugger
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('clouddebugger', 'v2', credentials=credentials)

# Identifies the debuggee.
debuggee_id = ''  # TODO: Update placeholder value.

request = service.controller().debuggees().breakpoints().list(debuggeeId=debuggee_id)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Stackdriver Debugger API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/clouddebugger
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('clouddebugger', 'v2', credentials=credentials)

# Identifies the debuggee being debugged.
debuggee_id = ''  # TODO: Update placeholder value.

# Breakpoint identifier, unique in the scope of the debuggee.
id_ = ''  # TODO: Update placeholder value.

update_active_breakpoint_request_body = {
    # TODO: Add desired entries to the request body. All existing entries
    # will be replaced.
}

request = service.controller().debuggees().breakpoints().update(debuggeeId=debuggee_id, id=id_, body=update_active_breakpoint_request_body)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Stackdriver Debugger API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/clouddebugger
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('clouddebugger', 'v2', credentials=credentials)

register_debuggee_request_body = {
    # TODO: Add desired entries to the request body.
}

request = service.controller().debuggees().register(body=register_debuggee_request_body)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Stackdriver Debugger API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/clouddebugger
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('clouddebugger', 'v2', credentials=credentials)

# ID of the debuggee whose breakpoint to delete.
debuggee_id = ''  # TODO: Update placeholder value.

# ID of the breakpoint to delete.
breakpoint_id = ''  # TODO: Update placeholder value.

request = service.debugger().debuggees().breakpoints().delete(debuggeeId=debuggee_id, breakpointId=breakpoint_id)
request.execute()
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Stackdriver Debugger API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/clouddebugger
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('clouddebugger', 'v2', credentials=credentials)

# ID of the debuggee whose breakpoint to get.
debuggee_id = ''  # TODO: Update placeholder value.

# ID of the breakpoint to get.
breakpoint_id = ''  # TODO: Update placeholder value.

request = service.debugger().debuggees().breakpoints().get(debuggeeId=debuggee_id, breakpointId=breakpoint_id)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Stackdriver Debugger API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/clouddebugger
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('clouddebugger', 'v2', credentials=credentials)

# ID of the debuggee whose breakpoints to list.
debuggee_id = ''  # TODO: Update placeholder value.

request = service.debugger().debuggees().breakpoints().list(debuggeeId=debuggee_id)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Stackdriver Debugger API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/clouddebugger
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('clouddebugger', 'v2', credentials=credentials)

# ID of the debuggee where the breakpoint is to be set.
debuggee_id = ''  # TODO: Update placeholder value.

breakpoint_body = {
    # TODO: Add desired entries to the request body.
}

request = service.debugger().debuggees().breakpoints().set(debuggeeId=debuggee_id, body=breakpoint_body)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Stackdriver Debugger API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/clouddebugger
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('clouddebugger', 'v2', credentials=credentials)

request = service.debugger().debuggees().list()
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
