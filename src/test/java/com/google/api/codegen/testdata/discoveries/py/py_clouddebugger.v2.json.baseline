
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Stackdriver Debugger API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/clouddebugger
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials


# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('clouddebugger', 'v2', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `list` method:

# Identifies the debuggee.
debuggeeId = '{MY-DEBUGGEE-ID}'


request = service.controller().debuggees().breakpoints().list(debuggeeId=debuggeeId)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Stackdriver Debugger API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/clouddebugger
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials


# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('clouddebugger', 'v2', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `update` method:

# Identifies the debuggee being debugged.
debuggeeId = '{MY-DEBUGGEE-ID}'

# Breakpoint identifier, unique in the scope of the debuggee.
id = '{MY-ID}'


update_active_breakpoint_request_body = {
    # TODO: Add desired entries of the request body.
}


request = service.controller().debuggees().breakpoints().update(debuggeeId=debuggeeId, id=id, body=update_active_breakpoint_request_body)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Stackdriver Debugger API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/clouddebugger
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials


# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('clouddebugger', 'v2', credentials=credentials)


register_debuggee_request_body = {
    # TODO: Add desired entries of the request body.
}


request = service.controller().debuggees().register(body=register_debuggee_request_body)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Stackdriver Debugger API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/clouddebugger
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from googleapiclient import discovery
from oauth2client.client import GoogleCredentials


# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('clouddebugger', 'v2', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `delete` method:

# ID of the debuggee whose breakpoint to delete.
debuggeeId = '{MY-DEBUGGEE-ID}'

# ID of the breakpoint to delete.
breakpointId = '{MY-BREAKPOINT-ID}'


request = service.debugger().debuggees().breakpoints().delete(debuggeeId=debuggeeId, breakpointId=breakpointId)
request.execute()
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Stackdriver Debugger API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/clouddebugger
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials


# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('clouddebugger', 'v2', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `get` method:

# ID of the debuggee whose breakpoint to get.
debuggeeId = '{MY-DEBUGGEE-ID}'

# ID of the breakpoint to get.
breakpointId = '{MY-BREAKPOINT-ID}'


request = service.debugger().debuggees().breakpoints().get(debuggeeId=debuggeeId, breakpointId=breakpointId)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Stackdriver Debugger API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/clouddebugger
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials


# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('clouddebugger', 'v2', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `list` method:

# ID of the debuggee whose breakpoints to list.
debuggeeId = '{MY-DEBUGGEE-ID}'


request = service.debugger().debuggees().breakpoints().list(debuggeeId=debuggeeId)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Stackdriver Debugger API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/clouddebugger
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials


# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('clouddebugger', 'v2', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `set` method:

# ID of the debuggee where the breakpoint is to be set.
debuggeeId = '{MY-DEBUGGEE-ID}'


breakpoint_body = {
    # TODO: Add desired entries of the request body.
}


request = service.debugger().debuggees().breakpoints().set(debuggeeId=debuggeeId, body=breakpoint_body)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Stackdriver Debugger API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/clouddebugger
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials


# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('clouddebugger', 'v2', credentials=credentials)


request = service.debugger().debuggees().list()
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
