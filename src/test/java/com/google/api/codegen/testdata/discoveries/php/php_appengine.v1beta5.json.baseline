
<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API and check quota for your project at
 *    https://console.developers.google.com/apis/api/appengine_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Appengine service
$service = new Google_Service_Appengine($client);

// Part of `name`. Name of the application to get. For example: "apps/myapp".
$appsId = '';

$response = $service->apps->getApps($appsId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API and check quota for your project at
 *    https://console.developers.google.com/apis/api/appengine_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Appengine service
$service = new Google_Service_Appengine($client);

// Part of `name`. The name of the operation resource.
$appsId = '';
// Part of `name`. See documentation of `appsId`.
$operationsId = '';

$response = $service->apps->operations->getOperations($appsId, $operationsId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API and check quota for your project at
 *    https://console.developers.google.com/apis/api/appengine_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Appengine service
$service = new Google_Service_Appengine($client);

// Part of `name`. The name of the operation collection.
$appsId = '';

$response = $service->apps->operations->listOperations($appsId);

foreach ($response['operations'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API and check quota for your project at
 *    https://console.developers.google.com/apis/api/appengine_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Appengine service
$service = new Google_Service_Appengine($client);

// Part of `name`. Name of the resource requested. For example: "apps/myapp/services/default".
$appsId = '';
// Part of `name`. See documentation of `appsId`.
$servicesId = '';

$response = $service->apps->services->deleteServices($appsId, $servicesId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API and check quota for your project at
 *    https://console.developers.google.com/apis/api/appengine_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Appengine service
$service = new Google_Service_Appengine($client);

// Part of `name`. Name of the resource requested. For example: "apps/myapp/services/default".
$appsId = '';
// Part of `name`. See documentation of `appsId`.
$servicesId = '';

$response = $service->apps->services->getServices($appsId, $servicesId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API and check quota for your project at
 *    https://console.developers.google.com/apis/api/appengine_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Appengine service
$service = new Google_Service_Appengine($client);

// Part of `name`. Name of the resource requested. For example: "apps/myapp".
$appsId = '';

$response = $service->apps->services->listServices($appsId);

foreach ($response['services'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API and check quota for your project at
 *    https://console.developers.google.com/apis/api/appengine_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Appengine service
$service = new Google_Service_Appengine($client);

// Part of `name`. Name of the resource to update. For example: "apps/myapp/services/default".
$appsId = '';
// Part of `name`. See documentation of `appsId`.
$servicesId = '';

$response = $service->apps->services->patchServices($appsId, $servicesId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API and check quota for your project at
 *    https://console.developers.google.com/apis/api/appengine_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Appengine service
$service = new Google_Service_Appengine($client);

// Part of `name`. Name of the resource to update. For example: "apps/myapp/services/default".
$appsId = '';
// Part of `name`. See documentation of `appsId`.
$servicesId = '';

$response = $service->apps->services->versions->createVersions($appsId, $servicesId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API and check quota for your project at
 *    https://console.developers.google.com/apis/api/appengine_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Appengine service
$service = new Google_Service_Appengine($client);

// Part of `name`. Name of the resource requested. For example: "apps/myapp/services/default/versions/v1".
$appsId = '';
// Part of `name`. See documentation of `appsId`.
$servicesId = '';
// Part of `name`. See documentation of `appsId`.
$versionsId = '';

$response = $service->apps->services->versions->deleteVersions($appsId, $servicesId, $versionsId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API and check quota for your project at
 *    https://console.developers.google.com/apis/api/appengine_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Appengine service
$service = new Google_Service_Appengine($client);

// Part of `name`. Name of the resource requested. For example: "apps/myapp/services/default/versions/v1".
$appsId = '';
// Part of `name`. See documentation of `appsId`.
$servicesId = '';
// Part of `name`. See documentation of `appsId`.
$versionsId = '';

$response = $service->apps->services->versions->getVersions($appsId, $servicesId, $versionsId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API and check quota for your project at
 *    https://console.developers.google.com/apis/api/appengine_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Appengine service
$service = new Google_Service_Appengine($client);

// Part of `name`. Name of the resource requested. For example: "apps/myapp/services/default/versions/v1".
$appsId = '';
// Part of `name`. See documentation of `appsId`.
$servicesId = '';
// Part of `name`. See documentation of `appsId`.
$versionsId = '';

$response = $service->apps->services->versions->instances->listInstances($appsId, $servicesId, $versionsId);

foreach ($response['instances'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API and check quota for your project at
 *    https://console.developers.google.com/apis/api/appengine_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Appengine service
$service = new Google_Service_Appengine($client);

// Part of `name`. Name of the resource requested. For example: "apps/myapp/services/default".
$appsId = '';
// Part of `name`. See documentation of `appsId`.
$servicesId = '';

$response = $service->apps->services->versions->listVersions($appsId, $servicesId);

foreach ($response['versions'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API and check quota for your project at
 *    https://console.developers.google.com/apis/api/appengine_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Appengine service
$service = new Google_Service_Appengine($client);

// Part of `name`. Name of the resource to update. For example: "apps/myapp/services/default/versions/1".
$appsId = '';
// Part of `name`. See documentation of `appsId`.
$servicesId = '';
// Part of `name`. See documentation of `appsId`.
$versionsId = '';

$response = $service->apps->services->versions->patchVersions($appsId, $servicesId, $versionsId);

