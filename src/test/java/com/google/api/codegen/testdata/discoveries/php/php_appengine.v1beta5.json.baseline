
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/appengine
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Authentication is provided by the `gcloud` tool when running locally
// and by built-in service accounts when running on GAE, GCE, or GKE.
// For more information, see
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Construct the Appengine service object for interacting with the API.
$service = new Google_Service_Appengine($client);


// TODO: Change placeholders below to desired parameter values for the `get` method:

// * Part of `name`. Name of the application to get. For example: "apps/myapp".
$appsId = '';


$response = $service->apps->get($appsId);

// TODO: Change code below to process the `$response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/appengine
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Authentication is provided by the `gcloud` tool when running locally
// and by built-in service accounts when running on GAE, GCE, or GKE.
// For more information, see
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Construct the Appengine service object for interacting with the API.
$service = new Google_Service_Appengine($client);


// TODO: Change placeholders below to desired parameter values for the `get` method:

// * Part of `name`. The name of the operation resource.
$appsId = '';

// * Part of `name`. See documentation of `appsId`.
$operationsId = '';


$response = $service->apps_operations->get($appsId, $operationsId);

// TODO: Change code below to process the `$response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/appengine
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Authentication is provided by the `gcloud` tool when running locally
// and by built-in service accounts when running on GAE, GCE, or GKE.
// For more information, see
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Construct the Appengine service object for interacting with the API.
$service = new Google_Service_Appengine($client);


// TODO: Change placeholders below to desired parameter values for the `listAppsOperations` method:

// * Part of `name`. The name of the operation collection.
$appsId = '';


$optParams = array();
do {
  $response = $service->apps_operations->listAppsOperations($appsId, $optParams);

  foreach ($response['operations'] as $operation) {
    // TODO: Change code below to process each `operation` resource:
    echo '<pre>', var_export($operation, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/appengine
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Authentication is provided by the `gcloud` tool when running locally
// and by built-in service accounts when running on GAE, GCE, or GKE.
// For more information, see
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Construct the Appengine service object for interacting with the API.
$service = new Google_Service_Appengine($client);


// TODO: Change placeholders below to desired parameter values for the `delete` method:

// * Part of `name`. Name of the resource requested. For example: "apps/myapp/services/default".
$appsId = '';

// * Part of `name`. See documentation of `appsId`.
$servicesId = '';


$response = $service->apps_services->delete($appsId, $servicesId);

// TODO: Change code below to process the `$response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/appengine
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Authentication is provided by the `gcloud` tool when running locally
// and by built-in service accounts when running on GAE, GCE, or GKE.
// For more information, see
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Construct the Appengine service object for interacting with the API.
$service = new Google_Service_Appengine($client);


// TODO: Change placeholders below to desired parameter values for the `get` method:

// * Part of `name`. Name of the resource requested. For example: "apps/myapp/services/default".
$appsId = '';

// * Part of `name`. See documentation of `appsId`.
$servicesId = '';


$response = $service->apps_services->get($appsId, $servicesId);

// TODO: Change code below to process the `$response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/appengine
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Authentication is provided by the `gcloud` tool when running locally
// and by built-in service accounts when running on GAE, GCE, or GKE.
// For more information, see
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Construct the Appengine service object for interacting with the API.
$service = new Google_Service_Appengine($client);


// TODO: Change placeholders below to desired parameter values for the `listAppsServices` method:

// * Part of `name`. Name of the resource requested. For example: "apps/myapp".
$appsId = '';


$optParams = array();
do {
  $response = $service->apps_services->listAppsServices($appsId, $optParams);

  foreach ($response['services'] as $service) {
    // TODO: Change code below to process each `service` resource:
    echo '<pre>', var_export($service, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/appengine
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Authentication is provided by the `gcloud` tool when running locally
// and by built-in service accounts when running on GAE, GCE, or GKE.
// For more information, see
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Construct the Appengine service object for interacting with the API.
$service = new Google_Service_Appengine($client);


// TODO: Change placeholders below to desired parameter values for the `patch` method:

// * Part of `name`. Name of the resource to update. For example: "apps/myapp/services/default".
$appsId = '';

// * Part of `name`. See documentation of `appsId`.
$servicesId = '';


$Google_Service_Appengine_ServiceBody = new Google_Service_Appengine_Service($client);
// TODO: Assign values to desired properties of the `$Google_Service_Appengine_ServiceBody` object to be changed.


$response = $service->apps_services->patch($appsId, $servicesId, $Google_Service_Appengine_ServiceBody);

// TODO: Change code below to process the `$response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/appengine
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Authentication is provided by the `gcloud` tool when running locally
// and by built-in service accounts when running on GAE, GCE, or GKE.
// For more information, see
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Construct the Appengine service object for interacting with the API.
$service = new Google_Service_Appengine($client);


// TODO: Change placeholders below to desired parameter values for the `create` method:

// * Part of `name`. Name of the resource to update. For example: "apps/myapp/services/default".
$appsId = '';

// * Part of `name`. See documentation of `appsId`.
$servicesId = '';


$Google_Service_Appengine_VersionBody = new Google_Service_Appengine_Version($client);
// TODO: Assign values to desired properties of the `$Google_Service_Appengine_VersionBody` object.


$response = $service->apps_services_versions->create($appsId, $servicesId, $Google_Service_Appengine_VersionBody);

// TODO: Change code below to process the `$response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/appengine
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Authentication is provided by the `gcloud` tool when running locally
// and by built-in service accounts when running on GAE, GCE, or GKE.
// For more information, see
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Construct the Appengine service object for interacting with the API.
$service = new Google_Service_Appengine($client);


// TODO: Change placeholders below to desired parameter values for the `delete` method:

// * Part of `name`. Name of the resource requested. For example:
//   "apps/myapp/services/default/versions/v1".
$appsId = '';

// * Part of `name`. See documentation of `appsId`.
$servicesId = '';

// * Part of `name`. See documentation of `appsId`.
$versionsId = '';


$response = $service->apps_services_versions->delete($appsId, $servicesId, $versionsId);

// TODO: Change code below to process the `$response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/appengine
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Authentication is provided by the `gcloud` tool when running locally
// and by built-in service accounts when running on GAE, GCE, or GKE.
// For more information, see
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Construct the Appengine service object for interacting with the API.
$service = new Google_Service_Appengine($client);


// TODO: Change placeholders below to desired parameter values for the `get` method:

// * Part of `name`. Name of the resource requested. For example:
//   "apps/myapp/services/default/versions/v1".
$appsId = '';

// * Part of `name`. See documentation of `appsId`.
$servicesId = '';

// * Part of `name`. See documentation of `appsId`.
$versionsId = '';


$response = $service->apps_services_versions->get($appsId, $servicesId, $versionsId);

// TODO: Change code below to process the `$response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/appengine
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Authentication is provided by the `gcloud` tool when running locally
// and by built-in service accounts when running on GAE, GCE, or GKE.
// For more information, see
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Construct the Appengine service object for interacting with the API.
$service = new Google_Service_Appengine($client);


// TODO: Change placeholders below to desired parameter values for the `listAppsServicesVersionsInstances` method:

// * Part of `name`. Name of the resource requested. For example:
//   "apps/myapp/services/default/versions/v1".
$appsId = '';

// * Part of `name`. See documentation of `appsId`.
$servicesId = '';

// * Part of `name`. See documentation of `appsId`.
$versionsId = '';


$optParams = array();
do {
  $response = $service->apps_services_versions_instances->listAppsServicesVersionsInstances($appsId, $servicesId, $versionsId, $optParams);

  foreach ($response['instances'] as $instance) {
    // TODO: Change code below to process each `instance` resource:
    echo '<pre>', var_export($instance, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/appengine
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Authentication is provided by the `gcloud` tool when running locally
// and by built-in service accounts when running on GAE, GCE, or GKE.
// For more information, see
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Construct the Appengine service object for interacting with the API.
$service = new Google_Service_Appengine($client);


// TODO: Change placeholders below to desired parameter values for the `listAppsServicesVersions` method:

// * Part of `name`. Name of the resource requested. For example: "apps/myapp/services/default".
$appsId = '';

// * Part of `name`. See documentation of `appsId`.
$servicesId = '';


$optParams = array();
do {
  $response = $service->apps_services_versions->listAppsServicesVersions($appsId, $servicesId, $optParams);

  foreach ($response['versions'] as $version) {
    // TODO: Change code below to process each `version` resource:
    echo '<pre>', var_export($version, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Google App Engine Admin API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/appengine
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run
 *    `gcloud beta auth application-default login`
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Authentication is provided by the `gcloud` tool when running locally
// and by built-in service accounts when running on GAE, GCE, or GKE.
// For more information, see
// https://developers.google.com/identity/protocols/application-default-credentials
$client = new Google_Client();
$client->setApplicationName('Google Cloud Platform Sample');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Construct the Appengine service object for interacting with the API.
$service = new Google_Service_Appengine($client);


// TODO: Change placeholders below to desired parameter values for the `patch` method:

// * Part of `name`. Name of the resource to update. For example:
//   "apps/myapp/services/default/versions/1".
$appsId = '';

// * Part of `name`. See documentation of `appsId`.
$servicesId = '';

// * Part of `name`. See documentation of `appsId`.
$versionsId = '';


$Google_Service_Appengine_VersionBody = new Google_Service_Appengine_Version($client);
// TODO: Assign values to desired properties of the `$Google_Service_Appengine_VersionBody` object to be changed.


$response = $service->apps_services_versions->patch($appsId, $servicesId, $versionsId, $Google_Service_Appengine_VersionBody);

// TODO: Change code below to process the `$response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
