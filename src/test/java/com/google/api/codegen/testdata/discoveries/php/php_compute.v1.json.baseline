
<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->addresses->aggregatedListAddresses($project);

foreach ($response['items']  as $key => $value) {
  // TODO: Add code here to process $key => $value
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region for this request.
$region = '';
// Name of the address resource to delete.
$address = '';

$response = $service->addresses->deleteAddresses($project, $region, $address);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region for this request.
$region = '';
// Name of the address resource to return.
$address = '';

$response = $service->addresses->getAddresses($project, $region, $address);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region for this request.
$region = '';

$response = $service->addresses->insertAddresses($project, $region);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region for this request.
$region = '';

$response = $service->addresses->listAddresses($project, $region);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->autoscalers->aggregatedListAutoscalers($project);

foreach ($response['items']  as $key => $value) {
  // TODO: Add code here to process $key => $value
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the zone for this request.
$zone = '';
// Name of the autoscaler to delete.
$autoscaler = '';

$response = $service->autoscalers->deleteAutoscalers($project, $zone, $autoscaler);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the zone for this request.
$zone = '';
// Name of the autoscaler to return.
$autoscaler = '';

$response = $service->autoscalers->getAutoscalers($project, $zone, $autoscaler);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the zone for this request.
$zone = '';

$response = $service->autoscalers->insertAutoscalers($project, $zone);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the zone for this request.
$zone = '';

$response = $service->autoscalers->listAutoscalers($project, $zone);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the zone for this request.
$zone = '';
// Name of the autoscaler to update.
$autoscaler = '';

$response = $service->autoscalers->patchAutoscalers($project, $zone, $autoscaler);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the zone for this request.
$zone = '';

$response = $service->autoscalers->updateAutoscalers($project, $zone);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the BackendService resource to delete.
$backendService = '';

$response = $service->backendServices->deleteBackendServices($project, $backendService);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the BackendService resource to return.
$backendService = '';

$response = $service->backendServices->getBackendServices($project, $backendService);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);


$project = '';
// Name of the BackendService resource to which the queried instance belongs.
$backendService = '';

$response = $service->backendServices->getHealthBackendServices($project, $backendService);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->backendServices->insertBackendServices($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->backendServices->listBackendServices($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the BackendService resource to update.
$backendService = '';

$response = $service->backendServices->patchBackendServices($project, $backendService);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the BackendService resource to update.
$backendService = '';

$response = $service->backendServices->updateBackendServices($project, $backendService);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->diskTypes->aggregatedListDiskTypes($project);

foreach ($response['items']  as $key => $value) {
  // TODO: Add code here to process $key => $value
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// Name of the disk type to return.
$diskType = '';

$response = $service->diskTypes->getDiskTypes($project, $zone, $diskType);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';

$response = $service->diskTypes->listDiskTypes($project, $zone);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->disks->aggregatedListDisks($project);

foreach ($response['items']  as $key => $value) {
  // TODO: Add code here to process $key => $value
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// Name of the persistent disk to snapshot.
$disk = '';

$response = $service->disks->createSnapshotDisks($project, $zone, $disk);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// Name of the persistent disk to delete.
$disk = '';

$response = $service->disks->deleteDisks($project, $zone, $disk);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// Name of the persistent disk to return.
$disk = '';

$response = $service->disks->getDisks($project, $zone, $disk);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';

$response = $service->disks->insertDisks($project, $zone);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';

$response = $service->disks->listDisks($project, $zone);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the firewall rule to delete.
$firewall = '';

$response = $service->firewalls->deleteFirewalls($project, $firewall);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the firewall rule to return.
$firewall = '';

$response = $service->firewalls->getFirewalls($project, $firewall);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->firewalls->insertFirewalls($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->firewalls->listFirewalls($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the firewall rule to update.
$firewall = '';

$response = $service->firewalls->patchFirewalls($project, $firewall);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the firewall rule to update.
$firewall = '';

$response = $service->firewalls->updateFirewalls($project, $firewall);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->forwardingRules->aggregatedListForwardingRules($project);

foreach ($response['items']  as $key => $value) {
  // TODO: Add code here to process $key => $value
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';
// Name of the ForwardingRule resource to delete.
$forwardingRule = '';

$response = $service->forwardingRules->deleteForwardingRules($project, $region, $forwardingRule);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';
// Name of the ForwardingRule resource to return.
$forwardingRule = '';

$response = $service->forwardingRules->getForwardingRules($project, $region, $forwardingRule);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';

$response = $service->forwardingRules->insertForwardingRules($project, $region);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';

$response = $service->forwardingRules->listForwardingRules($project, $region);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';
// Name of the ForwardingRule resource in which target is to be set.
$forwardingRule = '';

$response = $service->forwardingRules->setTargetForwardingRules($project, $region, $forwardingRule);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the address resource to delete.
$address = '';

$response = $service->globalAddresses->deleteGlobalAddresses($project, $address);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the address resource to return.
$address = '';

$response = $service->globalAddresses->getGlobalAddresses($project, $address);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->globalAddresses->insertGlobalAddresses($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->globalAddresses->listGlobalAddresses($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the ForwardingRule resource to delete.
$forwardingRule = '';

$response = $service->globalForwardingRules->deleteGlobalForwardingRules($project, $forwardingRule);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the ForwardingRule resource to return.
$forwardingRule = '';

$response = $service->globalForwardingRules->getGlobalForwardingRules($project, $forwardingRule);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->globalForwardingRules->insertGlobalForwardingRules($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->globalForwardingRules->listGlobalForwardingRules($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the ForwardingRule resource in which target is to be set.
$forwardingRule = '';

$response = $service->globalForwardingRules->setTargetGlobalForwardingRules($project, $forwardingRule);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->globalOperations->aggregatedListGlobalOperations($project);

foreach ($response['items']  as $key => $value) {
  // TODO: Add code here to process $key => $value
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the Operations resource to delete.
$operation = '';

$response = $service->globalOperations->deleteGlobalOperations($project, $operation);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the Operations resource to return.
$operation = '';

$response = $service->globalOperations->getGlobalOperations($project, $operation);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->globalOperations->listGlobalOperations($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the HttpHealthCheck resource to delete.
$httpHealthCheck = '';

$response = $service->httpHealthChecks->deleteHttpHealthChecks($project, $httpHealthCheck);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the HttpHealthCheck resource to return.
$httpHealthCheck = '';

$response = $service->httpHealthChecks->getHttpHealthChecks($project, $httpHealthCheck);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->httpHealthChecks->insertHttpHealthChecks($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->httpHealthChecks->listHttpHealthChecks($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the HttpHealthCheck resource to update.
$httpHealthCheck = '';

$response = $service->httpHealthChecks->patchHttpHealthChecks($project, $httpHealthCheck);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the HttpHealthCheck resource to update.
$httpHealthCheck = '';

$response = $service->httpHealthChecks->updateHttpHealthChecks($project, $httpHealthCheck);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the HttpsHealthCheck resource to delete.
$httpsHealthCheck = '';

$response = $service->httpsHealthChecks->deleteHttpsHealthChecks($project, $httpsHealthCheck);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the HttpsHealthCheck resource to return.
$httpsHealthCheck = '';

$response = $service->httpsHealthChecks->getHttpsHealthChecks($project, $httpsHealthCheck);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->httpsHealthChecks->insertHttpsHealthChecks($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->httpsHealthChecks->listHttpsHealthChecks($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the HttpsHealthCheck resource to update.
$httpsHealthCheck = '';

$response = $service->httpsHealthChecks->patchHttpsHealthChecks($project, $httpsHealthCheck);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the HttpsHealthCheck resource to update.
$httpsHealthCheck = '';

$response = $service->httpsHealthChecks->updateHttpsHealthChecks($project, $httpsHealthCheck);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the image resource to delete.
$image = '';

$response = $service->images->deleteImages($project, $image);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Image name.
$image = '';

$response = $service->images->deprecateImages($project, $image);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the image resource to return.
$image = '';

$response = $service->images->getImages($project, $image);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->images->insertImages($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->images->listImages($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the managed instance group is located.
$zone = '';
// The name of the managed instance group.
$instanceGroupManager = '';

$response = $service->instanceGroupManagers->abandonInstancesInstanceGroupManagers($project, $zone, $instanceGroupManager);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->instanceGroupManagers->aggregatedListInstanceGroupManagers($project);

foreach ($response['items']  as $key => $value) {
  // TODO: Add code here to process $key => $value
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the managed instance group is located.
$zone = '';
// The name of the managed instance group to delete.
$instanceGroupManager = '';

$response = $service->instanceGroupManagers->deleteInstanceGroupManagers($project, $zone, $instanceGroupManager);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the managed instance group is located.
$zone = '';
// The name of the managed instance group.
$instanceGroupManager = '';

$response = $service->instanceGroupManagers->deleteInstancesInstanceGroupManagers($project, $zone, $instanceGroupManager);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the managed instance group is located.
$zone = '';
// The name of the managed instance group.
$instanceGroupManager = '';

$response = $service->instanceGroupManagers->getInstanceGroupManagers($project, $zone, $instanceGroupManager);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where you want to create the managed instance group.
$zone = '';

$response = $service->instanceGroupManagers->insertInstanceGroupManagers($project, $zone);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the managed instance group is located.
$zone = '';

$response = $service->instanceGroupManagers->listInstanceGroupManagers($project, $zone);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the managed instance group is located.
$zone = '';
// The name of the managed instance group.
$instanceGroupManager = '';

$response = $service->instanceGroupManagers->listManagedInstancesInstanceGroupManagers($project, $zone, $instanceGroupManager);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the managed instance group is located.
$zone = '';
// The name of the managed instance group.
$instanceGroupManager = '';

$response = $service->instanceGroupManagers->recreateInstancesInstanceGroupManagers($project, $zone, $instanceGroupManager);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the managed instance group is located.
$zone = '';
// The name of the managed instance group.
$instanceGroupManager = '';
// The number of running instances that the managed instance group should maintain at any given time. The group automatically adds or removes instances to maintain the number of instances specified by this parameter.
$size = 0;

$response = $service->instanceGroupManagers->resizeInstanceGroupManagers($project, $zone, $instanceGroupManager, $size);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the managed instance group is located.
$zone = '';
// The name of the managed instance group.
$instanceGroupManager = '';

$response = $service->instanceGroupManagers->setInstanceTemplateInstanceGroupManagers($project, $zone, $instanceGroupManager);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the managed instance group is located.
$zone = '';
// The name of the managed instance group.
$instanceGroupManager = '';

$response = $service->instanceGroupManagers->setTargetPoolsInstanceGroupManagers($project, $zone, $instanceGroupManager);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the instance group is located.
$zone = '';
// The name of the instance group where you are adding instances.
$instanceGroup = '';

$response = $service->instanceGroups->addInstancesInstanceGroups($project, $zone, $instanceGroup);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->instanceGroups->aggregatedListInstanceGroups($project);

foreach ($response['items']  as $key => $value) {
  // TODO: Add code here to process $key => $value
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the instance group is located.
$zone = '';
// The name of the instance group to delete.
$instanceGroup = '';

$response = $service->instanceGroups->deleteInstanceGroups($project, $zone, $instanceGroup);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the instance group is located.
$zone = '';
// The name of the instance group.
$instanceGroup = '';

$response = $service->instanceGroups->getInstanceGroups($project, $zone, $instanceGroup);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where you want to create the instance group.
$zone = '';

$response = $service->instanceGroups->insertInstanceGroups($project, $zone);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the instance group is located.
$zone = '';

$response = $service->instanceGroups->listInstanceGroups($project, $zone);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the instance group is located.
$zone = '';
// The name of the instance group from which you want to generate a list of included instances.
$instanceGroup = '';

$response = $service->instanceGroups->listInstancesInstanceGroups($project, $zone, $instanceGroup);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the instance group is located.
$zone = '';
// The name of the instance group where the specified instances will be removed.
$instanceGroup = '';

$response = $service->instanceGroups->removeInstancesInstanceGroups($project, $zone, $instanceGroup);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone where the instance group is located.
$zone = '';
// The name of the instance group where the named ports are updated.
$instanceGroup = '';

$response = $service->instanceGroups->setNamedPortsInstanceGroups($project, $zone, $instanceGroup);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the instance template to delete.
$instanceTemplate = '';

$response = $service->instanceTemplates->deleteInstanceTemplates($project, $instanceTemplate);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the instance template.
$instanceTemplate = '';

$response = $service->instanceTemplates->getInstanceTemplates($project, $instanceTemplate);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->instanceTemplates->insertInstanceTemplates($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->instanceTemplates->listInstanceTemplates($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// The instance name for this request.
$instance = '';
// The name of the network interface to add to this instance.
$networkInterface = '';

$response = $service->instances->addAccessConfigInstances($project, $zone, $instance, $networkInterface);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->instances->aggregatedListInstances($project);

foreach ($response['items']  as $key => $value) {
  // TODO: Add code here to process $key => $value
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// The instance name for this request.
$instance = '';

$response = $service->instances->attachDiskInstances($project, $zone, $instance);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// Name of the instance resource to delete.
$instance = '';

$response = $service->instances->deleteInstances($project, $zone, $instance);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// The instance name for this request.
$instance = '';
// The name of the access config to delete.
$accessConfig = '';
// The name of the network interface.
$networkInterface = '';

$response = $service->instances->deleteAccessConfigInstances($project, $zone, $instance, $accessConfig, $networkInterface);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// Instance name.
$instance = '';
// Disk device name to detach.
$deviceName = '';

$response = $service->instances->detachDiskInstances($project, $zone, $instance, $deviceName);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// Name of the instance resource to return.
$instance = '';

$response = $service->instances->getInstances($project, $zone, $instance);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// Name of the instance scoping this request.
$instance = '';

$response = $service->instances->getSerialPortOutputInstances($project, $zone, $instance);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';

$response = $service->instances->insertInstances($project, $zone);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';

$response = $service->instances->listInstances($project, $zone);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// Name of the instance scoping this request.
$instance = '';

$response = $service->instances->resetInstances($project, $zone, $instance);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// The instance name.
$instance = '';
// Whether to auto-delete the disk when the instance is deleted.
$autoDelete = false;
// The device name of the disk to modify.
$deviceName = '';

$response = $service->instances->setDiskAutoDeleteInstances($project, $zone, $instance, $autoDelete, $deviceName);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// Name of the instance scoping this request.
$instance = '';

$response = $service->instances->setMachineTypeInstances($project, $zone, $instance);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// Name of the instance scoping this request.
$instance = '';

$response = $service->instances->setMetadataInstances($project, $zone, $instance);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// Instance name.
$instance = '';

$response = $service->instances->setSchedulingInstances($project, $zone, $instance);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// Name of the instance scoping this request.
$instance = '';

$response = $service->instances->setTagsInstances($project, $zone, $instance);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// Name of the instance resource to start.
$instance = '';

$response = $service->instances->startInstances($project, $zone, $instance);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// Name of the instance resource to stop.
$instance = '';

$response = $service->instances->stopInstances($project, $zone, $instance);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the License resource to return.
$license = '';

$response = $service->licenses->getLicenses($project, $license);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->machineTypes->aggregatedListMachineTypes($project);

foreach ($response['items']  as $key => $value) {
  // TODO: Add code here to process $key => $value
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';
// Name of the machine type to return.
$machineType = '';

$response = $service->machineTypes->getMachineTypes($project, $zone, $machineType);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// The name of the zone for this request.
$zone = '';

$response = $service->machineTypes->listMachineTypes($project, $zone);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the network to delete.
$network = '';

$response = $service->networks->deleteNetworks($project, $network);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the network to return.
$network = '';

$response = $service->networks->getNetworks($project, $network);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->networks->insertNetworks($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->networks->listNetworks($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->projects->getProjects($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->projects->moveDiskProjects($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->projects->moveInstanceProjects($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->projects->setCommonInstanceMetadataProjects($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->projects->setUsageExportBucketProjects($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region for this request.
$region = '';
// Name of the Operations resource to delete.
$operation = '';

$response = $service->regionOperations->deleteRegionOperations($project, $region, $operation);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region for this request.
$region = '';
// Name of the Operations resource to return.
$operation = '';

$response = $service->regionOperations->getRegionOperations($project, $region, $operation);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region for this request.
$region = '';

$response = $service->regionOperations->listRegionOperations($project, $region);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region resource to return.
$region = '';

$response = $service->regions->getRegions($project, $region);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->regions->listRegions($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the Route resource to delete.
$route = '';

$response = $service->routes->deleteRoutes($project, $route);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the Route resource to return.
$route = '';

$response = $service->routes->getRoutes($project, $route);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->routes->insertRoutes($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->routes->listRoutes($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the Snapshot resource to delete.
$snapshot = '';

$response = $service->snapshots->deleteSnapshots($project, $snapshot);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the Snapshot resource to return.
$snapshot = '';

$response = $service->snapshots->getSnapshots($project, $snapshot);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->snapshots->listSnapshots($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the SslCertificate resource to delete.
$sslCertificate = '';

$response = $service->sslCertificates->deleteSslCertificates($project, $sslCertificate);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the SslCertificate resource to return.
$sslCertificate = '';

$response = $service->sslCertificates->getSslCertificates($project, $sslCertificate);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->sslCertificates->insertSslCertificates($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->sslCertificates->listSslCertificates($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->subnetworks->aggregatedListSubnetworks($project);

foreach ($response['items']  as $key => $value) {
  // TODO: Add code here to process $key => $value
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';
// Name of the Subnetwork resource to delete.
$subnetwork = '';

$response = $service->subnetworks->deleteSubnetworks($project, $region, $subnetwork);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';
// Name of the Subnetwork resource to return.
$subnetwork = '';

$response = $service->subnetworks->getSubnetworks($project, $region, $subnetwork);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';

$response = $service->subnetworks->insertSubnetworks($project, $region);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';

$response = $service->subnetworks->listSubnetworks($project, $region);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the TargetHttpProxy resource to delete.
$targetHttpProxy = '';

$response = $service->targetHttpProxies->deleteTargetHttpProxies($project, $targetHttpProxy);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the TargetHttpProxy resource to return.
$targetHttpProxy = '';

$response = $service->targetHttpProxies->getTargetHttpProxies($project, $targetHttpProxy);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->targetHttpProxies->insertTargetHttpProxies($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->targetHttpProxies->listTargetHttpProxies($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the TargetHttpProxy to set a URL map for.
$targetHttpProxy = '';

$response = $service->targetHttpProxies->setUrlMapTargetHttpProxies($project, $targetHttpProxy);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the TargetHttpsProxy resource to delete.
$targetHttpsProxy = '';

$response = $service->targetHttpsProxies->deleteTargetHttpsProxies($project, $targetHttpsProxy);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the TargetHttpsProxy resource to return.
$targetHttpsProxy = '';

$response = $service->targetHttpsProxies->getTargetHttpsProxies($project, $targetHttpsProxy);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->targetHttpsProxies->insertTargetHttpsProxies($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->targetHttpsProxies->listTargetHttpsProxies($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the TargetHttpsProxy resource to set an SslCertificates resource for.
$targetHttpsProxy = '';

$response = $service->targetHttpsProxies->setSslCertificatesTargetHttpsProxies($project, $targetHttpsProxy);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the TargetHttpsProxy resource whose URL map is to be set.
$targetHttpsProxy = '';

$response = $service->targetHttpsProxies->setUrlMapTargetHttpsProxies($project, $targetHttpsProxy);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->targetInstances->aggregatedListTargetInstances($project);

foreach ($response['items']  as $key => $value) {
  // TODO: Add code here to process $key => $value
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the zone scoping this request.
$zone = '';
// Name of the TargetInstance resource to delete.
$targetInstance = '';

$response = $service->targetInstances->deleteTargetInstances($project, $zone, $targetInstance);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the zone scoping this request.
$zone = '';
// Name of the TargetInstance resource to return.
$targetInstance = '';

$response = $service->targetInstances->getTargetInstances($project, $zone, $targetInstance);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the zone scoping this request.
$zone = '';

$response = $service->targetInstances->insertTargetInstances($project, $zone);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the zone scoping this request.
$zone = '';

$response = $service->targetInstances->listTargetInstances($project, $zone);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';
// Name of the target pool to add a health check to.
$targetPool = '';

$response = $service->targetPools->addHealthCheckTargetPools($project, $region, $targetPool);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';
// Name of the TargetPool resource to add instances to.
$targetPool = '';

$response = $service->targetPools->addInstanceTargetPools($project, $region, $targetPool);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->targetPools->aggregatedListTargetPools($project);

foreach ($response['items']  as $key => $value) {
  // TODO: Add code here to process $key => $value
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';
// Name of the TargetPool resource to delete.
$targetPool = '';

$response = $service->targetPools->deleteTargetPools($project, $region, $targetPool);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';
// Name of the TargetPool resource to return.
$targetPool = '';

$response = $service->targetPools->getTargetPools($project, $region, $targetPool);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';
// Name of the TargetPool resource to which the queried instance belongs.
$targetPool = '';

$response = $service->targetPools->getHealthTargetPools($project, $region, $targetPool);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';

$response = $service->targetPools->insertTargetPools($project, $region);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';

$response = $service->targetPools->listTargetPools($project, $region);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region for this request.
$region = '';
// Name of the target pool to remove health checks from.
$targetPool = '';

$response = $service->targetPools->removeHealthCheckTargetPools($project, $region, $targetPool);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';
// Name of the TargetPool resource to remove instances from.
$targetPool = '';

$response = $service->targetPools->removeInstanceTargetPools($project, $region, $targetPool);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region scoping this request.
$region = '';
// Name of the TargetPool resource to set a backup pool for.
$targetPool = '';

$response = $service->targetPools->setBackupTargetPools($project, $region, $targetPool);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->targetVpnGateways->aggregatedListTargetVpnGateways($project);

foreach ($response['items']  as $key => $value) {
  // TODO: Add code here to process $key => $value
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region for this request.
$region = '';
// Name of the target VPN gateway to delete.
$targetVpnGateway = '';

$response = $service->targetVpnGateways->deleteTargetVpnGateways($project, $region, $targetVpnGateway);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region for this request.
$region = '';
// Name of the target VPN gateway to return.
$targetVpnGateway = '';

$response = $service->targetVpnGateways->getTargetVpnGateways($project, $region, $targetVpnGateway);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region for this request.
$region = '';

$response = $service->targetVpnGateways->insertTargetVpnGateways($project, $region);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region for this request.
$region = '';

$response = $service->targetVpnGateways->listTargetVpnGateways($project, $region);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the UrlMap resource to delete.
$urlMap = '';

$response = $service->urlMaps->deleteUrlMaps($project, $urlMap);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the UrlMap resource to return.
$urlMap = '';

$response = $service->urlMaps->getUrlMaps($project, $urlMap);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->urlMaps->insertUrlMaps($project);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->urlMaps->listUrlMaps($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the UrlMap resource to update.
$urlMap = '';

$response = $service->urlMaps->patchUrlMaps($project, $urlMap);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the UrlMap resource to update.
$urlMap = '';

$response = $service->urlMaps->updateUrlMaps($project, $urlMap);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the UrlMap resource to be validated as.
$urlMap = '';

$response = $service->urlMaps->validateUrlMaps($project, $urlMap);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->vpnTunnels->aggregatedListVpnTunnels($project);

foreach ($response['items']  as $key => $value) {
  // TODO: Add code here to process $key => $value
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region for this request.
$region = '';
// Name of the VpnTunnel resource to delete.
$vpnTunnel = '';

$response = $service->vpnTunnels->deleteVpnTunnels($project, $region, $vpnTunnel);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region for this request.
$region = '';
// Name of the VpnTunnel resource to return.
$vpnTunnel = '';

$response = $service->vpnTunnels->getVpnTunnels($project, $region, $vpnTunnel);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region for this request.
$region = '';

$response = $service->vpnTunnels->insertVpnTunnels($project, $region);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the region for this request.
$region = '';

$response = $service->vpnTunnels->listVpnTunnels($project, $region);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the zone for this request.
$zone = '';
// Name of the Operations resource to delete.
$operation = '';

$response = $service->zoneOperations->deleteZoneOperations($project, $zone, $operation);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the zone for this request.
$zone = '';
// Name of the Operations resource to return.
$operation = '';

$response = $service->zoneOperations->getZoneOperations($project, $zone, $operation);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the zone for request.
$zone = '';

$response = $service->zoneOperations->listZoneOperations($project, $zone);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';
// Name of the zone resource to return.
$zone = '';

$response = $service->zones->getZones($project, $zone);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Compute Engine API and check quota for your project at
 *    https://console.developers.google.com/apis/api/compute_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Compute service
$service = new Google_Service_Compute($client);

// Project ID for this request.
$project = '';

$response = $service->zones->listZones($project);

foreach ($response['items'] as $element) {
  // TODO: Add code here to process the elements.
}

