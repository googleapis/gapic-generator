
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Translate API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/translate
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/translate/v2/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.translate.Translate;
import com.google.api.services.translate.model.DetectionsListResponse;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.ArrayList;
import java.util.List;

public class TranslateExample {
  public static void main(String args[]) throws IOException, GeneralSecurityException {
    // The text to detect
    List<String> q = new ArrayList<>();  // TODO: Update placeholder value.

    Translate translateService = createTranslateService();
    Translate.Detections.List request = translateService.detections().list(q);

    DetectionsListResponse response = request.execute();

    // TODO: Change code below to process the `response` object:
    System.out.println(response);
  }

  public static Translate createTranslateService() throws IOException, GeneralSecurityException {
    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    // TODO: Change placeholder below to generate authentication credentials. See
    // https://foo.com/bar
    GoogleCredential credential = null;

    return new Translate.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Google-TranslateSample/0.1")
        .build();
  }
}
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Translate API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/translate
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/translate/v2/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.translate.Translate;
import com.google.api.services.translate.model.LanguagesListResponse;
import java.io.IOException;
import java.security.GeneralSecurityException;

public class TranslateExample {
  public static void main(String args[]) throws IOException, GeneralSecurityException {
    Translate translateService = createTranslateService();
    Translate.Languages.List request = translateService.languages().list();

    LanguagesListResponse response = request.execute();

    // TODO: Change code below to process the `response` object:
    System.out.println(response);
  }

  public static Translate createTranslateService() throws IOException, GeneralSecurityException {
    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    // TODO: Change placeholder below to generate authentication credentials. See
    // https://foo.com/bar
    GoogleCredential credential = null;

    return new Translate.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Google-TranslateSample/0.1")
        .build();
  }
}
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Translate API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/translate
 * 2. Install the Java client library on Maven or Gradle. Check installation
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/translate/v2/java
 */
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.translate.Translate;
import com.google.api.services.translate.model.TranslationsListResponse;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.ArrayList;
import java.util.List;

public class TranslateExample {
  public static void main(String args[]) throws IOException, GeneralSecurityException {
    // The text to translate
    List<String> q = new ArrayList<>();  // TODO: Update placeholder value.

    // The target language into which the text should be translated
    String target = "";  // TODO: Update placeholder value.

    Translate translateService = createTranslateService();
    Translate.Translations.List request = translateService.translations().list(q, target);

    TranslationsListResponse response = request.execute();

    // TODO: Change code below to process the `response` object:
    System.out.println(response);
  }

  public static Translate createTranslateService() throws IOException, GeneralSecurityException {
    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    // TODO: Change placeholder below to generate authentication credentials. See
    // https://foo.com/bar
    GoogleCredential credential = null;

    return new Translate.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Google-TranslateSample/0.1")
        .build();
  }
}
