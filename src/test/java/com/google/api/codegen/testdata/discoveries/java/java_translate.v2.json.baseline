
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Translate API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/translate
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
 * 2. Install the Java client library on Maven or Gradle. Check installation
=======
 * 2. Install the Java client library on maven or gradle. Check installation
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/translate/v2/java
 */
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
=======

import com.google.api.client.auth.oauth2.Credential;
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.translate.Translate;
import com.google.api.services.translate.Translate.Detections.List;
import com.google.api.services.translate.model.DetectionsListResponse;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.ArrayList;
import java.util.Arrays;


public class TranslateExample {
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
  public void run() throws IOException, GeneralSecurityException {
    // The text to detect
    java.util.List<String> q = new ArrayList<>(); // TODO: Update field(s).

    Translate service = createService();
    List request = service.detections().list(q);
    DetectionsListResponse response = request.execute();
    System.out.println(response);
  }

  public Translate createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Translate.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new TranslateExample().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
=======
  public static void main(String[] args) throws IOException, GeneralSecurityException {

    // TODO: Implement this function to get authentication credentials.
    // See https://foo.com/bar
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();
    Translate translateService = new Translate.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();

    // TODO: Change placeholders below to appropriate parameter values for the 'list' method:

    // * The text to detect
    List<String> q = new ArrayList<String>();

    Translate.Detections.List request = translateService.detections().list(q);
    DetectionsListResponse response = request.execute();

    // TODO: Add code here to process the 'response' object
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
  }
}
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Translate API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/translate
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
 * 2. Install the Java client library on Maven or Gradle. Check installation
=======
 * 2. Install the Java client library on maven or gradle. Check installation
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/translate/v2/java
 */
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
=======

import com.google.api.client.auth.oauth2.Credential;
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.translate.Translate;
import com.google.api.services.translate.Translate.Languages.List;
import com.google.api.services.translate.model.LanguagesListResponse;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;


public class TranslateExample {
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
  public void run() throws IOException, GeneralSecurityException {
    Translate service = createService();
    List request = service.languages().list();
    LanguagesListResponse response = request.execute();
    System.out.println(response);
  }

  public Translate createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Translate.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new TranslateExample().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
=======
  public static void main(String[] args) throws IOException, GeneralSecurityException {

    // TODO: Implement this function to get authentication credentials.
    // See https://foo.com/bar
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();
    Translate translateService = new Translate.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();


    Translate.Languages.List request = translateService.languages().list();
    LanguagesListResponse response = request.execute();

    // TODO: Add code here to process the 'response' object
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
  }
}
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Translate API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/translate
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
 * 2. Install the Java client library on Maven or Gradle. Check installation
=======
 * 2. Install the Java client library on maven or gradle. Check installation
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
 *    instructions at https://github.com/google/google-api-java-client.
 *    On other build systems, you can add the jar files to your project from
 *    https://developers.google.com/resources/api-libraries/download/translate/v2/java
 */
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
=======

import com.google.api.client.auth.oauth2.Credential;
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.translate.Translate;
import com.google.api.services.translate.Translate.Translations.List;
import com.google.api.services.translate.model.TranslationsListResponse;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.ArrayList;
import java.util.Arrays;


public class TranslateExample {
<<<<<<< 87e3673f9830eb19419833f4430c7f10a733ae35
  public void run() throws IOException, GeneralSecurityException {
    // The text to translate
    java.util.List<String> q = new ArrayList<>(); // TODO: Update field(s).

    // The target language into which the text should be translated
    String target = ""; // TODO: Update field(s).

    Translate service = createService();
    List request = service.translations().list(q, target);
    TranslationsListResponse response = request.execute();
    System.out.println(response);
  }

  public Translate createService() throws IOException, GeneralSecurityException {
    // TODO: This sample uses Application Default Credentials for authentication.
    // Install the gcloud CLI from https://cloud.google.com/sdk and run
    // `gcloud beta auth application-default login`
    GoogleCredential credential = GoogleCredential.getApplicationDefault();

    if (credential.createScopedRequired()) {
      credential =
          credential.createScoped(Arrays.asList("https://www.googleapis.com/auth/cloud-platform"));
    }

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();

    return new Translate.Builder(httpTransport, jsonFactory, credential)
        .setApplicationName("Sample")
        .build();
  }

  public static void main(String[] args) throws IOException, GeneralSecurityException {
    try {
      new TranslateExample().run();
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (GeneralSecurityException e) {
      System.out.println(e.getMessage());
    }
=======
  public static void main(String[] args) throws IOException, GeneralSecurityException {

    // TODO: Implement this function to get authentication credentials.
    // See https://foo.com/bar
    Credential credential = getAuth();

    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport();
    JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();
    Translate translateService = new Translate.Builder(httpTransport, jsonFactory, credential)
      .setApplicationName("Google Cloud Platform Sample")
      .build();

    // TODO: Change placeholders below to appropriate parameter values for the 'list' method:

    // * The text to translate
    List<String> q = new ArrayList<String>();

    // * The target language into which the text should be translated
    String target = "{MY-TARGET}";

    Translate.Translations.List request = translateService.translations().list(q, target);
    TranslationsListResponse response = request.execute();

    // TODO: Add code here to process the 'response' object
>>>>>>> Add basic 3LO and API key auth support in discovery (#445)
  }
}
