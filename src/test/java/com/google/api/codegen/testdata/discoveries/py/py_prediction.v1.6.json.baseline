
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Prediction API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/prediction
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
"""

from __future__ import print_function
import json

from apiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the prediction service object (version v1.6) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('prediction', 'v1.6', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'predict' method:
# * The project associated with the model.
project = ''
# * The name of a hosted model.
hostedModelName = ''

input_ = {
# TODO: Add desired entries of the 'input_' dict
}

request = service.hostedmodels().predict(project, hostedModelName, input_)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
print(json.dumps(response))
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Prediction API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/prediction
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
"""

from __future__ import print_function
import json

from apiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the prediction service object (version v1.6) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('prediction', 'v1.6', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'analyze' method:
# * The project associated with the model.
project = ''
# * The unique name for the predictive model.
id = ''

request = service.trainedmodels().analyze(project, id)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
print(json.dumps(response))
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Prediction API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/prediction
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
"""

from apiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the prediction service object (version v1.6) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('prediction', 'v1.6', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'delete' method:
# * The project associated with the model.
project = ''
# * The unique name for the predictive model.
id = ''

request = service.trainedmodels().delete(project, id)
request.execute()
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Prediction API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/prediction
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
"""

from __future__ import print_function
import json

from apiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the prediction service object (version v1.6) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('prediction', 'v1.6', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'get' method:
# * The project associated with the model.
project = ''
# * The unique name for the predictive model.
id = ''

request = service.trainedmodels().get(project, id)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
print(json.dumps(response))
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Prediction API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/prediction
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
"""

from __future__ import print_function
import json

from apiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the prediction service object (version v1.6) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('prediction', 'v1.6', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'insert' method:
# * The project associated with the model.
project = ''

insert = {
# TODO: Add desired entries of the 'insert' dict
}

request = service.trainedmodels().insert(project, insert)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
print(json.dumps(response))
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Prediction API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/prediction
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
"""

from apiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the prediction service object (version v1.6) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('prediction', 'v1.6', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'list' method:
# * The project associated with the model.
project = ''

trainedmodels = service.trainedmodels()
request = trainedmodels.list(project)
while request is not None:
    response = request.execute()

    for insert2 in response['items']:
        # TODO: Add code here to process each 'insert2' resource

    request = trainedmodels.list_next(request, response)
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Prediction API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/prediction
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
"""

from __future__ import print_function
import json

from apiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the prediction service object (version v1.6) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('prediction', 'v1.6', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'predict' method:
# * The project associated with the model.
project = ''
# * The unique name for the predictive model.
id = ''

input_ = {
# TODO: Add desired entries of the 'input_' dict
}

request = service.trainedmodels().predict(project, id, input_)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
print(json.dumps(response))
"""
PRE-REQUISITES:
---------------
1. If not already done, enable the Prediction API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/prediction
2. Install python client library for Google APIs using 'pip install --upgrade google-api-python-client'
3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
"""

from __future__ import print_function
import json

from apiclient import discovery
from oauth2client.client import GoogleCredentials

# Authentication is provided by the 'gcloud' tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# See https://developers.google.com/identity/protocols/application-default-credentials for more information.
credentials = GoogleCredentials.get_application_default()

# Construct the prediction service object (version v1.6) for interacting
# with the API. You can browse other available API services and versions at
# https://developers.google.com/api-client-library/python/apis/
service = discovery.build('prediction', 'v1.6', credentials=credentials)


# TODO: Change placeholders below to appropriate parameter values for the 'update' method:
# * The project associated with the model.
project = ''
# * The unique name for the predictive model.
id = ''

update = {
# TODO: Add desired entries of the 'update' dict
}

request = service.trainedmodels().update(project, id, update)
response = request.execute()

# TODO: Change code below to process the 'response' dict:
print(json.dumps(response))
