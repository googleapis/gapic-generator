
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Prediction API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/prediction
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials


# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('prediction', 'v1.6', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `predict` method:

# The project associated with the model.
project = '{MY-PROJECT}'

# The name of a hosted model.
hostedModelName = '{MY-HOSTED-MODEL-NAME}'


input__body = {
    # TODO: Add desired entries of the request body.
}


request = service.hostedmodels().predict(project=project, hostedModelName=hostedModelName, body=input__body)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Prediction API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/prediction
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials


# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('prediction', 'v1.6', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `analyze` method:

# The project associated with the model.
project = '{MY-PROJECT}'

# The unique name for the predictive model.
id = '{MY-ID}'


request = service.trainedmodels().analyze(project=project, id=id)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Prediction API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/prediction
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from googleapiclient import discovery
from oauth2client.client import GoogleCredentials


# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('prediction', 'v1.6', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `delete` method:

# The project associated with the model.
project = '{MY-PROJECT}'

# The unique name for the predictive model.
id = '{MY-ID}'


request = service.trainedmodels().delete(project=project, id=id)
request.execute()
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Prediction API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/prediction
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials


# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('prediction', 'v1.6', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `get` method:

# The project associated with the model.
project = '{MY-PROJECT}'

# The unique name for the predictive model.
id = '{MY-ID}'


request = service.trainedmodels().get(project=project, id=id)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Prediction API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/prediction
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials


# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('prediction', 'v1.6', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `insert` method:

# The project associated with the model.
project = '{MY-PROJECT}'


insert_body = {
    # TODO: Add desired entries of the request body.
}


request = service.trainedmodels().insert(project=project, body=insert_body)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Prediction API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/prediction
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials


# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('prediction', 'v1.6', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `list` method:

# The project associated with the model.
project = '{MY-PROJECT}'


trainedmodels = service.trainedmodels()
request = trainedmodels.list(project=project)
while request is not None:
    response = request.execute()

    for insert2 in response['items']:
        # TODO: Change code below to process each `insert2` resource:
        pprint(insert2)

    request = trainedmodels.list_next(previous_request=request, previous_response=response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Prediction API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/prediction
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials


# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('prediction', 'v1.6', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `predict` method:

# The project associated with the model.
project = '{MY-PROJECT}'

# The unique name for the predictive model.
id = '{MY-ID}'


input__body = {
    # TODO: Add desired entries of the request body.
}


request = service.trainedmodels().predict(project=project, id=id, body=input__body)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Prediction API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/prediction
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk/ and run
   `gcloud beta auth application-default login`
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials


# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
credentials = GoogleCredentials.get_application_default()

service = discovery.build('prediction', 'v1.6', credentials=credentials)


# TODO: Change placeholders below to desired parameter values for the `update` method:

# The project associated with the model.
project = '{MY-PROJECT}'

# The unique name for the predictive model.
id = '{MY-ID}'


update_body = {
    # TODO: Add desired entries of the request body.
}


request = service.trainedmodels().update(project=project, id=id, body=update_body)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
