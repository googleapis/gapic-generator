============== file: composer.json ==============
{
  "name": "example/example",
  "version": "0.1.0",
  "author": "Google LLC",
  "url": "https://github.com/googleapis/googleapis",
  "description": "Google Fake API client for PHP",
  "require": {
    "google/gax": "^0.6.*",
    "google/protobuf": "^0.7.*",
    "php" : "^5.5 || ^7.0"
  },
  "require-dev": {
    "phpunit/phpunit": "^5.7"
  },
  "license": "Apache-2.0",
  "autoload": {
    "psr-4": {
      "Google\\Cloud\\": "src",
      "Google\\Cloud\\Tests\\": "tests",
      "Google\\Cloud\\Tests\\System\\": "tests/system",
      "Google\\Cloud\\Tests\\Unit\\": "tests/unit",
      "": "proto/src"
    }
  },
  "scripts": {
    "test": [
      "phpunit tests"
    ]
  }
}
============== file: src/Example/V1/Gapic/NoTemplatesApiServiceGapicClient.php ==============
<?php
/*
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * GENERATED CODE WARNING
 * This file was generated from the file
 * https://github.com/google/googleapis/blob/master/no_path_templates.proto
 * and updates to that file get reflected here through a refresh process.
 *
 * EXPERIMENTAL: This client library class has not yet been declared GA (1.0). This means that
 * even though we intend the surface to be stable, we may make backwards incompatible changes
 * if necessary.
 *
 * @experimental
 */

namespace Google\Example\V1\Gapic;

use Google\ApiCore\ApiException;
use Google\ApiCore\Call;
use Google\ApiCore\GapicClientTrait;
use Google\ApiCore\PathTemplate;
use Google\ApiCore\RequestParamsHeaderDescriptor;
use Google\ApiCore\RetrySettings;
use Google\ApiCore\Transport\TransportInterface;
use Google\ApiCore\ValidationException;
use Google\Auth\CredentialsLoader;
use Google\Cloud\Example\V1\IncrementRequest;
use Google\Cloud\Example\V1\NoTemplatesAPIServiceGrpcClient;
use Google\Protobuf\GPBEmpty;
use Grpc\Channel;
use Grpc\ChannelCredentials;

/**
 * Service Description:
 *
 * EXPERIMENTAL: This client library class has not yet been declared GA (1.0). This means that
 * even though we intend the surface to be stable, we may make backwards incompatible changes
 * if necessary.
 *
 * This class provides the ability to make remote calls to the backing service through method
 * calls that map to API methods. Sample code to get started:
 *
 * ```
 * $options = [
 *     'serviceAddress' => 'my-service-address',
 *     'scopes' => ['my-service-scope'],
 * ];
 * $noTemplatesApiServiceClient = new NoTemplatesApiServiceClient($options);
 * try {
 *
 *     $noTemplatesApiServiceClient->increment();
 * } finally {
 *     if (isset($noTemplatesApiServiceClient)) {
 *         $noTemplatesApiServiceClient->close();
 *     }
 * }
 * ```
 *
 * @experimental
 */
class NoTemplatesApiServiceGapicClient
{
    use GapicClientTrait;

    /**
     * The name of the service.
     */
    const SERVICE_NAME = 'google.cloud.example.v1.NoTemplatesAPIService';

    /**
     * The default port of the service.
     */
    const DEFAULT_SERVICE_PORT = 443;

    /**
     * The name of the code generator, to be included in the agent header.
     */
    const CODEGEN_NAME = 'gapic';

    /**
     * The code generator version, to be included in the agent header.
     */
    const CODEGEN_VERSION = '0.0.5';




    private static function getClientDefaults()
    {
        return [
            'serviceName' => self::SERVICE_NAME,
            'port' => self::DEFAULT_SERVICE_PORT,
            'clientConfigPath' => __DIR__ . '/../resources/no_templates_api_service_client_config.json',
            'restClientConfigPath' => __DIR__ . '/../resources/no_templates_api_service_rest_client_config.php',
            'descriptorsConfigPath' => __DIR__ . '/../resources/no_templates_api_service_descriptor_config.php',
        ];
    }





    /**
     * Constructor.
     *
     * @param array $options {
     *     Required. Options for configuring the service API wrapper. Those options
     *     that must be provided are marked as Required.
     *
     *     @type string $serviceAddress Required. The domain name of the API remote host.
     *     @type mixed $port The port on which to connect to the remote host. Default 443.
     *     @type Channel $channel
     *           A `Channel` object. If not specified, a channel will be constructed.
     *           NOTE: This option is only valid when utilizing the gRPC transport.
     *     @type ChannelCredentials $sslCreds
     *           A `ChannelCredentials` object for use with an SSL-enabled channel.
     *           Default: a credentials object returned from
     *           \Grpc\ChannelCredentials::createSsl().
     *           NOTE: This option is only valid when utilizing the gRPC transport. Also, if the $channel
     *           optional argument is specified, then this argument is unused.
     *     @type bool $forceNewChannel
     *           If true, this forces gRPC to create a new channel instead of using a persistent channel.
     *           Defaults to false.
     *           NOTE: This option is only valid when utilizing the gRPC transport. Also, if the $channel
     *           optional argument is specified, then this option is unused.
     *     @type CredentialsLoader $credentialsLoader
     *           A CredentialsLoader object created using the Google\Auth library.
     *     @type string[] $scopes Required. A string array of scopes to use when acquiring credentials.
     *     @type string $clientConfigPath
     *           Path to a JSON file containing client method configuration, including retry settings.
     *           Specify this setting to specify the retry behavior of all methods on the client.
     *           By default this settings points to the default client config file, which is provided
     *           in the resources folder. The retry settings provided in this option can be overridden
     *           by settings in $retryingOverride
     *     @type array $retryingOverride
     *           An associative array in which the keys are method names (e.g. 'createFoo'), and
     *           the values are retry settings to use for that method. The retry settings for each
     *           method can be a {@see Google\ApiCore\RetrySettings} object, or an associative array
     *           of retry settings parameters. See the documentation on {@see Google\ApiCore\RetrySettings}
     *           for example usage. Passing a value of null is equivalent to a value of
     *           ['retriesEnabled' => false]. Retry settings provided in this setting override the
     *           settings in $clientConfigPath.
     *     @type callable $authHttpHandler A handler used to deliver PSR-7 requests specifically
     *           for authentication. Should match a signature of
     *           `function (RequestInterface $request, array $options) : ResponseInterface`.
     *     @type callable $httpHandler A handler used to deliver PSR-7 requests. Should match a
     *           signature of `function (RequestInterface $request, array $options) : PromiseInterface`.
     *           NOTE: This option is only valid when utilizing the REST transport.
     *     @type string|TransportInterface $transport The transport used for executing network
     *           requests. May be either the string `rest` or `grpc`. Additionally, it is possible
     *           to pass in an already instantiated transport. Defaults to `grpc` if gRPC support is
     *           detected on the system.
     * }
     * @throws ValidationException Throws a ValidationException if required arguments are missing
     *                             from the $options array.
     * @experimental
     */
    public function __construct($options = [])
    {
        $this->setClientOptions($options + self::getClientDefaults());
    }

    /**
     * Increments something.
     *   Sometimes the comments are indented, but Sphinx doesn't like that. So
     *  in Python we trim all
     *      leading
     *         and trailing
     *    whitespace.
     *
     * Sample code:
     * ```
     * $options = [
     *     'serviceAddress' => 'my-service-address',
     *     'scopes' => ['my-service-scope'],
     * ];
     * $noTemplatesApiServiceClient = new NoTemplatesApiServiceClient($options);
     * try {
     *
     *     $noTemplatesApiServiceClient->increment();
     * } finally {
     *     if (isset($noTemplatesApiServiceClient)) {
     *         $noTemplatesApiServiceClient->close();
     *     }
     * }
     * ```
     *
     * @param array $optionalArgs {
     *     Optional.
     *     @type RetrySettings|array $retrySettings
     *          Retry settings to use for this call. Can be a
     *          {@see Google\ApiCore\RetrySettings} object, or an associative array
     *          of retry settings parameters. See the documentation on
     *          {@see Google\ApiCore\RetrySettings} for example usage.
     * }
     *
     * @throws ApiException if the remote call fails
     * @experimental
     */
    public function increment($optionalArgs = [])
    {
        $request = new IncrementRequest();

        return $this->startCall(
            'Increment',
            GPBEmpty::class,
            $optionalArgs,
            $request
        )->wait();
    }

}
============== file: src/Example/V1/NoTemplatesApiServiceClient.php ==============
<?php
/*
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * GENERATED CODE WARNING
 * This file was generated from the file
 * https://github.com/google/googleapis/blob/master/no_path_templates.proto
 * and updates to that file get reflected here through a refresh process.
 *
 * EXPERIMENTAL: This client library class has not yet been declared GA (1.0). This means that
 * even though we intend the surface to be stable, we may make backwards incompatible changes
 * if necessary.
 *
 * @experimental
 */

namespace Google\Example\V1;

use Google\Example\V1\Gapic\NoTemplatesApiServiceGapicClient;

/**
 * {@inheritdoc}
 */
class NoTemplatesApiServiceClient extends NoTemplatesApiServiceGapicClient
{
    // This class is intentionally empty, and is intended to hold manual
    // additions to the generated {@see NoTemplatesApiServiceClientImpl} class.
}
============== file: src/Example/V1/resources/no_templates_api_service_client_config.json ==============
{
  "interfaces": {
    "google.cloud.example.v1.NoTemplatesAPIService": {
      "retry_codes": {},
      "retry_params": {},
      "methods": {
        "Increment": {
          "timeout_millis": 10000
        }
      }
    }
  }
}

============== file: src/Example/V1/resources/no_templates_api_service_descriptor_config.php ==============
<?php

return [
    'interfaces' => [
        'google.cloud.example.v1.NoTemplatesAPIService' => [
        ]
    ]
];

============== file: src/Example/V1/resources/no_templates_api_service_rest_client_config.php ==============
<?php

return [
    'interfaces' => [
        'google.cloud.example.v1.NoTemplatesAPIService' => [
            'Increment' => [
                'method' => 'post',
                'uriTemplate' => '/v1/me:increment',
                'body' => '*',
            ],
        ],
    ]
];

============== file: tests/unit/Example/V1/NoTemplatesApiServiceClientTest.php ==============
<?php
/*
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * GENERATED CODE WARNING
 * This file was automatically generated - do not edit!
 */

namespace Google\Tests\Unit\Example\V1;

use Google\Example\V1\NoTemplatesApiServiceClient;
use Google\ApiCore\ApiException;
use Google\ApiCore\BidiStream;
use Google\ApiCore\LongRunning\OperationsClient;
use Google\ApiCore\ServerStream;
use Google\ApiCore\Testing\GeneratedTest;
use Google\ApiCore\Testing\MockTransport;
use Google\Cloud\Example\V1\IncrementRequest;
use Google\Cloud\Example\V1\NoTemplatesAPIServiceGrpcClient;
use Google\LongRunning\GetOperationRequest;
use Google\Protobuf\Any;
use Google\Protobuf\GPBEmpty;
use Grpc;
use PHPUnit\Framework\TestCase;
use stdClass;

/**
 * @group example
 * @group grpc
 */
class NoTemplatesApiServiceClientTest extends GeneratedTest
{
    /**
     * @return TransportInterface
     */
    private function createTransport($deserialize = null)
    {
        return new MockTransport($deserialize);
    }

    /**
     * @return NoTemplatesApiServiceClient
     */
    private function createClient(array $options = [])
    {
        return new NoTemplatesApiServiceClient($options);
    }
    /**
     * @test
     */
    public function incrementTest()
    {
        $transport = $this->createTransport();
        $client = $this->createClient(['transport' => $transport]);

        $this->assertTrue($transport->isExhausted());

        // Mock response
        $expectedResponse = new GPBEmpty();
        $transport->addResponse($expectedResponse);

        $client->increment();
        $actualRequests = $transport->popReceivedCalls();
        $this->assertSame(1, count($actualRequests));
        $actualFuncCall = $actualRequests[0]->getFuncCall();
        $actualRequestObject = $actualRequests[0]->getRequestObject();
        $this->assertSame('/google.cloud.example.v1.NoTemplatesAPIService/Increment', $actualFuncCall);


        $this->assertTrue($transport->isExhausted());
    }

    /**
     * @test
     */
    public function incrementExceptionTest()
    {
        $transport = $this->createTransport();
        $client = $this->createClient(['transport' => $transport]);

        $this->assertTrue($transport->isExhausted());

        $status = new stdClass();
        $status->code = Grpc\STATUS_DATA_LOSS;
        $status->details = 'internal error';

        $expectedExceptionMessage = json_encode([
           'message' => 'internal error',
           'code' => Grpc\STATUS_DATA_LOSS,
           'status' => 'DATA_LOSS',
           'details' => [],
        ], JSON_PRETTY_PRINT);
        $transport->addResponse(null, $status);

        try {
            $client->increment();
            // If the $client method call did not throw, fail the test
            $this->fail('Expected an ApiException, but no exception was thrown.');
        } catch (ApiException $ex) {
            $this->assertEquals($status->code, $ex->getCode());
            $this->assertEquals($expectedExceptionMessage, $ex->getMessage());
        }

        // Call popReceivedCalls to ensure the stub is exhausted
        $transport->popReceivedCalls();
        $this->assertTrue($transport->isExhausted());
    }

}
