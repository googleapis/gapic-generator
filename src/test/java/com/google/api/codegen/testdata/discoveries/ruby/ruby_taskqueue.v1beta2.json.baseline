
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the TaskQueue API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/taskqueue
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/taskqueue_v1beta2'
require 'json'

service = Google::Apis::TaskqueueV1beta2::TaskqueueService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project under which the queue lies.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The id of the taskqueue to get the properties of.
taskqueue = '{MY-TASKQUEUE}'  # TODO: Update placeholder value(s).

# Perform the call
response = service.get_taskqueue(project, taskqueue)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the TaskQueue API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/taskqueue
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/taskqueue_v1beta2'
require 'json'

service = Google::Apis::TaskqueueV1beta2::TaskqueueService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project under which the queue lies.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The taskqueue to delete a task from.
taskqueue = '{MY-TASKQUEUE}'  # TODO: Update placeholder value(s).

# The id of the task to delete.
task = '{MY-TASK}'  # TODO: Update placeholder value(s).

# Perform the call
service.delete_task(project, taskqueue, task)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the TaskQueue API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/taskqueue
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/taskqueue_v1beta2'
require 'json'

service = Google::Apis::TaskqueueV1beta2::TaskqueueService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project under which the queue lies.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The taskqueue in which the task belongs.
taskqueue = '{MY-TASKQUEUE}'  # TODO: Update placeholder value(s).

# The task to get properties of.
task = '{MY-TASK}'  # TODO: Update placeholder value(s).

# Perform the call
response = service.get_task(project, taskqueue, task)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the TaskQueue API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/taskqueue
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/taskqueue_v1beta2'
require 'json'

service = Google::Apis::TaskqueueV1beta2::TaskqueueService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project under which the queue lies
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The taskqueue to insert the task into
taskqueue = '{MY-TASKQUEUE}'  # TODO: Update placeholder value(s).

# TODO: Assign values to the desired members.
task_body = Google::Apis::TaskqueueV1beta2::Task.new

# Perform the call
response = service.insert_task(project, taskqueue, task_body)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the TaskQueue API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/taskqueue
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/taskqueue_v1beta2'
require 'json'

service = Google::Apis::TaskqueueV1beta2::TaskqueueService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project under which the queue lies.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The taskqueue to lease a task from.
taskqueue = '{MY-TASKQUEUE}'  # TODO: Update placeholder value(s).

# The number of tasks to lease.
num_tasks = 0  # TODO: Update placeholder value(s).

# The lease in seconds.
lease_secs = 0  # TODO: Update placeholder value(s).

# Perform the call
response = service.lease_task(project, taskqueue, num_tasks, lease_secs)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the TaskQueue API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/taskqueue
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/taskqueue_v1beta2'
require 'json'

service = Google::Apis::TaskqueueV1beta2::TaskqueueService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project under which the queue lies.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).

# The id of the taskqueue to list tasks from.
taskqueue = '{MY-TASKQUEUE}'  # TODO: Update placeholder value(s).

# Perform the call
response = service.list_tasks(project, taskqueue)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the TaskQueue API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/taskqueue
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/taskqueue_v1beta2'
require 'json'

service = Google::Apis::TaskqueueV1beta2::TaskqueueService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project under which the queue lies.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).


taskqueue = '{MY-TASKQUEUE}'  # TODO: Update placeholder value(s).


task = '{MY-TASK}'  # TODO: Update placeholder value(s).

# The new lease in seconds.
new_lease_seconds = 0  # TODO: Update placeholder value(s).

# TODO: Assign values to the desired members to be changed.
task_body = Google::Apis::TaskqueueV1beta2::Task.new

# Perform the call
response = service.patch_task(project, taskqueue, task, new_lease_seconds, task_body)

# TODO: Use response
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the TaskQueue API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/taskqueue
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/taskqueue_v1beta2'
require 'json'

service = Google::Apis::TaskqueueV1beta2::TaskqueueService.new

# Authentication is provided by the `gcloud` tool when running locally
# and by built-in service accounts when running on GAE, GCE, or GKE.
# For more information, see
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project under which the queue lies.
project = '{MY-PROJECT}'  # TODO: Update placeholder value(s).


taskqueue = '{MY-TASKQUEUE}'  # TODO: Update placeholder value(s).


task = '{MY-TASK}'  # TODO: Update placeholder value(s).

# The new lease in seconds.
new_lease_seconds = 0  # TODO: Update placeholder value(s).

# TODO: Assign values to the desired members.
task_body = Google::Apis::TaskqueueV1beta2::Task.new

# Perform the call
response = service.update_task(project, taskqueue, task, new_lease_seconds, task_body)

# TODO: Use response
puts JSON.pretty_generate(response)
