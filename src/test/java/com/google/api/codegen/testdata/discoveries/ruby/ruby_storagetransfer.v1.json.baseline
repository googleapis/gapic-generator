
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/storagetransfer_v1'

service = Google::Apis::StoragetransferV1::StoragetransferService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])



# Perform the call
response = service.get_google_service_account_v1()
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/storagetransfer_v1'

service = Google::Apis::StoragetransferV1::StoragetransferService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'get_google_service_account' method:

# * The ID of the Google Developers Console project that the Google service account is associated
#   with. Required.
project_id = ''

# Perform the call
response = service.get_google_service_account(project_id)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/storagetransfer_v1'

service = Google::Apis::StoragetransferV1::StoragetransferService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])



transfer_job_object = Google::Apis::StoragetransferV1::TransferJob.new


# Perform the call
response = service.create_transfer_job(transfer_job_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/storagetransfer_v1'

service = Google::Apis::StoragetransferV1::StoragetransferService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'get_transfer_job' method:

# * The job to get. Required.
job_name = ''

# Perform the call
response = service.get_transfer_job(job_name)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/storagetransfer_v1'

service = Google::Apis::StoragetransferV1::StoragetransferService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])



# Perform the call
result_list = service.fetch_all(items: :transferJobs) { |token|
  service.list_transfer_jobs(, page_token: token)
}
result_list.each { |element|
  # doThingsWith(element)
}
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/storagetransfer_v1'

service = Google::Apis::StoragetransferV1::StoragetransferService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'patch_transfer_job' method:

# * The name of job to update. Required.
job_name = ''

update_transfer_job_request_object = Google::Apis::StoragetransferV1::UpdateTransferJobRequest.new


# Perform the call
response = service.patch_transfer_job(job_name, update_transfer_job_request_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/storagetransfer_v1'

service = Google::Apis::StoragetransferV1::StoragetransferService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'cancel_transfer_operation' method:

# * The name of the operation resource to be cancelled.
name = ''

# Perform the call
service.cancel_transfer_operation(name)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/storagetransfer_v1'

service = Google::Apis::StoragetransferV1::StoragetransferService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'delete_transfer_operation' method:

# * The name of the operation resource to be deleted.
name = ''

# Perform the call
service.delete_transfer_operation(name)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/storagetransfer_v1'

service = Google::Apis::StoragetransferV1::StoragetransferService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'get_transfer_operation' method:

# * The name of the operation resource.
name = ''

# Perform the call
response = service.get_transfer_operation(name)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/storagetransfer_v1'

service = Google::Apis::StoragetransferV1::StoragetransferService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'list_transfer_operations' method:

# * The value `transferOperations`.
name = ''

# Perform the call
result_list = service.fetch_all(items: :operations) { |token|
  service.list_transfer_operations(name, page_token: token)
}
result_list.each { |element|
  # doThingsWith(element)
}
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/storagetransfer_v1'

service = Google::Apis::StoragetransferV1::StoragetransferService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'pause_transfer_operation' method:

# * The name of the transfer operation. Required.
name = ''

pause_transfer_operation_request_object = Google::Apis::StoragetransferV1::PauseTransferOperationRequest.new


# Perform the call
service.pause_transfer_operation(name, pause_transfer_operation_request_object)
# PRE-REQUISITES:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for Auth.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'
# 3. To install the client library and Application Default Credentials library, run:
#    'gem install google-api-client'
#    'gem install googleauth'
require 'googleauth'
require 'google/apis/storagetransfer_v1'

service = Google::Apis::StoragetransferV1::StoragetransferService.new
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Change placeholders below to appropriate parameter values for the 'resume_transfer_operation' method:

# * The name of the transfer operation. Required.
name = ''

resume_transfer_operation_request_object = Google::Apis::StoragetransferV1::ResumeTransferOperationRequest.new


# Perform the call
service.resume_transfer_operation(name, resume_transfer_operation_request_object)
