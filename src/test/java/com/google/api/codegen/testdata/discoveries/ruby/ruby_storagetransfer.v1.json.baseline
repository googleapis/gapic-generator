
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/storagetransfer_v1'
require 'json'

service = Google::Apis::StoragetransferV1::StoragetransferService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

response = service.get_google_service_account_v1()

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/storagetransfer_v1'
require 'json'

service = Google::Apis::StoragetransferV1::StoragetransferService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the Google Developers Console project that the Google service account is associated with.
# Required.
project_id = ''  # TODO: Update placeholder value.

response = service.get_google_service_account(project_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/storagetransfer_v1'
require 'json'

service = Google::Apis::StoragetransferV1::StoragetransferService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::StoragetransferV1::TransferJob.new

response = service.create_transfer_job(request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/storagetransfer_v1'
require 'json'

service = Google::Apis::StoragetransferV1::StoragetransferService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The job to get. Required.
job_name = ''  # TODO: Update placeholder value.

response = service.get_transfer_job(job_name)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/storagetransfer_v1'
require 'json'

service = Google::Apis::StoragetransferV1::StoragetransferService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

transfer_jobs = service.fetch_all(items: :transfer_jobs) do |token|
  service.list_transfer_jobs(page_token: token)
end

transfer_jobs.each do |transfer_job|
  # TODO: Change code below to process each `transfer_job` resource:
  puts JSON.pretty_generate(transfer_job)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/storagetransfer_v1'
require 'json'

service = Google::Apis::StoragetransferV1::StoragetransferService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of job to update. Required.
job_name = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# fields will be changed:
request_body = Google::Apis::StoragetransferV1::UpdateTransferJobRequest.new

response = service.patch_transfer_job(job_name, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/storagetransfer_v1'

service = Google::Apis::StoragetransferV1::StoragetransferService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the operation resource to be cancelled.
name = ''  # TODO: Update placeholder value.

service.cancel_transfer_operation(name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/storagetransfer_v1'

service = Google::Apis::StoragetransferV1::StoragetransferService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the operation resource to be deleted.
name = ''  # TODO: Update placeholder value.

service.delete_transfer_operation(name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/storagetransfer_v1'
require 'json'

service = Google::Apis::StoragetransferV1::StoragetransferService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the operation resource.
name = ''  # TODO: Update placeholder value.

response = service.get_transfer_operation(name)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/storagetransfer_v1'
require 'json'

service = Google::Apis::StoragetransferV1::StoragetransferService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The value `transferOperations`.
name = ''  # TODO: Update placeholder value.

operations = service.fetch_all(items: :operations) do |token|
  service.list_transfer_operations(name, page_token: token)
end

operations.each do |operation|
  # TODO: Change code below to process each `operation` resource:
  puts JSON.pretty_generate(operation)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/storagetransfer_v1'

service = Google::Apis::StoragetransferV1::StoragetransferService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the transfer operation. Required.
name = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::StoragetransferV1::PauseTransferOperationRequest.new

service.pause_transfer_operation(name, request_body)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Storage Transfer API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/storagetransfer
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/storagetransfer_v1'

service = Google::Apis::StoragetransferV1::StoragetransferService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the transfer operation. Required.
name = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::StoragetransferV1::ResumeTransferOperationRequest.new

service.resume_transfer_operation(name, request_body)
