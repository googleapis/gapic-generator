
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being requested.
# `resource` is usually specified as a path. For example, a Project
# resource is specified as `projects/{project}`.
resource = 'my-resource'  # TODO: Update placeholder value.

response = service.get_project_snapshot_iam_policy(resource)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being specified.
# `resource` is usually specified as a path. For example, a Project
# resource is specified as `projects/{project}`.
resource = 'my-resource'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::PubsubV1::SetIamPolicyRequest.new

response = service.set_snapshot_iam_policy(resource, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy detail is being requested.
# `resource` is usually specified as a path. For example, a Project
# resource is specified as `projects/{project}`.
resource = 'my-resource'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::PubsubV1::TestIamPermissionsRequest.new

response = service.test_snapshot_iam_permissions(resource, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The subscription whose message is being acknowledged.
# Format is `projects/{project}/subscriptions/{sub}`.
subscription = 'my-subscription'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::PubsubV1::AcknowledgeRequest.new

service.acknowledge_subscription(subscription, request_body)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the subscription. It must have the format
# `"projects/{project}/subscriptions/{subscription}"`. `{subscription}` must
# start with a letter, and contain only letters (`[A-Za-z]`), numbers
# (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),
# plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters
# in length, and it must not start with `"goog"`.
name = 'my-name'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::PubsubV1::Subscription.new

response = service.create_subscription(name, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The subscription to delete.
# Format is `projects/{project}/subscriptions/{sub}`.
subscription = 'my-subscription'  # TODO: Update placeholder value.

service.delete_subscription(subscription)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the subscription to get.
# Format is `projects/{project}/subscriptions/{sub}`.
subscription = 'my-subscription'  # TODO: Update placeholder value.

response = service.get_subscription(subscription)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being requested.
# `resource` is usually specified as a path. For example, a Project
# resource is specified as `projects/{project}`.
resource = 'my-resource'  # TODO: Update placeholder value.

response = service.get_project_subscription_iam_policy(resource)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the cloud project that subscriptions belong to.
# Format is `projects/{project}`.
project = 'my-project'  # TODO: Update placeholder value.

subscriptions = service.fetch_all(items: :subscriptions) do |token|
  service.list_subscriptions(project, page_token: token)
end

subscriptions.each do |subscription|
  # TODO: Change code below to process each `subscription` resource:
  puts JSON.pretty_generate(subscription)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the subscription.
# Format is `projects/{project}/subscriptions/{sub}`.
subscription = 'my-subscription'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::PubsubV1::ModifyAckDeadlineRequest.new

service.modify_subscription_ack_deadline(subscription, request_body)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the subscription.
# Format is `projects/{project}/subscriptions/{sub}`.
subscription = 'my-subscription'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::PubsubV1::ModifyPushConfigRequest.new

service.modify_subscription_push_config(subscription, request_body)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The subscription from which messages should be pulled.
# Format is `projects/{project}/subscriptions/{sub}`.
subscription = 'my-subscription'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::PubsubV1::PullRequest.new

response = service.pull_subscription(subscription, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being specified.
# `resource` is usually specified as a path. For example, a Project
# resource is specified as `projects/{project}`.
resource = 'my-resource'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::PubsubV1::SetIamPolicyRequest.new

response = service.set_subscription_iam_policy(resource, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy detail is being requested.
# `resource` is usually specified as a path. For example, a Project
# resource is specified as `projects/{project}`.
resource = 'my-resource'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::PubsubV1::TestIamPermissionsRequest.new

response = service.test_subscription_iam_permissions(resource, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the topic. It must have the format
# `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,
# and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),
# underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent
# signs (`%`). It must be between 3 and 255 characters in length, and it
# must not start with `"goog"`.
name = 'my-name'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::PubsubV1::Topic.new

response = service.create_topic(name, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Name of the topic to delete.
# Format is `projects/{project}/topics/{topic}`.
topic = 'my-topic'  # TODO: Update placeholder value.

service.delete_topic(topic)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the topic to get.
# Format is `projects/{project}/topics/{topic}`.
topic = 'my-topic'  # TODO: Update placeholder value.

response = service.get_topic(topic)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being requested.
# `resource` is usually specified as a path. For example, a Project
# resource is specified as `projects/{project}`.
resource = 'my-resource'  # TODO: Update placeholder value.

response = service.get_project_topic_iam_policy(resource)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the cloud project that topics belong to.
# Format is `projects/{project}`.
project = 'my-project'  # TODO: Update placeholder value.

topics = service.fetch_all(items: :topics) do |token|
  service.list_topics(project, page_token: token)
end

topics.each do |topic|
  # TODO: Change code below to process each `topic` resource:
  puts JSON.pretty_generate(topic)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The messages in the request will be published on this topic.
# Format is `projects/{project}/topics/{topic}`.
topic = 'my-topic'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::PubsubV1::PublishRequest.new

response = service.publish_topic(topic, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being specified.
# `resource` is usually specified as a path. For example, a Project
# resource is specified as `projects/{project}`.
resource = 'my-resource'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::PubsubV1::SetIamPolicyRequest.new

response = service.set_topic_iam_policy(resource, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the topic that subscriptions are attached to.
# Format is `projects/{project}/topics/{topic}`.
topic = 'my-topic'  # TODO: Update placeholder value.

subscriptions = service.fetch_all(items: :subscriptions) do |token|
  service.list_topic_subscriptions(topic, page_token: token)
end

subscriptions.each do |item|
  # TODO: Change code below to process each `item` resource:
  puts JSON.pretty_generate(item)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Cloud Pub/Sub API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/pubsub
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/pubsub_v1'
require 'json'

service = Google::Apis::PubsubV1::PubsubService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy detail is being requested.
# `resource` is usually specified as a path. For example, a Project
# resource is specified as `projects/{project}`.
resource = 'my-resource'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::PubsubV1::TestIamPermissionsRequest.new

response = service.test_topic_iam_permissions(resource, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
