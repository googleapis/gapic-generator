
<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service.
$service = new Google_Service_Dataproc($client);

// * [Required] The ID of the Google Cloud Platform project that the cluster belongs to.
$projectId = '';

// * [Required] The Cloud Dataproc region in which to handle the request.
$region = '';

$postBody = new Google_Service_Dataproc_Cluster($client);

$response = $service->projects_regions_clusters->create($projectId, $region, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service.
$service = new Google_Service_Dataproc($client);

// * [Required] The ID of the Google Cloud Platform project that the cluster belongs to.
$projectId = '';

// * [Required] The Cloud Dataproc region in which to handle the request.
$region = '';

// * [Required] The cluster name.
$clusterName = '';

$response = $service->projects_regions_clusters->delete($projectId, $region, $clusterName);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service.
$service = new Google_Service_Dataproc($client);

// * [Required] The ID of the Google Cloud Platform project that the cluster belongs to.
$projectId = '';

// * [Required] The Cloud Dataproc region in which to handle the request.
$region = '';

// * [Required] The cluster name.
$clusterName = '';

$postBody = new Google_Service_Dataproc_DiagnoseClusterRequest($client);

$response = $service->projects_regions_clusters->diagnose($projectId, $region, $clusterName, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service.
$service = new Google_Service_Dataproc($client);

// * [Required] The ID of the Google Cloud Platform project that the cluster belongs to.
$projectId = '';

// * [Required] The Cloud Dataproc region in which to handle the request.
$region = '';

// * [Required] The cluster name.
$clusterName = '';

$response = $service->projects_regions_clusters->get($projectId, $region, $clusterName);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service.
$service = new Google_Service_Dataproc($client);

// * [Required] The ID of the Google Cloud Platform project that the cluster belongs to.
$projectId = '';

// * [Required] The Cloud Dataproc region in which to handle the request.
$region = '';

$response = $service->projects_regions_clusters->listProjectsRegionsClusters($projectId, $region);

foreach ($response['clusters'] as $element) {
  // TODO: Add code here to process the element.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service.
$service = new Google_Service_Dataproc($client);

// * [Required] The ID of the Google Cloud Platform project the cluster belongs to.
$projectId = '';

// * [Required] The Cloud Dataproc region in which to handle the request.
$region = '';

// * [Required] The cluster name.
$clusterName = '';

$postBody = new Google_Service_Dataproc_Cluster($client);

$response = $service->projects_regions_clusters->patch($projectId, $region, $clusterName, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service.
$service = new Google_Service_Dataproc($client);

// * [Required] The ID of the Google Cloud Platform project that the job belongs to.
$projectId = '';

// * [Required] The Cloud Dataproc region in which to handle the request.
$region = '';

// * [Required] The job ID.
$jobId = '';

$postBody = new Google_Service_Dataproc_CancelJobRequest($client);

$response = $service->projects_regions_jobs->cancel($projectId, $region, $jobId, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service.
$service = new Google_Service_Dataproc($client);

// * [Required] The ID of the Google Cloud Platform project that the job belongs to.
$projectId = '';

// * [Required] The Cloud Dataproc region in which to handle the request.
$region = '';

// * [Required] The job ID.
$jobId = '';

$response = $service->projects_regions_jobs->delete($projectId, $region, $jobId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service.
$service = new Google_Service_Dataproc($client);

// * [Required] The ID of the Google Cloud Platform project that the job belongs to.
$projectId = '';

// * [Required] The Cloud Dataproc region in which to handle the request.
$region = '';

// * [Required] The job ID.
$jobId = '';

$response = $service->projects_regions_jobs->get($projectId, $region, $jobId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service.
$service = new Google_Service_Dataproc($client);

// * [Required] The ID of the Google Cloud Platform project that the job belongs to.
$projectId = '';

// * [Required] The Cloud Dataproc region in which to handle the request.
$region = '';

$response = $service->projects_regions_jobs->listProjectsRegionsJobs($projectId, $region);

foreach ($response['jobs'] as $element) {
  // TODO: Add code here to process the element.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service.
$service = new Google_Service_Dataproc($client);

// * [Required] The ID of the Google Cloud Platform project that the job belongs to.
$projectId = '';

// * [Required] The Cloud Dataproc region in which to handle the request.
$region = '';

$postBody = new Google_Service_Dataproc_SubmitJobRequest($client);

$response = $service->projects_regions_jobs->submit($projectId, $region, $postBody);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service.
$service = new Google_Service_Dataproc($client);

// * The name of the operation resource to be cancelled.
$name = 'projects/{MY-PROJECT}/regions/{MY-REGION}/operations/{MY-OPERATION}';

$response = $service->projects_regions_operations->cancel($name);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service.
$service = new Google_Service_Dataproc($client);

// * The name of the operation resource to be deleted.
$name = 'projects/{MY-PROJECT}/regions/{MY-REGION}/operations/{MY-OPERATION}';

$response = $service->projects_regions_operations->delete($name);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service.
$service = new Google_Service_Dataproc($client);

// * The name of the operation resource.
$name = 'projects/{MY-PROJECT}/regions/{MY-REGION}/operations/{MY-OPERATION}';

$response = $service->projects_regions_operations->get($name);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc
 * 2. To install the client library with Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud auth application-default login'.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

// Create a new client.
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service.
$service = new Google_Service_Dataproc($client);

// * The name of the operation collection.
$name = '';

$response = $service->projects_regions_operations->listProjectsRegionsOperations($name);

foreach ($response['operations'] as $element) {
  // TODO: Add code here to process the element.
}

