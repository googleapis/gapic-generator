
<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// Name of the media that is being downloaded. See ByteStream.ReadRequest.resource_name.
$resourceName = '';

$response = $service->media->downloadMedia($resourceName);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// Name of the media that is being downloaded. See ByteStream.ReadRequest.resource_name.
$resourceName = '';

$response = $service->media->uploadMedia($resourceName);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// [Required] The ID of the Google Cloud Platform project that the cluster belongs to.
$projectId = '';
// [Required] The Cloud Dataproc region in which to handle the request.
$region = '';

$response = $service->projects->regions->clusters->createClusters($projectId, $region);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// [Required] The ID of the Google Cloud Platform project that the cluster belongs to.
$projectId = '';
// [Required] The Cloud Dataproc region in which to handle the request.
$region = '';
// [Required] The cluster name.
$clusterName = '';

$response = $service->projects->regions->clusters->deleteClusters($projectId, $region, $clusterName);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// [Required] The ID of the Google Cloud Platform project that the cluster belongs to.
$projectId = '';
// [Required] The Cloud Dataproc region in which to handle the request.
$region = '';
// [Required] The cluster name.
$clusterName = '';

$response = $service->projects->regions->clusters->diagnoseClusters($projectId, $region, $clusterName);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// [Required] The ID of the Google Cloud Platform project that the cluster belongs to.
$projectId = '';
// [Required] The Cloud Dataproc region in which to handle the request.
$region = '';
// [Required] The cluster name.
$clusterName = '';

$response = $service->projects->regions->clusters->getClusters($projectId, $region, $clusterName);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// [Required] The ID of the Google Cloud Platform project that the cluster belongs to.
$projectId = '';
// [Required] The Cloud Dataproc region in which to handle the request.
$region = '';

$response = $service->projects->regions->clusters->listClusters($projectId, $region);

foreach ($response['clusters'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// [Required] The ID of the Google Cloud Platform project the cluster belongs to.
$projectId = '';
// [Required] The Cloud Dataproc region in which to handle the request.
$region = '';
// [Required] The cluster name.
$clusterName = '';

$response = $service->projects->regions->clusters->patchClusters($projectId, $region, $clusterName);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// [Required] The ID of the Google Cloud Platform project that the job belongs to.
$projectId = '';
// [Required] The Cloud Dataproc region in which to handle the request.
$region = '';
// [Required] The job ID.
$jobId = '';

$response = $service->projects->regions->jobs->cancelJobs($projectId, $region, $jobId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// [Required] The ID of the Google Cloud Platform project that the job belongs to.
$projectId = '';
// [Required] The Cloud Dataproc region in which to handle the request.
$region = '';
// [Required] The job ID.
$jobId = '';

$response = $service->projects->regions->jobs->deleteJobs($projectId, $region, $jobId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// [Required] The ID of the Google Cloud Platform project that the job belongs to.
$projectId = '';
// [Required] The Cloud Dataproc region in which to handle the request.
$region = '';
// [Required] The job ID.
$jobId = '';

$response = $service->projects->regions->jobs->getJobs($projectId, $region, $jobId);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// [Required] The ID of the Google Cloud Platform project that the job belongs to.
$projectId = '';
// [Required] The Cloud Dataproc region in which to handle the request.
$region = '';

$response = $service->projects->regions->jobs->listJobs($projectId, $region);

foreach ($response['jobs'] as $element) {
  // TODO: Add code here to process the elements.
}

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// [Required] The ID of the Google Cloud Platform project that the job belongs to.
$projectId = '';
// [Required] The Cloud Dataproc region in which to handle the request.
$region = '';

$response = $service->projects->regions->jobs->submitJobs($projectId, $region);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// The name of the operation resource to be cancelled.
$name = '';

$response = $service->projects->regions->operations->cancelOperations($name);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// The name of the operation resource to be deleted.
$name = '';

$response = $service->projects->regions->operations->deleteOperations($name);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// The name of the operation resource.
$name = '';

$response = $service->projects->regions->operations->getOperations($name);

<?php
/*
 * PRE-REQUISITES:
 * ---------------
 * 1. If not already done, enable the Google Cloud Dataproc API and check quota for your project at
 *    https://console.developers.google.com/apis/api/dataproc_component/quotas
 * 2. To install the client library on Composer, check installation instructions at
 *    https://github.com/google/google-api-php-client.
 * 3. This sample uses Application Default Credentials for Auth. If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk/ and run 'gcloud beta auth application-default login'
 */

// composer autoloading
require_once __DIR__ . '/vendor/autoload.php';


// Create a new client
$client = new Google_Client();
$client->setApplicationName('Client Sample Application');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

// Create a new Dataproc service
$service = new Google_Service_Dataproc($client);

// The name of the operation collection.
$name = '';

$response = $service->projects->regions->operations->listOperations($name);

foreach ($response['operations'] as $element) {
  // TODO: Add code here to process the elements.
}

