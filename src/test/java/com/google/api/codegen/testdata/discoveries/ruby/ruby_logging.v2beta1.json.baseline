
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/logging_v2beta1'
require 'json'

service = Google::Apis::LoggingV2beta1::LoggingService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholder below to desired parameter value for the `delete_billing_account_log` method:

# Required. The resource name of the log to delete.  Example:
# `"projects/my-project/logs/syslog"`.
log_name = 'billingAccounts/{MY-BILLINGACCOUNT}/logs/{MY-LOG}'


# Perform the call
service.delete_billing_account_log(log_name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/logging_v2beta1'
require 'json'

service = Google::Apis::LoggingV2beta1::LoggingService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


request_body = Google::Apis::LoggingV2beta1::ListLogEntriesRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
entries = service.fetch_all(items: :entries) do |token|
  service.list_entry_log_entries(request_body, page_token: token)
end

entries.each do |log_entry|
  # TODO: Change code below to process each `log_entry` resource:
  puts JSON.pretty_generate(log_entry)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/logging_v2beta1'
require 'json'

service = Google::Apis::LoggingV2beta1::LoggingService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


request_body = Google::Apis::LoggingV2beta1::WriteLogEntriesRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.write_entry_log_entries(request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/logging_v2beta1'
require 'json'

service = Google::Apis::LoggingV2beta1::LoggingService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# Perform the call
resourceDescriptors = service.fetch_all(items: :resourceDescriptors) do |token|
  service.list_monitored_resource_descriptors(, page_token: token)
end

resourceDescriptors.each do |monitored_resource_descriptor|
  # TODO: Change code below to process each `monitored_resource_descriptor` resource:
  puts JSON.pretty_generate(monitored_resource_descriptor)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/logging_v2beta1'
require 'json'

service = Google::Apis::LoggingV2beta1::LoggingService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholder below to desired parameter value for the `delete_organization_log` method:

# Required. The resource name of the log to delete.  Example:
# `"projects/my-project/logs/syslog"`.
log_name = 'organizations/{MY-ORGANIZATION}/logs/{MY-LOG}'


# Perform the call
service.delete_organization_log(log_name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/logging_v2beta1'
require 'json'

service = Google::Apis::LoggingV2beta1::LoggingService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholder below to desired parameter value for the `delete_log` method:

# Required. The resource name of the log to delete.  Example:
# `"projects/my-project/logs/syslog"`.
log_name = 'projects/{MY-PROJECT}/logs/{MY-LOG}'


# Perform the call
service.delete_log(log_name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/logging_v2beta1'
require 'json'

service = Google::Apis::LoggingV2beta1::LoggingService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholder below to desired parameter value for the `create_project_metric` method:

# The resource name of the project in which to create the metric.
# Example: `"projects/my-project-id"`.
# The new metric must be provided in the request.
parent = 'projects/{MY-PROJECT}'


request_body = Google::Apis::LoggingV2beta1::LogMetric.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.create_project_metric(parent, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/logging_v2beta1'
require 'json'

service = Google::Apis::LoggingV2beta1::LoggingService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholder below to desired parameter value for the `delete_project_metric` method:

# The resource name of the metric to delete.
# Example: `"projects/my-project-id/metrics/my-metric-id"`.
metric_name = 'projects/{MY-PROJECT}/metrics/{MY-METRIC}'


# Perform the call
service.delete_project_metric(metric_name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/logging_v2beta1'
require 'json'

service = Google::Apis::LoggingV2beta1::LoggingService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholder below to desired parameter value for the `get_project_metric` method:

# The resource name of the desired metric.
# Example: `"projects/my-project-id/metrics/my-metric-id"`.
metric_name = 'projects/{MY-PROJECT}/metrics/{MY-METRIC}'


# Perform the call
response = service.get_project_metric(metric_name)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/logging_v2beta1'
require 'json'

service = Google::Apis::LoggingV2beta1::LoggingService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholder below to desired parameter value for the `list_project_metrics` method:

# Required. The resource name containing the metrics.
# Example: `"projects/my-project-id"`.
parent = 'projects/{MY-PROJECT}'


# Perform the call
metrics = service.fetch_all(items: :metrics) do |token|
  service.list_project_metrics(parent, page_token: token)
end

metrics.each do |log_metric|
  # TODO: Change code below to process each `log_metric` resource:
  puts JSON.pretty_generate(log_metric)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/logging_v2beta1'
require 'json'

service = Google::Apis::LoggingV2beta1::LoggingService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholder below to desired parameter value for the `update_project_metric` method:

# The resource name of the metric to update.
# Example: `"projects/my-project-id/metrics/my-metric-id"`.
# The updated metric must be provided in the request and have the
# same identifier that is specified in `metricName`.
# If the metric does not exist, it is created.
metric_name = 'projects/{MY-PROJECT}/metrics/{MY-METRIC}'


request_body = Google::Apis::LoggingV2beta1::LogMetric.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.update_project_metric(metric_name, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/logging_v2beta1'
require 'json'

service = Google::Apis::LoggingV2beta1::LoggingService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholder below to desired parameter value for the `create_project_sink` method:

# Required. The resource in which to create the sink.
# Example: `"projects/my-project-id"`.
# The new sink must be provided in the request.
parent = 'projects/{MY-PROJECT}'


request_body = Google::Apis::LoggingV2beta1::LogSink.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.create_project_sink(parent, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/logging_v2beta1'
require 'json'

service = Google::Apis::LoggingV2beta1::LoggingService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholder below to desired parameter value for the `delete_project_sink` method:

# Required. The resource name of the sink to delete, including the parent
# resource and the sink identifier.  Example:
# `"projects/my-project-id/sinks/my-sink-id"`.  It is an error if the sink
# does not exist.
sink_name = 'projects/{MY-PROJECT}/sinks/{MY-SINK}'


# Perform the call
service.delete_project_sink(sink_name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/logging_v2beta1'
require 'json'

service = Google::Apis::LoggingV2beta1::LoggingService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholder below to desired parameter value for the `get_project_sink` method:

# Required. The resource name of the sink to return.
# Example: `"projects/my-project-id/sinks/my-sink-id"`.
sink_name = 'projects/{MY-PROJECT}/sinks/{MY-SINK}'


# Perform the call
response = service.get_project_sink(sink_name)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/logging_v2beta1'
require 'json'

service = Google::Apis::LoggingV2beta1::LoggingService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholder below to desired parameter value for the `list_project_sinks` method:

# Required. The cloud resource containing the sinks.
# Example: `"projects/my-logging-project"`.
parent = 'projects/{MY-PROJECT}'


# Perform the call
sinks = service.fetch_all(items: :sinks) do |token|
  service.list_project_sinks(parent, page_token: token)
end

sinks.each do |log_sink|
  # TODO: Change code below to process each `log_sink` resource:
  puts JSON.pretty_generate(log_sink)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/logging_v2beta1'
require 'json'

service = Google::Apis::LoggingV2beta1::LoggingService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholder below to desired parameter value for the `update_project_sink` method:

# Required. The resource name of the sink to update, including the parent
# resource and the sink identifier.  If the sink does not exist, this method
# creates the sink.  Example: `"projects/my-project-id/sinks/my-sink-id"`.
sink_name = 'projects/{MY-PROJECT}/sinks/{MY-SINK}'


request_body = Google::Apis::LoggingV2beta1::LogSink.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.update_project_sink(sink_name, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
