
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The resource name of the log to delete:
# "projects/[PROJECT_ID]/logs/[LOG_ID]"
# "organizations/[ORGANIZATION_ID]/logs/[LOG_ID]"
# [LOG_ID] must be URL-encoded. For example, "projects/my-project-id/logs/syslog",
# "organizations/1234567890/logs/cloudresourcemanager.googleapis.com%2Factivity". For more
# information about log names, see LogEntry.
log_name = 'billingAccounts/my-billing-account/logs/my-log'  # TODO: Update placeholder value.

service.delete_billing_account_log(log_name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The resource name that owns the logs:
# "projects/[PROJECT_ID]"
# "organizations/[ORGANIZATION_ID]"
parent = 'billingAccounts/my-billing-account'  # TODO: Update placeholder value.

log_names = service.fetch_all(items: :log_names) do |token|
  service.list_billing_account_logs(parent, page_token: token)
end

log_names.each do |item|
  # TODO: Change code below to process each `item` resource:
  puts item.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::LoggingV2beta1::ListLogEntriesRequest.new

entries = service.fetch_all(items: :entries) do |token|
  request_body.page_token = token
  service.list_entry_log_entries(request_body)
end

entries.each do |log_entry|
  # TODO: Change code below to process each `log_entry` resource:
  puts log_entry.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::LoggingV2beta1::WriteLogEntriesRequest.new

response = service.write_entry_log_entries(request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

resource_descriptors = service.fetch_all(items: :resource_descriptors) do |token|
  service.list_monitored_resource_descriptors(page_token: token)
end

resource_descriptors.each do |monitored_resource_descriptor|
  # TODO: Change code below to process each `monitored_resource_descriptor` resource:
  puts monitored_resource_descriptor.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The resource name of the log to delete:
# "projects/[PROJECT_ID]/logs/[LOG_ID]"
# "organizations/[ORGANIZATION_ID]/logs/[LOG_ID]"
# [LOG_ID] must be URL-encoded. For example, "projects/my-project-id/logs/syslog",
# "organizations/1234567890/logs/cloudresourcemanager.googleapis.com%2Factivity". For more
# information about log names, see LogEntry.
log_name = 'organizations/my-organization/logs/my-log'  # TODO: Update placeholder value.

service.delete_organization_log(log_name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The resource name that owns the logs:
# "projects/[PROJECT_ID]"
# "organizations/[ORGANIZATION_ID]"
parent = 'organizations/my-organization'  # TODO: Update placeholder value.

log_names = service.fetch_all(items: :log_names) do |token|
  service.list_organization_logs(parent, page_token: token)
end

log_names.each do |item|
  # TODO: Change code below to process each `item` resource:
  puts item.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The resource name of the log to delete:
# "projects/[PROJECT_ID]/logs/[LOG_ID]"
# "organizations/[ORGANIZATION_ID]/logs/[LOG_ID]"
# [LOG_ID] must be URL-encoded. For example, "projects/my-project-id/logs/syslog",
# "organizations/1234567890/logs/cloudresourcemanager.googleapis.com%2Factivity". For more
# information about log names, see LogEntry.
log_name = 'projects/my-project/logs/my-log'  # TODO: Update placeholder value.

service.delete_log(log_name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The resource name that owns the logs:
# "projects/[PROJECT_ID]"
# "organizations/[ORGANIZATION_ID]"
parent = 'projects/my-project'  # TODO: Update placeholder value.

log_names = service.fetch_all(items: :log_names) do |token|
  service.list_logs(parent, page_token: token)
end

log_names.each do |item|
  # TODO: Change code below to process each `item` resource:
  puts item.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The resource name of the project in which to create the metric:
# "projects/[PROJECT_ID]"
# The new metric must be provided in the request.
parent = 'projects/my-project'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::LoggingV2beta1::LogMetric.new

response = service.create_project_metric(parent, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The resource name of the metric to delete:
# "projects/[PROJECT_ID]/metrics/[METRIC_ID]"
metric_name = 'projects/my-project/metrics/my-metric'  # TODO: Update placeholder value.

service.delete_project_metric(metric_name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The resource name of the desired metric:
# "projects/[PROJECT_ID]/metrics/[METRIC_ID]"
metric_name = 'projects/my-project/metrics/my-metric'  # TODO: Update placeholder value.

response = service.get_project_metric(metric_name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The name of the project containing the metrics:
# "projects/[PROJECT_ID]"
parent = 'projects/my-project'  # TODO: Update placeholder value.

metrics = service.fetch_all(items: :metrics) do |token|
  service.list_project_metrics(parent, page_token: token)
end

metrics.each do |log_metric|
  # TODO: Change code below to process each `log_metric` resource:
  puts log_metric.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The resource name of the metric to update:
# "projects/[PROJECT_ID]/metrics/[METRIC_ID]"
# The updated metric must be provided in the request and it's name field must be the same as
# [METRIC_ID] If the metric does not exist in [PROJECT_ID], then a new metric is created.
metric_name = 'projects/my-project/metrics/my-metric'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::LoggingV2beta1::LogMetric.new

response = service.update_project_metric(metric_name, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The resource in which to create the sink:
# "projects/[PROJECT_ID]"
# "organizations/[ORGANIZATION_ID]"
# Examples: "projects/my-logging-project", "organizations/123456789".
parent = 'projects/my-project'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::LoggingV2beta1::LogSink.new

response = service.create_project_sink(parent, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The full resource name of the sink to delete, including the parent resource and the sink
# identifier:
# "projects/[PROJECT_ID]/sinks/[SINK_ID]"
# "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
# It is an error if the sink does not exist. Example: "projects/my-project-id/sinks/my-sink-id". It
# is an error if the sink does not exist.
sink_name = 'projects/my-project/sinks/my-sink'  # TODO: Update placeholder value.

service.delete_project_sink(sink_name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The parent resource name of the sink:
# "projects/[PROJECT_ID]/sinks/[SINK_ID]"
# "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
# Example: "projects/my-project-id/sinks/my-sink-id".
sink_name = 'projects/my-project/sinks/my-sink'  # TODO: Update placeholder value.

response = service.get_project_sink(sink_name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The parent resource whose sinks are to be listed. Examples:
# "projects/my-logging-project", "organizations/123456789".
parent = 'projects/my-project'  # TODO: Update placeholder value.

sinks = service.fetch_all(items: :sinks) do |token|
  service.list_project_sinks(parent, page_token: token)
end

sinks.each do |log_sink|
  # TODO: Change code below to process each `log_sink` resource:
  puts log_sink.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Stackdriver Logging API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/logging
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/logging_v2beta1'

service = Google::Apis::LoggingV2beta1::LoggingService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The full resource name of the sink to update, including the parent resource and the sink
# identifier:
# "projects/[PROJECT_ID]/sinks/[SINK_ID]"
# "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
# Example: "projects/my-project-id/sinks/my-sink-id".
sink_name = 'projects/my-project/sinks/my-sink'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::LoggingV2beta1::LogSink.new

response = service.update_project_sink(sink_name, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
