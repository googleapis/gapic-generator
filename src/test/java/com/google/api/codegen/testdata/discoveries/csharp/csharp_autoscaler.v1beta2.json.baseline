
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Compute Engine Autoscaler API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/autoscaler
// 2. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Autoscaler.v1beta2;
using Google.Apis.Services;
using System.Threading.Tasks;

using Data = Google.Apis.Autoscaler.v1beta2.Data;

namespace AutoscalerSample
{
    public class Program
    {
        public static void Main(string[] args)
        {
            UserCredential credential = GetCredential();

            AutoscalerService autoscalerService = new AutoscalerService(new BaseClientService.Initializer
            {
                HttpClientInitializer = credential,
                ApplicationName = "Google Cloud Platform Sample",
            });

            // TODO: Change placeholders below to values for parameters to the Delete() method:

            // Project ID of Autoscaler resource.
            string project = "{MY-PROJECT}";

            // Zone name of Autoscaler resource.
            string zone = "{MY-ZONE}";

            // Name of the Autoscaler resource.
            string autoscaler = "{MY-AUTOSCALER}";

            AutoscalersResource.DeleteRequest request = autoscalerService.Autoscalers.Delete(project, zone, autoscaler);
            Data.Operation response = request.Execute();

            // To execute asynchronously in an async method, use
            // Data.Operation response = await request.ExecuteAsync();
        }

        public static UserCredential GetCredential() {
            // TODO: Implement this function to get authentication credentials.
            // See https://foo.com/bar
            // Authorize using one of the following scopes in order to use this method:
            //   https://www.googleapis.com/auth/compute
            return null;
        }
    }
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Compute Engine Autoscaler API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/autoscaler
// 2. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Autoscaler.v1beta2;
using Google.Apis.Services;
using System.Threading.Tasks;

using Data = Google.Apis.Autoscaler.v1beta2.Data;

namespace AutoscalerSample
{
    public class Program
    {
        public static void Main(string[] args)
        {
            UserCredential credential = GetCredential();

            AutoscalerService autoscalerService = new AutoscalerService(new BaseClientService.Initializer
            {
                HttpClientInitializer = credential,
                ApplicationName = "Google Cloud Platform Sample",
            });

            // TODO: Change placeholders below to values for parameters to the Get() method:

            // Project ID of Autoscaler resource.
            string project = "{MY-PROJECT}";

            // Zone name of Autoscaler resource.
            string zone = "{MY-ZONE}";

            // Name of the Autoscaler resource.
            string autoscaler = "{MY-AUTOSCALER}";

            AutoscalersResource.GetRequest request = autoscalerService.Autoscalers.Get(project, zone, autoscaler);
            Data.Autoscaler response = request.Execute();

            // To execute asynchronously in an async method, use
            // Data.Autoscaler response = await request.ExecuteAsync();
        }

        public static UserCredential GetCredential() {
            // TODO: Implement this function to get authentication credentials.
            // See https://foo.com/bar
            // Authorize using one of the following scopes in order to use this method:
            //   https://www.googleapis.com/auth/compute
            //   https://www.googleapis.com/auth/compute.readonly
            return null;
        }
    }
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Compute Engine Autoscaler API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/autoscaler
// 2. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Autoscaler.v1beta2;
using Google.Apis.Services;
using System.Threading.Tasks;

using Data = Google.Apis.Autoscaler.v1beta2.Data;

namespace AutoscalerSample
{
    public class Program
    {
        public static void Main(string[] args)
        {
            UserCredential credential = GetCredential();

            AutoscalerService autoscalerService = new AutoscalerService(new BaseClientService.Initializer
            {
                HttpClientInitializer = credential,
                ApplicationName = "Google Cloud Platform Sample",
            });

            // TODO: Change placeholders below to values for parameters to the Insert() method:

            // Project ID of Autoscaler resource.
            string project = "{MY-PROJECT}";

            // Zone name of Autoscaler resource.
            string zone = "{MY-ZONE}";

            // TODO: Add code to assign values to properties of 'content'.
            Data.Autoscaler content = new Data.Autoscaler();

            AutoscalersResource.InsertRequest request = autoscalerService.Autoscalers.Insert(content, project, zone);
            Data.Operation response = request.Execute();

            // To execute asynchronously in an async method, use
            // Data.Operation response = await request.ExecuteAsync();
        }

        public static UserCredential GetCredential() {
            // TODO: Implement this function to get authentication credentials.
            // See https://foo.com/bar
            // Authorize using one of the following scopes in order to use this method:
            //   https://www.googleapis.com/auth/compute
            return null;
        }
    }
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Compute Engine Autoscaler API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/autoscaler
// 2. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Autoscaler.v1beta2;
using Google.Apis.Services;
using System.Threading.Tasks;

using Data = Google.Apis.Autoscaler.v1beta2.Data;

namespace AutoscalerSample
{
    public class Program
    {
        public static void Main(string[] args)
        {
            UserCredential credential = GetCredential();

            AutoscalerService autoscalerService = new AutoscalerService(new BaseClientService.Initializer
            {
                HttpClientInitializer = credential,
                ApplicationName = "Google Cloud Platform Sample",
            });

            // TODO: Change placeholders below to values for parameters to the List() method:

            // Project ID of Autoscaler resource.
            string project = "{MY-PROJECT}";

            // Zone name of Autoscaler resource.
            string zone = "{MY-ZONE}";

            AutoscalersResource.ListRequest request = autoscalerService.Autoscalers.List(project, zone);
            Data.AutoscalerListResponse response;
            do
            {
                response = request.Execute();
                if (response.Items == null)
                {
                    continue;
                }
                foreach (Data.Autoscaler item in response.Items)
                {
                    // TODO: Add code here to process each item.
                }
                request.PageToken = response.NextPageToken;
            } while (response.NextPageToken != null);

            // To execute asynchronously in an async method, use
            // Data.AutoscalerListResponse response = await request.ExecuteAsync();
        }

        public static UserCredential GetCredential() {
            // TODO: Implement this function to get authentication credentials.
            // See https://foo.com/bar
            // Authorize using one of the following scopes in order to use this method:
            //   https://www.googleapis.com/auth/compute
            //   https://www.googleapis.com/auth/compute.readonly
            return null;
        }
    }
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Compute Engine Autoscaler API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/autoscaler
// 2. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Autoscaler.v1beta2;
using Google.Apis.Services;
using System.Threading.Tasks;

using Data = Google.Apis.Autoscaler.v1beta2.Data;

namespace AutoscalerSample
{
    public class Program
    {
        public static void Main(string[] args)
        {
            UserCredential credential = GetCredential();

            AutoscalerService autoscalerService = new AutoscalerService(new BaseClientService.Initializer
            {
                HttpClientInitializer = credential,
                ApplicationName = "Google Cloud Platform Sample",
            });

            // TODO: Change placeholders below to values for parameters to the Patch() method:

            // Project ID of Autoscaler resource.
            string project = "{MY-PROJECT}";

            // Zone name of Autoscaler resource.
            string zone = "{MY-ZONE}";

            // Name of the Autoscaler resource.
            string autoscaler = "{MY-AUTOSCALER}";

            // TODO: Add code to assign values to properties of 'content'.
            Data.Autoscaler content = new Data.Autoscaler();

            AutoscalersResource.PatchRequest request = autoscalerService.Autoscalers.Patch(content, project, zone, autoscaler);
            Data.Operation response = request.Execute();

            // To execute asynchronously in an async method, use
            // Data.Operation response = await request.ExecuteAsync();
        }

        public static UserCredential GetCredential() {
            // TODO: Implement this function to get authentication credentials.
            // See https://foo.com/bar
            // Authorize using one of the following scopes in order to use this method:
            //   https://www.googleapis.com/auth/compute
            return null;
        }
    }
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Compute Engine Autoscaler API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/autoscaler
// 2. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Autoscaler.v1beta2;
using Google.Apis.Services;
using System.Threading.Tasks;

using Data = Google.Apis.Autoscaler.v1beta2.Data;

namespace AutoscalerSample
{
    public class Program
    {
        public static void Main(string[] args)
        {
            UserCredential credential = GetCredential();

            AutoscalerService autoscalerService = new AutoscalerService(new BaseClientService.Initializer
            {
                HttpClientInitializer = credential,
                ApplicationName = "Google Cloud Platform Sample",
            });

            // TODO: Change placeholders below to values for parameters to the Update() method:

            // Project ID of Autoscaler resource.
            string project = "{MY-PROJECT}";

            // Zone name of Autoscaler resource.
            string zone = "{MY-ZONE}";

            // Name of the Autoscaler resource.
            string autoscaler = "{MY-AUTOSCALER}";

            // TODO: Add code to assign values to properties of 'content'.
            Data.Autoscaler content = new Data.Autoscaler();

            AutoscalersResource.UpdateRequest request = autoscalerService.Autoscalers.Update(content, project, zone, autoscaler);
            Data.Operation response = request.Execute();

            // To execute asynchronously in an async method, use
            // Data.Operation response = await request.ExecuteAsync();
        }

        public static UserCredential GetCredential() {
            // TODO: Implement this function to get authentication credentials.
            // See https://foo.com/bar
            // Authorize using one of the following scopes in order to use this method:
            //   https://www.googleapis.com/auth/compute
            return null;
        }
    }
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Compute Engine Autoscaler API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/autoscaler
// 2. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Autoscaler.v1beta2;
using Google.Apis.Services;
using System.Threading.Tasks;

namespace AutoscalerSample
{
    public class Program
    {
        public static void Main(string[] args)
        {
            UserCredential credential = GetCredential();

            AutoscalerService autoscalerService = new AutoscalerService(new BaseClientService.Initializer
            {
                HttpClientInitializer = credential,
                ApplicationName = "Google Cloud Platform Sample",
            });

            // TODO: Change placeholders below to values for parameters to the Delete() method:

            string project = "{MY-PROJECT}";

            string zone = "{MY-ZONE}";

            string operation = "{MY-OPERATION}";

            ZoneOperationsResource.DeleteRequest request = autoscalerService.ZoneOperations.Delete(project, zone, operation);
            request.Execute();

            // To execute asynchronously in an async method, use
            // await request.ExecuteAsync();
        }

        public static UserCredential GetCredential() {
            // TODO: Implement this function to get authentication credentials.
            // See https://foo.com/bar
            // Authorize using one of the following scopes in order to use this method:
            //   https://www.googleapis.com/auth/compute
            return null;
        }
    }
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Compute Engine Autoscaler API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/autoscaler
// 2. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Autoscaler.v1beta2;
using Google.Apis.Services;
using System.Threading.Tasks;

using Data = Google.Apis.Autoscaler.v1beta2.Data;

namespace AutoscalerSample
{
    public class Program
    {
        public static void Main(string[] args)
        {
            UserCredential credential = GetCredential();

            AutoscalerService autoscalerService = new AutoscalerService(new BaseClientService.Initializer
            {
                HttpClientInitializer = credential,
                ApplicationName = "Google Cloud Platform Sample",
            });

            // TODO: Change placeholders below to values for parameters to the Get() method:

            string project = "{MY-PROJECT}";

            string zone = "{MY-ZONE}";

            string operation = "{MY-OPERATION}";

            ZoneOperationsResource.GetRequest request = autoscalerService.ZoneOperations.Get(project, zone, operation);
            Data.Operation response = request.Execute();

            // To execute asynchronously in an async method, use
            // Data.Operation response = await request.ExecuteAsync();
        }

        public static UserCredential GetCredential() {
            // TODO: Implement this function to get authentication credentials.
            // See https://foo.com/bar
            // Authorize using one of the following scopes in order to use this method:
            //   https://www.googleapis.com/auth/compute
            //   https://www.googleapis.com/auth/compute.readonly
            return null;
        }
    }
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Compute Engine Autoscaler API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/autoscaler
// 2. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Autoscaler.v1beta2;
using Google.Apis.Services;
using System.Threading.Tasks;

using Data = Google.Apis.Autoscaler.v1beta2.Data;

namespace AutoscalerSample
{
    public class Program
    {
        public static void Main(string[] args)
        {
            UserCredential credential = GetCredential();

            AutoscalerService autoscalerService = new AutoscalerService(new BaseClientService.Initializer
            {
                HttpClientInitializer = credential,
                ApplicationName = "Google Cloud Platform Sample",
            });

            // TODO: Change placeholders below to values for parameters to the List() method:

            string project = "{MY-PROJECT}";

            string zone = "{MY-ZONE}";

            ZoneOperationsResource.ListRequest request = autoscalerService.ZoneOperations.List(project, zone);
            Data.OperationList response;
            do
            {
                response = request.Execute();
                if (response.Items == null)
                {
                    continue;
                }
                foreach (Data.Operation item in response.Items)
                {
                    // TODO: Add code here to process each item.
                }
                request.PageToken = response.NextPageToken;
            } while (response.NextPageToken != null);

            // To execute asynchronously in an async method, use
            // Data.OperationList response = await request.ExecuteAsync();
        }

        public static UserCredential GetCredential() {
            // TODO: Implement this function to get authentication credentials.
            // See https://foo.com/bar
            // Authorize using one of the following scopes in order to use this method:
            //   https://www.googleapis.com/auth/compute
            //   https://www.googleapis.com/auth/compute.readonly
            return null;
        }
    }
}
// BEFORE RUNNING:
// ---------------
// 1. If not already done, enable the Google Compute Engine Autoscaler API
//    and check the quota for your project at
//    https://console.developers.google.com/apis/api/autoscaler
// 2. Install the C# client library by adding a dependency on the relevant NuGet
//    package. Libraries published by Google are owned by google-apis-packages:
//    https://www.nuget.org/profiles/google-apis-packages

using Google.Apis.Auth.OAuth2;
using Google.Apis.Autoscaler.v1beta2;
using Google.Apis.Services;
using System.Threading.Tasks;

using Data = Google.Apis.Autoscaler.v1beta2.Data;

namespace AutoscalerSample
{
    public class Program
    {
        public static void Main(string[] args)
        {
            UserCredential credential = GetCredential();

            AutoscalerService autoscalerService = new AutoscalerService(new BaseClientService.Initializer
            {
                HttpClientInitializer = credential,
                ApplicationName = "Google Cloud Platform Sample",
            });

            // TODO: Change placeholders below to values for parameters to the List() method:

            string project = "{MY-PROJECT}";

            ZonesResource.ListRequest request = autoscalerService.Zones.List(project);
            Data.ZoneList response;
            do
            {
                response = request.Execute();
                if (response.Items == null)
                {
                    continue;
                }
                foreach (Data.Zone item in response.Items)
                {
                    // TODO: Add code here to process each item.
                }
                request.PageToken = response.NextPageToken;
            } while (response.NextPageToken != null);

            // To execute asynchronously in an async method, use
            // Data.ZoneList response = await request.ExecuteAsync();
        }

        public static UserCredential GetCredential() {
            // TODO: Implement this function to get authentication credentials.
            // See https://foo.com/bar
            // Authorize using one of the following scopes in order to use this method:
            //   https://www.googleapis.com/auth/compute
            //   https://www.googleapis.com/auth/compute.readonly
            return null;
        }
    }
}
