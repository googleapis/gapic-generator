
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the Cloud Platform project that the job belongs to.
project_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DataflowV1b3::Job.new

response = service.create_project_job(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project id.
project_id = ''  # TODO: Update placeholder value.

# The job id.
job_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DataflowV1b3::GetDebugConfigRequest.new

response = service.get_project_job_debug_config(project_id, job_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project id.
project_id = ''  # TODO: Update placeholder value.

# The job id.
job_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DataflowV1b3::SendDebugCaptureRequest.new

response = service.send_project_job_debug_capture(project_id, job_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the Cloud Platform project that the job belongs to.
project_id = ''  # TODO: Update placeholder value.

# The job ID.
job_id = ''  # TODO: Update placeholder value.

response = service.get_project_job(project_id, job_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# A project id.
project_id = ''  # TODO: Update placeholder value.

# The job to get messages for.
job_id = ''  # TODO: Update placeholder value.

response = service.get_project_job_metrics(project_id, job_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project which owns the jobs.
project_id = ''  # TODO: Update placeholder value.

jobs = service.fetch_all(items: :jobs) do |token|
  service.list_project_jobs(project_id, page_token: token)
end

jobs.each do |job|
  # TODO: Change code below to process each `job` resource:
  puts JSON.pretty_generate(job)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# A project id.
project_id = ''  # TODO: Update placeholder value.

# The job to get messages about.
job_id = ''  # TODO: Update placeholder value.

job_messages = service.fetch_all(items: :job_messages) do |token|
  service.list_project_job_messages(project_id, job_id, page_token: token)
end

job_messages.each do |job_message|
  # TODO: Change code below to process each `job_message` resource:
  puts JSON.pretty_generate(job_message)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the Cloud Platform project that the job belongs to.
project_id = ''  # TODO: Update placeholder value.

# The job ID.
job_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DataflowV1b3::Job.new

response = service.update_project_job(project_id, job_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Identifies the project this worker belongs to.
project_id = ''  # TODO: Update placeholder value.

# Identifies the workflow job this worker belongs to.
job_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DataflowV1b3::LeaseWorkItemRequest.new

response = service.lease_project_work_item(project_id, job_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project which owns the WorkItem's job.
project_id = ''  # TODO: Update placeholder value.

# The job which the WorkItem is part of.
job_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DataflowV1b3::ReportWorkItemStatusRequest.new

response = service.report_project_job_work_item_status(project_id, job_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the Cloud Platform project that the job belongs to.
project_id = ''  # TODO: Update placeholder value.

# The location that contains this job.
location = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DataflowV1b3::Job.new

response = service.create_project_location_job(project_id, location, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the Cloud Platform project that the job belongs to.
project_id = ''  # TODO: Update placeholder value.

# The location that contains this job.
location = ''  # TODO: Update placeholder value.

# The job ID.
job_id = ''  # TODO: Update placeholder value.

response = service.get_project_location_job(project_id, location, job_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# A project id.
project_id = ''  # TODO: Update placeholder value.

# The location which contains the job specified by job_id.
location = ''  # TODO: Update placeholder value.

# The job to get messages for.
job_id = ''  # TODO: Update placeholder value.

response = service.get_project_location_job_metrics(project_id, location, job_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project which owns the jobs.
project_id = ''  # TODO: Update placeholder value.

# The location that contains this job.
location = ''  # TODO: Update placeholder value.

jobs = service.fetch_all(items: :jobs) do |token|
  service.list_project_location_jobs(project_id, location, page_token: token)
end

jobs.each do |job|
  # TODO: Change code below to process each `job` resource:
  puts JSON.pretty_generate(job)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# A project id.
project_id = ''  # TODO: Update placeholder value.

# The location which contains the job specified by job_id.
location = ''  # TODO: Update placeholder value.

# The job to get messages about.
job_id = ''  # TODO: Update placeholder value.

job_messages = service.fetch_all(items: :job_messages) do |token|
  service.list_project_location_job_messages(project_id, location, job_id, page_token: token)
end

job_messages.each do |job_message|
  # TODO: Change code below to process each `job_message` resource:
  puts JSON.pretty_generate(job_message)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The ID of the Cloud Platform project that the job belongs to.
project_id = ''  # TODO: Update placeholder value.

# The location that contains this job.
location = ''  # TODO: Update placeholder value.

# The job ID.
job_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::DataflowV1b3::Job.new

response = service.update_project_location_job(project_id, location, job_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Identifies the project this worker belongs to.
project_id = ''  # TODO: Update placeholder value.

# The location which contains the WorkItem's job.
location = ''  # TODO: Update placeholder value.

# Identifies the workflow job this worker belongs to.
job_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DataflowV1b3::LeaseWorkItemRequest.new

response = service.lease_project_location_work_item(project_id, location, job_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project which owns the WorkItem's job.
project_id = ''  # TODO: Update placeholder value.

# The location which contains the WorkItem's job.
location = ''  # TODO: Update placeholder value.

# The job which the WorkItem is part of.
job_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DataflowV1b3::ReportWorkItemStatusRequest.new

response = service.report_project_location_job_work_item_status(project_id, location, job_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Required. The ID of the Cloud Platform project that the job belongs to.
project_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DataflowV1b3::CreateJobFromTemplateRequest.new

response = service.create_job_from_template(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The project to send the WorkerMessages to.
project_id = ''  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::DataflowV1b3::SendWorkerMessagesRequest.new

response = service.worker_project_messages(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
