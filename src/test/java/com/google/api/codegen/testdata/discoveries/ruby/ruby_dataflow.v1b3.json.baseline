
require 'googleauth'
require 'google/apis/dataflow_v1b3'

Dataflow = Google::Apis::DataflowV1b3
service = Dataflow::DataflowService.new
service.authorization = Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])
// TODO: Change placeholders below to values for parameters to the 'create' method:
# The project which owns the job.
projectId = ''
resource = Dataflow::kind: TYPE_MESSAGE
cardinality: CARDINALITY_OPTIONAL
name: "request$"
type_url: "Job"
.new()


pongad create

response = create(projectId, resource)
require 'googleauth'
require 'google/apis/dataflow_v1b3'

Dataflow = Google::Apis::DataflowV1b3
service = Dataflow::DataflowService.new
service.authorization = Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])
// TODO: Change placeholders below to values for parameters to the 'get' method:
# The project which owns the job.
projectId = ''

# Identifies a single job.
jobId = ''


pongad get

response = get(projectId, jobId)
require 'googleauth'
require 'google/apis/dataflow_v1b3'

Dataflow = Google::Apis::DataflowV1b3
service = Dataflow::DataflowService.new
service.authorization = Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])
// TODO: Change placeholders below to values for parameters to the 'getMetrics' method:
# A project id.
projectId = ''

# The job to get messages for.
jobId = ''


pongad getMetrics

response = getMetrics(projectId, jobId)
require 'googleauth'
require 'google/apis/dataflow_v1b3'

Dataflow = Google::Apis::DataflowV1b3
service = Dataflow::DataflowService.new
service.authorization = Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])
// TODO: Change placeholders below to values for parameters to the 'list' method:
# The project which owns the jobs.
projectId = ''


pongad list

response = list(projectId)
response
require 'googleauth'
require 'google/apis/dataflow_v1b3'

Dataflow = Google::Apis::DataflowV1b3
service = Dataflow::DataflowService.new
service.authorization = Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])
// TODO: Change placeholders below to values for parameters to the 'list' method:
# A project id.
projectId = ''

# The job to get messages about.
jobId = ''


pongad list

response = list(projectId, jobId)
response
require 'googleauth'
require 'google/apis/dataflow_v1b3'

Dataflow = Google::Apis::DataflowV1b3
service = Dataflow::DataflowService.new
service.authorization = Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])
// TODO: Change placeholders below to values for parameters to the 'update' method:
# The project which owns the job.
projectId = ''

# Identifies a single job.
jobId = ''
resource = Dataflow::kind: TYPE_MESSAGE
cardinality: CARDINALITY_OPTIONAL
name: "request$"
type_url: "Job"
.new()


pongad update

response = update(projectId, jobId, resource)
require 'googleauth'
require 'google/apis/dataflow_v1b3'

Dataflow = Google::Apis::DataflowV1b3
service = Dataflow::DataflowService.new
service.authorization = Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])
// TODO: Change placeholders below to values for parameters to the 'lease' method:
# Identifies the project this worker belongs to.
projectId = ''

# Identifies the workflow job this worker belongs to.
jobId = ''
resource = Dataflow::kind: TYPE_MESSAGE
cardinality: CARDINALITY_OPTIONAL
name: "request$"
type_url: "LeaseWorkItemRequest"
.new()


pongad lease

response = lease(projectId, jobId, resource)
require 'googleauth'
require 'google/apis/dataflow_v1b3'

Dataflow = Google::Apis::DataflowV1b3
service = Dataflow::DataflowService.new
service.authorization = Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])
// TODO: Change placeholders below to values for parameters to the 'reportStatus' method:
# The project which owns the WorkItem's job.
projectId = ''

# The job which the WorkItem is part of.
jobId = ''
resource = Dataflow::kind: TYPE_MESSAGE
cardinality: CARDINALITY_OPTIONAL
name: "request$"
type_url: "ReportWorkItemStatusRequest"
.new()


pongad reportStatus

response = reportStatus(projectId, jobId, resource)
require 'googleauth'
require 'google/apis/dataflow_v1b3'

Dataflow = Google::Apis::DataflowV1b3
service = Dataflow::DataflowService.new
service.authorization = Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])
// TODO: Change placeholders below to values for parameters to the 'workerMessages' method:
# The project to send the WorkerMessages to.
projectId = ''
resource = Dataflow::kind: TYPE_MESSAGE
cardinality: CARDINALITY_OPTIONAL
name: "request$"
type_url: "SendWorkerMessagesRequest"
.new()


pongad workerMessages

response = workerMessages(projectId, resource)
