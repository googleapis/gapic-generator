
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `create_project_job` method:

# The project which owns the job.
project_id = '{MY-PROJECT-ID}'


request_body = Google::Apis::DataflowV1b3::Job.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.create_project_job(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `get_project_job_debug_config` method:

# The project id.
project_id = '{MY-PROJECT-ID}'

# The job id.
job_id = '{MY-JOB-ID}'


request_body = Google::Apis::DataflowV1b3::GetDebugConfigRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.get_project_job_debug_config(project_id, job_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `send_project_job_debug_capture` method:

# The project id.
project_id = '{MY-PROJECT-ID}'

# The job id.
job_id = '{MY-JOB-ID}'


request_body = Google::Apis::DataflowV1b3::SendDebugCaptureRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.send_project_job_debug_capture(project_id, job_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `get_project_job` method:

# The project which owns the job.
project_id = '{MY-PROJECT-ID}'

# Identifies a single job.
job_id = '{MY-JOB-ID}'


# Perform the call
response = service.get_project_job(project_id, job_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `get_project_job_metrics` method:

# A project id.
project_id = '{MY-PROJECT-ID}'

# The job to get messages for.
job_id = '{MY-JOB-ID}'


# Perform the call
response = service.get_project_job_metrics(project_id, job_id)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `list_project_jobs` method:

# The project which owns the jobs.
project_id = '{MY-PROJECT-ID}'


# Perform the call
jobs = service.fetch_all(items: :jobs) do |token|
  service.list_project_jobs(project_id, page_token: token)
end

jobs.each do |job|
  # TODO: Change code below to process each `job` resource:
  puts JSON.pretty_generate(job)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `list_project_job_messages` method:

# A project id.
project_id = '{MY-PROJECT-ID}'

# The job to get messages about.
job_id = '{MY-JOB-ID}'


# Perform the call
jobMessages = service.fetch_all(items: :jobMessages) do |token|
  service.list_project_job_messages(project_id, job_id, page_token: token)
end

jobMessages.each do |job_message|
  # TODO: Change code below to process each `job_message` resource:
  puts JSON.pretty_generate(job_message)
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `update_project_job` method:

# The project which owns the job.
project_id = '{MY-PROJECT-ID}'

# Identifies a single job.
job_id = '{MY-JOB-ID}'


request_body = Google::Apis::DataflowV1b3::Job.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.update_project_job(project_id, job_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `lease_work_item` method:

# Identifies the project this worker belongs to.
project_id = '{MY-PROJECT-ID}'

# Identifies the workflow job this worker belongs to.
job_id = '{MY-JOB-ID}'


request_body = Google::Apis::DataflowV1b3::LeaseWorkItemRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.lease_work_item(project_id, job_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `report_project_job_work_item_status` method:

# The project which owns the WorkItem's job.
project_id = '{MY-PROJECT-ID}'

# The job which the WorkItem is part of.
job_id = '{MY-JOB-ID}'


request_body = Google::Apis::DataflowV1b3::ReportWorkItemStatusRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.report_project_job_work_item_status(project_id, job_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `create_job_from_template` method:

# The project which owns the job.
project_id = '{MY-PROJECT-ID}'


request_body = Google::Apis::DataflowV1b3::CreateJobFromTemplateRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.create_job_from_template(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Google Dataflow API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/dataflow
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk/ and run
#    `gcloud beta auth application-default login`
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`
require 'googleauth'
require 'google/apis/dataflow_v1b3'
require 'json'

service = Google::Apis::DataflowV1b3::DataflowService.new

# Use Application Default Credentials for authentication when running locally.
# For more information, see:
# https://developers.google.com/identity/protocols/application-default-credentials
service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])


# TODO: Change placeholders below to desired parameter values for the `worker_project_messages` method:

# The project to send the WorkerMessages to.
project_id = '{MY-PROJECT-ID}'


request_body = Google::Apis::DataflowV1b3::SendWorkerMessagesRequest.new
# TODO: Assign values to desired members of the `request_body` object.


# Perform the call
response = service.worker_project_messages(project_id, request_body)

# TODO: Change code below to process the `response` object:
puts JSON.pretty_generate(response)
