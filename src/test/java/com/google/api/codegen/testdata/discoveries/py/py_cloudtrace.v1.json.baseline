
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Cloud Trace API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/cloudtrace
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('cloudtrace', 'v1', credentials=credentials)

# ID of the Cloud project where the trace data is stored.
project_id = ''  # TODO: Update placeholder value.

traces_body = {
    # TODO: Add desired entries of the request body. Only assigned entries
    # will be changed:
}

request = service.projects().patchTraces(projectId=project_id, body=traces_body)
request.execute()
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Cloud Trace API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/cloudtrace
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('cloudtrace', 'v1', credentials=credentials)

# ID of the Cloud project where the trace data is stored.
project_id = ''  # TODO: Update placeholder value.

# ID of the trace to return.
trace_id = ''  # TODO: Update placeholder value.

request = service.projects().traces().get(projectId=project_id, traceId=trace_id)
response = request.execute()

# TODO: Change code below to process the `response` dict:
pprint(response)
"""
BEFORE RUNNING:
---------------
1. If not already done, enable the Google Cloud Trace API
   and check the quota for your project at
   https://console.developers.google.com/apis/api/cloudtrace
2. This sample uses Application Default Credentials for authentication.
   If not already done, install the gcloud CLI from
   https://cloud.google.com/sdk and run
   `gcloud beta auth application-default login`.
   For more information, see
   https://developers.google.com/identity/protocols/application-default-credentials
3. Install the Python client library for Google APIs by running
   `pip install --upgrade google-api-python-client`
"""
from pprint import pprint

from googleapiclient import discovery
from oauth2client.client import GoogleCredentials

credentials = GoogleCredentials.get_application_default()

service = discovery.build('cloudtrace', 'v1', credentials=credentials)

# ID of the Cloud project where the trace data is stored.
project_id = ''  # TODO: Update placeholder value.

request = service.projects().traces().list(projectId=project_id)
while request is not None:
    response = request.execute()

    for trace in response['traces']:
        # TODO: Change code below to process each `trace` resource:
        pprint(trace)

    request = service.projects().traces().list_next(previous_request=request, previous_response=response)
