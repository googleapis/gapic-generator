@extends "ruby/common.snip"

@snippet generate(doc)
  {@generateClass(doc)}
@end

@private generateClass(doc)
  @let body = documentChildren(doc)
    {@licenseSection(doc.fileHeader)}

    {@module(util.getApiModules(doc.fileHeader.packageName).iterator, body)}
  @end

@end

@private documentMessage(doc)
  @let messageComments = toComments(doc.lines), \
    propertyComments = createPropertyComments(doc.properties)
    @if messageComments
      {@messageComments}
      @if propertyComments
        {@propertyComments}
      @end

    @else
      @if propertyComments
        {@propertyComments}

      @end
    @end
    @if doc.children
      class {@doc.name}
        {@documentChildren(doc)}
      end
    @else
      class {@doc.name}; end
    @end
  @end
@end

@private createPropertyComments(properties)
  @join prop : properties
    @# @@!attribute [rw] {@prop.paramName}
    @#   @@return [{@prop.typeName}]
    @join line : prop.lines
      @#     {@line}
    @end
  @end
@end

# This documentation actually defines constants, that means loading this documentation
# files cause warnings of redefining constants.
# TODO: add/modify special YARD tag of defining constants, instead of actually defining
# constants in Ruby code.
@private documentEnum(doc)
  @if doc.lines
    {@toComments(doc.lines)}

  @end
  module {@doc.name}
    @join value : doc.values on BREAK.add(BREAK)
      @if value.lines
        {@toComments(value.lines)}

      @end
      {@value.name} = {@value.number}
    @end
  end
@end

@private documentChildren(doc)
  @join child : doc.children on BREAK.add(BREAK)
    {@documentElement(child)}
  @end
@end

@private documentElement(doc)
  @switch doc.type
  @case "GrpcMessageDocView"
    {@documentMessage(doc)}
  @case "GrpcEnumDocView"
    {@documentEnum(doc)}
  @end
@end

@private licenseSection(fileHeader)
  {@toComments(fileHeader.copyrightLines)}
  @#
  {@toComments(fileHeader.licenseLines)}
@end

@private toComments(commentLines)
  @join comment : commentLines
    @# {@comment}
  @end
@end
