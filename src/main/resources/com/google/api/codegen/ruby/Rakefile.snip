@extends "ruby/common.snip"

@snippet generate(metadata)
  {@header(metadata.fileHeader)}

  {@unitTestsTask(metadata)}
  @if smokeTestsTask(metadata)

    {@smokeTestsTask(metadata)}
  @else
  @end
@end

@private header(fileHeader)
  {@toComments(fileHeader.copyrightLines)}
  #
  {@toComments(fileHeader.licenseLines)}

  require "bundler/setup"
  require "bundler/gem_tasks"

  require "rubocop/rake_task"
  RuboCop::RakeTask.new
@end

@private unitTestsTask(metadata)
  desc "Run tests."
  task :test do
    $LOAD_PATH.unshift "lib", "test"
    Dir.glob("test/**/*_test.rb").each { |file| require_relative file }
  end

  namespace :test do
    desc "Runs tests with coverage."
    task :coverage do
      require "simplecov"
      SimpleCov.start do
        command_name "{@metadata.identifier}"
        track_files "lib/**/*.rb"
        add_filter "test/"
      end

      Rake::Task["test"].invoke
    end
  end
@end

@private smokeTestsTask(metadata)
  @if metadata.hasSmokeTests
    desc "Runs the smoke tests."
    task :smoke_test do |t, args|
      if ENV["SMOKE_TEST_PROJECT"].nil?
        fail "The SMOKE_TEST_PROJECT environment variable must be set. "@\
          "e.g SMOKE_TEST_PROJECT=test123 rake smoke_test"
      end

      $LOAD_PATH.unshift "lib", "smoke_test"
      Dir.glob("smoke_test/**/*smoke_test.rb").each { |file| require_relative file }
    end

    namespace :smoke_test do
      desc "Runs smoke tests with coverage."
      task :coverage do |t, args|
        require "simplecov"
        SimpleCov.start do
          command_name "{@metadata.identifier}"
          track_files "lib/**/*.rb"
          add_filter "smoke_test/"
        end

        Rake::Task["smoke_test"].invoke
      end
    end
  @else
  @end
@end
