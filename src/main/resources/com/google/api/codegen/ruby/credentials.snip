@extends "ruby/common.snip"

@snippet generate(view)
  {@header(view.fileHeader)}

  {@body(view)}
@end

@private header(fileHeader)
  {@license(fileHeader)}

  {@importList(fileHeader.importSection.externalImports)}
@end

@private body(view)
  {@module(view.fileHeader.modules.iterator, credentialsClass(view.credentialsClass))}
@end

@private credentialsClass(view)
  class Credentials < Google::Gax::Credentials
    # TODO(landrito): move the scope constant into it's own file since this string is being defined
    # in multiple places
    SCOPE = [
      @join scope : view.scopes on ",".add(BREAK)
        "{@scope}"
      @end
    ].freeze
    PATH_ENV_VARS = {@stringList(view.pathEnvVars)}
    JSON_ENV_VARS = {@stringList(view.jsonEnvVars)}
  end
@end

@private stringList(strings)
  %w({@listStrings(strings)})
@end
