@extends "py/common.snip"

@snippet generate(view)
    {@licenseSection(view.fileHeader)}

    {@moduleDocstring()}


    {@enumConstants(view.elementDocs)}
@end

@private moduleDocstring()
    """Wrappers for protocol buffer enum types."""
@end

@private enumComments(enum)
    """
    @if enum.lines
        @join line : enum.lines
            {@line}
        @end
        {@BREAK}
    @end
    Attributes:
      @join value : enum.values
          @if value.lines
              {@value.name} (int): {@value.firstLine}
              @join line : value.remainingLines
                  {@line}
              @end
          @else
              {@value.name} (int)
          @end
      @end
    """
@end

@private enumSection(enum)
    class {@enum.name}(object):
        {@enumComments(enum)}
        @join value : enum.values
            {@value.name} = {@value.number}
        @end

@end

@private enumConstants(docs)
    @let enums = enumDecls(docs),\
        messages = containerSections(docs)
        @if enums
            {@enums}
        @end
        @if messages
            @if enums



            @end
            {@messages}
        @end
    @end
@end

@private enumDecls(docs)
    @join enum : docs if enum.type == "GrpcEnumDocView" on BREAK.add(BREAK)
        {@enumSection(enum)}
    @end
@end

@private containerSections(docs)
    @join message : docs if message.type == "GrpcMessageDocView" on BREAK.add(BREAK)
        class {@message.name}(object):
            {@enumConstants(message.elementDocs)}
    @end
@end
