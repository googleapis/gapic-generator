@extends "py/common.snip"

@snippet generate(view)
    {@header(view.fileHeader)}

    {@body(view)}
@end

@private header(fileHeader)
    {@licenseSection(fileHeader)}

    {@renderImportSection(fileHeader.importSection)}
@end

@private body(view)
    {@unit_tests()}


    @if view.hasSmokeTests
        {@system_tests()}


    @end
    {@lint_setup_py()}
@end

@private unit_tests()
    @@nox.session
    @@nox.parametrize('python_version', ['2.7', '3.4', '3.5', '3.6'])
    def unit_tests(session, python_version):
        """Run the unit test suite."""

        # Run unit tests against all supported versions of Python.
        session.interpreter = 'python{}'.format(python_version)

        # Set the virtualenv dirname.
        session.virtualenv_dirname = 'unit-' + python_version

        # Install all test dependencies, then install this package in-place.
        session.install('pytest')
        session.install('-e', '.')

        # Run py.test against the unit tests.
        session.run('py.test', '--quiet', os.path.join('tests', 'unit'))
@end

@private system_tests()
    @@nox.session
    @@nox.parametrize('python_version', ['2.7', '3.6'])
    def system_tests(session, python_version):
        """Run the system test suite."""

        # Sanity check: Only run system tests if the environment variable is set.
        if not os.environ.get('GOOGLE_APPLICATION_CREDENTIALS', ''):
            session.skip('Credentials must be set via environment variable.')

        # Run unit tests against all supported versions of Python.
        session.interpreter = 'python{}'.format(python_version)

        # Set the virtualenv dirname.
        session.virtualenv_dirname = 'sys-' + python_version

        # Install all test dependencies, then install this package in-place.
        session.install('pytest')
        session.install('-e', '.')

        # Run py.test against the unit tests.
        session.run(
            'py.test',
            '--quiet',
            os.path.join('tests', 'system'),
            *session.posargs)
@end

@private lint_setup_py()
    @@nox.session
    def lint_setup_py(session):
        """Verify that setup.py is valid (including RST check)."""
        session.interpreter = 'python3.6'
        session.install('docutils', 'pygments')
        session.run(
            'python', 'setup.py', 'check', '--restructuredtext', '--strict')
@end
