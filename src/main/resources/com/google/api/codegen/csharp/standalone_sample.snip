@extends "common.snip"
@extends "csharp/commandline.snip"
@extends "csharp/common.snip"
@extends "csharp/lro_sample.snip"
@extends "csharp/streaming_sample.snip"
@extends "csharp/paged_sample.snip"
@extends "csharp/unary_sample.snip"
@extends "metadatagen/samplegen.snip"

# StaticLangFileView
@snippet generate(sampleFile)
    @let sampleClass = sampleFile.classView
        @let apiMethod = sampleClass.libraryMethod, sample = sampleClass.sample
            {@initialComments(sampleFile.fileHeader)}

            // This is a generated sample ("{@sample.callingForm}", "{@sample.id}")

            // sample-metadata
            //   title: {@sample.title}
            @if sample.descriptionLine
                {@descriptionLines("//", sample.descriptionLine, sample.additionalDescriptionLines)}
            @end
            //   usage: dotnet run {@commandlineArgumentList(sample.sampleInitCode.argDefaultParams)}

            using CommandLine;

            namespace {@sampleFile.fileHeader.packageName}.Samples
            {
                // [START {@sample.regionTag}]
                @if sample.sampleImports.appImports
                    {@imports(sample.sampleImports)}

                @end
                public class {@sampleClass.name}
                {
                    @if not(sample.sampleFunctionDoc.isEmpty)
                        {@processDoc(sample.sampleFunctionDoc)}
                    @end
                    @switch sample.callingForm
                    #
                    # Unary Methods
                    #
                    @case "Request"
                        {@unaryMethod(apiMethod, sample)}
                    @case"Flattened"
                        {@unaryMethod(apiMethod, sample)}
                    @case "RequestAsync"
                        {@unaryAsyncMethod(apiMethod, sample)}
                    @case "FlattenedAsync"
                        {@unaryAsyncMethod(apiMethod, sample)}
                    #
                    # Pagination
                    #
                    @case "RequestPaged"
                        {@pagedMethod(apiMethod, sample)}
                    @case "FlattenedPaged"
                        {@pagedMethod(apiMethod, sample)}
                    @case "RequestPagedAll"
                        {@pagedAllMethod(apiMethod, sample)}
                    @case "FlattenedPagedAll"
                        {@pagedAllMethod(apiMethod, sample)}
                    @case "RequestPagedPageSize"
                        {@pagedPageSizeMethod(apiMethod, sample)}
                    @case "FlattenedPagedPageSize"
                        {@pagedPageSizeMethod(apiMethod, sample)}
                    @case "RequestAsyncPaged"
                        {@pagedAsyncMethod(apiMethod, sample)}
                    @case "FlattenedAsyncPaged"
                        {@pagedAsyncMethod(apiMethod, sample)}
                    @case "RequestAsyncPagedAll"
                        {@pagedAllAsyncMethod(apiMethod, sample)}
                    @case "FlattenedAsyncPagedAll"
                        {@pagedAllAsyncMethod(apiMethod, sample)}
                    @case "RequestAsyncPagedPageSize"
                        {@pagedPageSizeAsyncMethod(apiMethod, sample)}
                    @case "FlattenedAsyncPagedPageSize"
                        {@pagedPageSizeAsyncMethod(apiMethod, sample)}
                    #
                    # LRO
                    #
                    @case "LongRunningRequestPollUntilComplete"
                        {@longRunningPollUntilCompleteMethod(apiMethod, sample)}
                    @case "LongRunningFlattenedPollUntilComplete"
                        {@longRunningPollUntilCompleteMethod(apiMethod, sample)}
                    @case "LongRunningRequestAsyncPollUntilComplete"
                        {@longRunningPollUntilCompleteAsyncMethod(apiMethod, sample)}
                    @case "LongRunningFlattenedAsyncPollUntilComplete"
                        {@longRunningPollUntilCompleteAsyncMethod(apiMethod, sample)}
                    #
                    # gRPC streaming
                    #
                    @case "RequestStreamingBidi"
                        {@streamingBidiMethod(apiMethod, sample)}
                    @case "FlattenedStreamingBidi"
                        {@streamingBidiMethod(apiMethod, sample)}
                    @case "RequestStreamingServer"
                        {@streamingServerMethod(apiMethod, sample)}
                    @case "FlattenedStreamingServer"
                        {@streamingServerMethod(apiMethod, sample)}
                    @default
                        Unrecognized callingForm: {@sample.callingForm}
                    @end
                }

                // [END {@sample.regionTag}]
                    
                public class {@sampleClass.name}Main
                {
                    public static void Main(string[] args)
                    {
                        {@processCliArguments(sample, @sampleClass.name)}
                    }
                    @if sample.sampleInitCode.argDefaultParams

                        {@optionsClass(sample, apiMethod)}
                    @end
                }
            }

        @end
    @end
@end

# SampleFunctionDocView
@private processDoc(doc)
    @if doc.mainDocLines.size
        /// <summary>
        @join line : @doc.mainDocLines
            /// {@line}
        @end
        /// </summary>
    @end

    @join paramDoc : doc.paramDocLines
        @join line : paramDoc
            /// {@line}
        @end
    @end
@end
