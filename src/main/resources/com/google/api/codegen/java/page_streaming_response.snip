@extends "java/common.snip"

@snippet generate(pagedResponseClasses)
  {@license()}
  package {@pagedResponseClasses.packageName};

  {@importList(pagedResponseClasses.imports)}

  // AUTO-GENERATED DOCUMENTATION AND CLASS
  /**
   * Wrapper class to contain paged response types for page streaming methods.
   * Each static class inside this wrapper class is used as the return type of
   * one of an API method that implements the page streaming pattern.
   */
  @@javax.annotation.Generated("by GAPIC")
  public class {@pagedResponseClasses.name} {

    @join pagedResponseClass : pagedResponseClasses.pagedResponseWrapperList
      public static class {@pagedResponseClass.name} extends \
          PagedListResponseImpl<{@pagedResponseClass.requestTypeName}, {@pagedResponseClass.responseTypeName}, {@pagedResponseClass.resourceTypeName}> {

        public {@pagedResponseClass.name}(
            UnaryCallable<{@pagedResponseClass.requestTypeName}, {@pagedResponseClass.responseTypeName}> callable,
            PagedListDescriptor<{@pagedResponseClass.requestTypeName}, {@pagedResponseClass.responseTypeName}, {@pagedResponseClass.resourceTypeName}> pageDescriptor,
            {@pagedResponseClass.requestTypeName} request,
            CallContext context) {
          super(callable, pageDescriptor, request, context);
        }
        {@iterateMethods(pagedResponseClass)}
      }

    @end
  }
@end

@private iterateMethods(pagedResponseClass)
  @join iterateMethod : pagedResponseClass.iterateMethods
    public Iterable<{@iterateMethod.overloadResourceTypeName}> {@iterateMethod.overloadResourceTypeIterateMethodName}() {
      return Iterables.transform({@iterateMethod.iterateMethodName}(), new Function<{@pagedResponseClass.resourceTypeName}, {@iterateMethod.overloadResourceTypeName}>() {
          @@Override
          public {@iterateMethod.overloadResourceTypeName} apply({@pagedResponseClass.resourceTypeName} arg0) {
            return {@iterateMethod.overloadResourceTypeName}.{@iterateMethod.overloadResourceTypeParseFunctionName}(arg0);
          }
        }
      );
    }
  @end
  {@BREAK}
@end
