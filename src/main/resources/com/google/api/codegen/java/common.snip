@extends "common.snip"

@snippet toComments(commentLines)
  @join comment : commentLines
    // {@comment}
  @end
@end

@snippet license(fileHeader)
  /*
  @join line : fileHeader.copyrightLines
    {@""} * {@line}
  @end
   *
  @join line : fileHeader.licenseLines
    {@""} * {@line}
  @end
   */
@end

@snippet importList(fileImports)
  @join fileImport : fileImports
    @join import : fileImport.types
      @switch import.type
      @case "SimpleImport"
        import {@import.fullName};
      @case "OuterImport"
        import {@import.fullName};
      @case "StaticImport"
        import static {@import.fullName};
      @default
        $unhandledCase: {@import.type.toString}$
      @end
    @end
  @end
@end

@snippet renderFileHeader(fileHeader)
  {@license(fileHeader)}
  package {@fileHeader.packageName};

  {@importList(fileHeader.importSection.appImports)}
@end

@snippet paramList(params)
  @join param : params on ", "
    {@param.typeName} {@param.name}
  @end
@end

@snippet argList(args)
  @join arg : args on ", "
    {@arg}
  @end
@end

@private functionChainHelper(list)
  @join element : list on "()."
    {@element}
  @end
@end

@snippet functionChain(list)
  @let chain = functionChainHelper(list)
    {@chain}()
  @end
@end