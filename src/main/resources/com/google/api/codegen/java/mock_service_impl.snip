@extends "java/common.snip"

@snippet generate(mockServiceImpl)
  {@license()}

  package {@mockServiceImpl.packageName};

  @join import : mockServiceImpl.imports
    import {@import};
  @end

  @@javax.annotation.Generated("by GAPIC")
  public class {@mockServiceImpl.name} implements {@mockServiceImpl.grpcClassName}  {
     private ArrayList<GeneratedMessage> requests;

     public {@mockServiceImpl.name}() {
       requests = new ArrayList<>();
     }

     public List<GeneratedMessage> getRequests() {
       return requests;
     }

     public void reset() {
       requests = new ArrayList<>();
     }

     @join method : mockServiceImpl.grpcMethods
      {@grpcMethod(method)}

     @end
  }
@end

@private grpcMethod(method)
  @@Override
  @if method.isStreaming
    public StreamObserver<{@method.requestTypeName}> {@method.name}(
        StreamObserver<{@method.responseTypeName}> responseObserver) {
      System.err.println("Streaming method is not supported.");
      return null;
    }
  @else
    public void {@method.name}({@method.requestTypeName} request,
      StreamObserver<{@method.responseTypeName}> responseObserver) {
      {@method.responseTypeName} response = ({@method.responseTypeName}) responses.remove();
      requests.add(request);
      responseObserver.onNext(response);
      responseObserver.onCompleted();
    }
  @end
@end
