@extends "java/common.snip"

@snippet generate(mockServiceImpl)
  {@license()}

  package {@mockServiceImpl.packageName};

  @join import : mockServiceImpl.imports
    import {@import};
  @end

  @@javax.annotation.Generated("by GAPIC")
  public class {@mockServiceImpl.name} implements {@mockServiceImpl.grpcClassName}  {
    private ArrayList<GeneratedMessage> requests;
    private Queue<GeneratedMessage> responses;

    public {@mockServiceImpl.name}() {
      requests = new ArrayList<>();
      responses = new LinkedList<>();
    }

    public List<GeneratedMessage> getRequests() {
      return requests;
    }

    public void setResponses(List<GeneratedMessage> responses) {
      this.responses = Lists.newLinkedList(responses);
    }

    public void reset() {
      requests = new ArrayList<>();
      responses = new LinkedList<>();
    }

    @join method : mockServiceImpl.grpcMethods
     {@grpcMethod(method)}

    @end
  }
@end

@private grpcMethod(method)
  @@Override
  public void {@method.name}({@method.requestTypeName} request,
    StreamObserver<{@method.responseTypeName}> responseObserver) {
    {@method.responseTypeName} response = ({@method.responseTypeName}) responses.remove();
    requests.add(request);
    responseObserver.onNext(response);
    responseObserver.onCompleted();
  }
@end
