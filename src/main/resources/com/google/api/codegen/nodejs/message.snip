@extends "nodejs/common.snip"

@snippet generate(doc)
  {@licenseSection(doc.fileHeader)}

  @join elementDoc : doc.elementDocs on BREAK.add(BREAK)
    {@documentElement(elementDoc, toplevelHeader(elementDoc), semicolon())}
  @end
@end

@private licenseSection(fileHeader)
  {@lineComments(fileHeader.copyrightLines)}
  //
  {@lineComments(fileHeader.licenseLines)}

  // Note: this file is purely for documentation. Any contents are not expected
  // to be loaded as the JS file.
@end

@private toplevelHeader(elementDoc)
  const {@elementDoc.name} = {
@end

@private semicolon()
  ;
@end

@private empty()

@end

@private subHeader(elementDoc)
  {@elementDoc.name}: {
@end

@private documentMessage(message, header, footer)
  /**
   @if message.lines
     {@comments(message.lines)}
     @if message.properties
       *
     @end
   @end
   @if properties(message)
     {@properties(message)}
   @end
   * @@typedef {@message.name}
   * @@memberof {@message.packageName}
   * @@see [{@message.fullName} definition in proto format]{@@link {@message.fileUrl}}
   */
  {@header}
    // This is for documentation. Actual contents will be loaded by gRPC.
    @join child : message.elementDocs on ",".add(BREAK)

      {@documentElement(child, subHeader(child), empty())}
    @end
  # Note that the opening brace should be included in the header.
  }{@footer}
@end

@private documentEnum(enum, header, footer)
  /**
   @if enum.lines
     {@comments(enum.lines)}
     *
   @end
   * @@enum {number}
   * @@memberof {@enum.packageName}
   */
  {@header}
    @join value : enum.values() on ",".add(BREAK)
      @if value.lines

        /**
         {@comments(value.lines)}
         */

      @end
      {@value.name}: {@value.number}
    @end
  }{@footer}
@end

@private properties(message)
  @join property : message.properties
    * @@property {{@property.typeName}} {@property.paramName}
    @if propertyComments(property)
      {@propertyComments(property)}
    @end
    *
  @end
@end

@private propertyComments(property)
  @join line : property.lines
    *   {@line}
  @end
@end

@private documentElement(doc, header, footer)
  @switch doc.type
  @case "GrpcMessageDocView"
    {@documentMessage(doc, header, footer)}
  @case "GrpcEnumDocView"
    {@documentEnum(doc, header, footer)}
  @default
    {@unhandledCase()}
  @end
@end
