
var google = require('googleapis');
var pubsub = google.pubsub('v1');
var GoogleAuth = require('google-auth-library');

(new GoogleAuth).getApplicationDefault(function(err, authClient) {
  if (err === null) {
    if (authClient.createScopedRequired && authClient.createScopedRequired()) {
      var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
      authClient = authClient.createScoped(scopes);
    }

    var request = {
      auth: authClient
    };

    // TODO: Change placeholders below to values for parameters to the 'list' method:

    // * The text to detect
    request.q = [];

    translate.detections.list(request, function(error, result) {
      if (error) {
        console.log(error);
      } else {
        console.log(result);
      }
    });
   }
});
var google = require('googleapis');
var pubsub = google.pubsub('v1');
var GoogleAuth = require('google-auth-library');

(new GoogleAuth).getApplicationDefault(function(err, authClient) {
  if (err === null) {
    if (authClient.createScopedRequired && authClient.createScopedRequired()) {
      var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
      authClient = authClient.createScoped(scopes);
    }

    var request = {
      auth: authClient
    };

    // TODO: Change placeholders below to values for parameters to the 'list' method:


    translate.languages.list(request, function(error, result) {
      if (error) {
        console.log(error);
      } else {
        console.log(result);
      }
    });
   }
});
var google = require('googleapis');
var pubsub = google.pubsub('v1');
var GoogleAuth = require('google-auth-library');

(new GoogleAuth).getApplicationDefault(function(err, authClient) {
  if (err === null) {
    if (authClient.createScopedRequired && authClient.createScopedRequired()) {
      var scopes = ['https://www.googleapis.com/auth/cloud-platform'];
      authClient = authClient.createScoped(scopes);
    }

    var request = {
      auth: authClient
    };

    // TODO: Change placeholders below to values for parameters to the 'list' method:

    // * The text to translate
    request.q = [];
    // * The target language into which the text should be translated
    request.target = "";

    translate.translations.list(request, function(error, result) {
      if (error) {
        console.log(error);
      } else {
        console.log(result);
      }
    });
   }
});
